<?xml version="1.0" encoding="ISO-8859-1"?>
<DbProcList>
	<row ProcId="-1" StudyName="*" ProcName="CalculateTertial" ProcDesc="Beregner tertial" ProcParams=":SomeDate, :StartsAt,:EndsAt" ListId="UTIL" GrantTo="public" LastUpdate="2014-05-12T12:42:12.923Z">
		<![CDATA[CREATE PROCEDURE dbo.CalculateTertial( @SomeDate DateTime, @StartsAt DateTime OUTPUT, @EndsAt DateTime OUTPUT )
AS
BEGIN
  DECLARE @m INTEGER;
  DECLARE @y INTEGER;
  SET @m = DATEPART( month, @SomeDate);   
  SET @y = DATEPART( year, @SomeDate );   
  IF @m < 5 SET @m=1 ELSE IF @m < 9 SET @m=5 ELSE SET @m = 9;
  SET @StartsAt = DATEADD(month,@m-1,DATEADD(year,@y-1900,0));
  SET @EndsAt = DATEADD(second,-1,DATEADD(month,4,@StartsAt));
END]]>
	</row>
	<row ProcId="1" StudyName="*" ProcName="GetCaseList" ProcDesc="001. Aktive pasienter" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-08-05T11:48:21.003Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseList( @StudyId INT ) AS
BEGIN
  SELECT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName,ss.StatusText AS InfoText,
    sc.HandledBy, up.Signature as PrimaryContactSign,up.FullName as PrimaryContactName,
    p.GenderId, p.NationalId
  FROM StudCase sc
    JOIN ViewActiveCaseListStub vcl ON sc.PersonId=vcl.PersonId AND vcl.StudyId=sc.StudyId
    JOIN Person p ON p.PersonId=vcl.PersonId
    LEFT OUTER JOIN dbo.StudyStatus ss ON ss.StatusId=sc.FinState AND ss.StudyId=sc.StudyId
    LEFT OUTER JOIN dbo.UserList ul ON ul.UserId=sc.HandledBy
    LEFT OUTER JOIN dbo.Person up ON up.PersonId=ul.PersonId 
  WHERE sc.StudyId=@StudyId
  ORDER BY vcl.FullName
END]]>
	</row>
	<row ProcId="2" StudyName="*" ProcName="GetCaseListUnsignedForms" ProcDesc="002a. Mine usignerte skjema (UserId)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListUnsignedForms( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, mf.FormTitle + ', ' + dbo.LongTime( ce.EventTime) as InfoText
  FROM ViewActiveCaseListStub v
    JOIN dbo.ClinEvent ce ON ce.PersonId=v.PersonId
    JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId AND cf.CreatedBy = user_id() AND cf.SignedAt IS NULL and cf.DeletedAt IS NULL
    JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
    WHERE v.StudyId=@StudyId
  ORDER BY ce.EventTime
END]]>
	</row>
	<row ProcId="3" StudyName="*" ProcName="GetCaseListUnsignedFormsByPerson" ProcDesc="002b. Mine usignerte skjema (PersonId)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListUnsignedFormsByPerson( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, 
    mf.FormTitle + ', ' + dbo.LongTime( ce.EventTime) as InfoText,
    ulf.UserId as FormUserId,me.UserId as MyUserId
  FROM ViewActiveCaseListStub v
    JOIN dbo.ClinEvent ce ON ce.PersonId=v.PersonId
    JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId AND cf.SignedAt IS NULL and cf.DeletedAt IS NULL
    JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId    
    JOIN dbo.UserList ulf ON ulf.UserId=cf.CreatedBy
    JOIN dbo.UserList me ON me.UserId=USER_ID() AND me.PersonId=ulf.PersonId 
    WHERE v.StudyId=@StudyId
  ORDER BY ce.EventTime
END]]>
	</row>
	<row ProcId="5" StudyName="*" ProcName="GetCaseListUnwrittenRx" ProcDesc="003. Utskriftskø for resepter" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListUnwrittenRx( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,convert(varchar,dp.CreatedAt,104) + ' - ' + dt.DrugName AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.DrugTreatment dt ON dt.PersonId=v.PersonId
  JOIN dbo.DrugPrescription dp ON dp.TreatId=dt.TreatId
  WHERE v.StudyId=@StudyId AND dp.PrintedAt IS NULL AND dp.DeletedAt IS NULL
  ORDER BY dp.CreatedAt DESC
END]]>
	</row>
	<row ProcId="6" StudyName="*" ProcName="GetCaseListNews" ProcDesc="Aktivitet: Alle skjema siste døgn" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNews( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListNewForms @StudyId,1
END]]>
	</row>
	<row ProcId="7" StudyName="*" ProcName="GetCaseListMyWeek" ProcDesc="Aktivitet: Mine skjema siste   7 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListMyWeek( @StudyId INT ) AS
BEGIN
  DECLARE @UserId INT;
  SET @UserId = USER_ID();
  EXEC GetCaseListNewForms @StudyId,7,@UserId;
END]]>
	</row>
	<row ProcId="8" StudyName="*" ProcName="GetCaseListMyMonth" ProcDesc="Aktivitet: Mine skjema siste  30 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListMyMonth( @StudyId INT ) AS
BEGIN
  DECLARE @UserId INT;
  SET @UserId = USER_ID();
  EXEC GetCaseListNewForms @StudyId,30,@UserId;
END]]>
	</row>
	<row ProcId="9" StudyName="*" ProcName="GetCaseListMyYear" ProcDesc="Aktivitet: Mine skjema siste 365 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListMyYear( @StudyId INT ) AS
BEGIN
  DECLARE @UserId INT;
  SET @UserId = USER_ID();
  EXEC GetCaseListNewForms @StudyId,365,@UserId;
END]]>
	</row>
	<row ProcId="10" StudyName="*" ProcName="GetCaseListNoForm" ProcDesc="Personer: Aktive uten skjema" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNoForm( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,'Opprettet ' + dbo.ShortTime( sc.CreatedAt ) as InfoText
  FROM ViewActiveCaseListStub v
  JOIN StudCase sc ON sc.PersonId=v.PersonId AND sc.StudyId=v.StudyId
  WHERE v.StudyId=@StudyId 
  AND NOT EXISTS ( SELECT ce.EventId FROM ClinEvent ce WHERE ce.PersonId=v.PersonId and ce.StudyId=v.StudyId );
END]]>
	</row>
	<row ProcId="11" StudyName="*" ProcName="GetCaseListInactive" ProcDesc="Personer: Inaktive" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListInactive( @StudyId INT ) AS
BEGIN
  SELECT DISTINCT vcl.PersonId,vcl.DOB,vcl.FullName,sg.GroupName,ss.StatusText as InfoText
  FROM ViewCaseListStub vcl
    JOIN StudCase sc ON sc.PersonId=vcl.PersonId and sc.StudyId=@StudyId
    LEFT OUTER JOIN dbo.StudyGroup sg on sg.GroupId=sc.GroupId and sg.StudyId=sc.StudyId
    LEFT OUTER JOIN dbo.StudyStatus ss on ss.StatusId=sc.FinState and ss.StudyId=sc.StudyId
  WHERE (ss.StatusActive=0 ) or (ss.StatusActive IS NULL);
END]]>
	</row>
	<row ProcId="12" StudyName="*" ProcName="GetCaseListMyRelations" ProcDesc="Personer: Mine relasjoner" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-08-07T12:31:45.753Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListMyRelations( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,r.RelName as InfoText,p.NationalId
  FROM ViewActiveCaseListStub v
    JOIN Person p ON p.PersonId=v.PersonId     
    JOIN ClinRelation cr on cr.PersonId=v.PersonId AND cr.UserId=user_id()
    JOIN UserList ul on ul.UserId=cr.UserId
    LEFT OUTER JOIN Person up on up.PersonId=ul.PersonId
    JOIN MetaRelation r on r.RelId=cr.RelId
  WHERE v.StudyId=@StudyId AND cr.ExpiresAt > getdate() 
  ORDER BY v.FullName
END]]>
	</row>
	<row ProcId="13" StudyName="*" ProcName="GetCaseListAlert" ProcDesc="Varslinger: Alle aktive" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListAlert( @StudyId INT ) AS
BEGIN
  SELECT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName, l.LevelDesc + ': ' + a.AlertHeader AS InfoText
  FROM ViewActiveCaseListStub vcl 
    JOIN dbo.Alert a ON a.PersonId=vcl.PersonId AND ( a.StudyId=vcl.StudyId or a.StudyId IS NULL ) 
    JOIN MetaAlertLevel l ON (l.AlertLevel=a.AlertLevel)
  WHERE ( vcl.StudyId=@StudyId) AND ( a.AlertLevel > 1 ) AND ( a.HideUntil IS NULL or a.HideUntil<=GetDate())
  ORDER BY a.AlertLevel DESC,vcl.PersonId
END]]>
	</row>
	<row ProcId="14" StudyName="*" ProcName="GetCaseListTest" ProcDesc="Personer: Testpasienter" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListTest ( @StudyId INT ) AS
BEGIN
  SELECT PersonId,DOB,FullName,GroupName from ViewCaseListStub where StudyId=@StudyId and GroupName like 'Test%'
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="15" StudyName="*" ProcName="GetCaseListNewsweek" ProcDesc="Aktivitet: Alle skjema siste  7 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNewsweek( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListNewForms @StudyId,7
END]]>
	</row>
	<row ProcId="16" StudyName="*" ProcName="MetadataUpdate" ProcDesc="Superbruker: Oppdater metadata" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.MetadataUpdate( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  IF NOT EXISTS( SELECT * FROM MetaProfession WHERE ProfType= 'KE' )
  BEGIN
   INSERT INTO MetaProfession (ProfName,OID9060) VALUES( 'Klinisk Ernæringsfysiolog', 'KE')
  END
  IF NOT EXISTS( SELECT * FROM MetaRelation WHERE ProfType = 'KE' )
  BEGIN
   INSERT INTO MetaRelation (ProfType,RelName,RelDuration) VALUES( 'KE', 'Fast kontakt', 365 )
   INSERT INTO MetaRelation (ProfType,RelName,RelDuration) VALUES( 'KE', 'Annen rolle', 1 )
  END;
  SELECT 0 as PersonId, getdate() as DOB, 'Oppdatering gjennomført' as FullName, 'OK' AS GroupName;
END]]>
	</row>
	<row ProcId="17" StudyName="*" ProcName="dbo.AddSchemas" ProcDesc="Superbruker: Legg til schemas" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-09-02T19:44:02.467Z">
		<![CDATA[CREATE PROCEDURE dbo.AddSchemas( @StudyId INT ) AS 
BEGIN 
  EXEC AddSchema 'ENDO';
  SELECT 0 as PersonId, getdate() as DOB, 'Lagt til schema ENDO' AS FullName, 'OK' AS GroupName, 'Oppdatering vellykket' as InfoText;
END]]>
	</row>
	<row ProcId="18" StudyName="*" ProcName="GetCaseListNewsMonth" ProcDesc="Aktivitet: Alle skjema siste 30 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNewsMonth( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListNewForms @StudyId,30
END]]>
	</row>
	<row ProcId="19" StudyName="*" ProcName="GetCaseListDuplicates" ProcDesc="Admin: Duplikater" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListDuplicates( @StudyId INT )
AS
BEGIN
  SELECT p1.PersonId,p1.DOB,p1.ReverseName as FullName,'Obs' as GroupName,
  CONVERT(VARCHAR,p2.PersonId) + ' ' + p2.ReverseName AS InfoText FROM
  Person p1 JOIN Person p2 
  ON p2.DOB=p1.DOB 
  WHERE ( p1.PersonId<>p2.PersonId AND p1.GenderId=p2.GenderId )
  AND (LTRIM(RTRIM(p1.LstName)) = LTRIM(RTRIM(p2.LstName)) )
  ORDER BY p1.DOB
END]]>
	</row>
	<row ProcId="20" StudyName="*" ProcName="GetCaseList" ProcDesc="Personer: Aktive" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[]]>
	</row>
	<row ProcId="21" StudyName="BASE" ProcName="GetCaseListNoRecentForm" ProcDesc="Personer: Aktive uten skjema" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNoRecentForm( @StudyId INT, @IgnoreDays FLOAT = 365 ) AS
BEGIN
  DECLARE @IgnoreAfter DateTime;
  SET @IgnoreAfter = getdate() - @IgnoreDays;
  -- Find everybody with a form
  SELECT v.PersonId,max(ce.EventTime) AS LastEvent
  INTO #tempWithForm
    FROM ViewActiveCaseListStub v
    JOIN ClinEvent ce ON ce.PersonId=v.PersonId
    JOIN ClinForm cf ON cf.EventId=ce.EventId AND cf.DeletedAt IS NULL
  GROUP BY v.PersonId;
  --  Select result, removing the forms newer than @IgnoreDays
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,t2.LastEvent,
  'Siste skjema: ' + ISNULL(CONVERT(VARCHAR,t2.LastEvent,104), 'Aldri') AS InfoText
  FROM ViewActiveCaseListStub v
  LEFT OUTER JOIN #tempWithForm t2 ON v.PersonId=t2.PersonId
  WHERE (t2.LastEvent < @IgnoreAfter ) OR ( t2.LastEvent IS NULL )
  ORDER BY t2.LastEvent
END]]>
	</row>
	<row ProcId="22" StudyName="BASE" ProcName="dbo.GetActiveSingleVar" ProcDesc="Utvalg på variabel og verdi" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-03-19T14:01:28.490Z">
		<![CDATA[CREATE PROCEDURE dbo.GetActiveSingleVar( @StudyId INT, @VarName VARCHAR(32), @EnumVal INT )
AS
BEGIN
  select p.PersonId,
  dbo.GetLastEnumVal( p.PersonId, @VarName) as EnumVal
  INTO #temp1
  FROM Person p;
  SELECT DISTINCT PersonId 
  INTO #temp2
  FROM #temp1 
  WHERE ( EnumVal = @EnumVal );
  SELECT p.PersonId,p.DOB,p.ReverseName as FullName,sg.GroupName,ss.StatusText as InfoText,p.GenderId
  FROM #temp2 t2 
  JOIN Person p ON p.PersonId=t2.PersonId
  JOIN StudCase sc ON sc.PersonId=t2.PersonId
  JOIN StudyStatus ss ON ss.StudyId=sc.StudyId AND ss.StatusId=sc.FinState AND ss.StatusActive=1 
  JOIN StudyGroup sg ON sg.StudyId=sc.StudyId AND sg.GroupId=sc.GroupId AND sg.GroupActive=1
  WHERE sc.StudyId=@StudyId
END]]>
	</row>
	<row ProcId="23" StudyName="*" ProcName="dbo.GetAndRemoveStudyCasesWithoutForms" ProcDesc="Admin: Fjern alle uten skjema" ProcParams=":StudyId" ListId="CASE" GrantTo="superuser" LastUpdate="2015-04-24T14:53:35.630Z">
		<![CDATA[CREATE PROCEDURE dbo.GetAndRemoveStudyCasesWithoutForms( @StudyId INT ) AS
BEGIN
  SELECT sc.StudCaseId, sc.PersonId, count(EventId)AS Antall
  INTO #temp
  FROM StudCase sc 
  LEFT outer JOIN ClinEvent ce on sc.StudyId=ce.StudyId and sc.PersonId=ce.PersonId
  WHERE sc.StudyId=@StudyId
  GROUP BY sc.StudCaseId, sc.PersonId
  HAVING COUNT(EventId) = 0;
  DELETE FROM dbo.StudCaseLog WHERE StudCaseId IN ( SELECT StudCaseId FROM #temp );
  DELETE FROM dbo.StudCase WHERE StudCaseId IN ( SELECT StudCaseId FROM #temp );
  SELECT p.PersonId,p.DOB,p.FullName,'Fjernet' as GroupName,'Hadde ingen skjema' as InfoText
  FROM #temp t JOIN Person p on p.PersonId=t.PersonId
END]]>
	</row>
	<row ProcId="24" StudyName="BASE" ProcName="dbo.GetActiveDoubleVar" ProcDesc="Utvalg på to variabler med verdi" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-03-19T14:13:09.787Z">
		<![CDATA[CREATE PROCEDURE dbo.GetActiveDoubleVar( @StudyId INT, @VarName1 VARCHAR(32), @EnumVal1 INT, @VarName2 VARCHAR(32), @EnumVal2 INT )
AS
BEGIN
  select p.PersonId,
  dbo.GetLastEnumVal( p.PersonId, @VarName1) as EnumVal1,
  dbo.GetLastEnumVal( p.PersonId, @VarName2) as EnumVal2
  INTO #temp1
  FROM Person p;
  SELECT DISTINCT PersonId 
  INTO #temp2
  FROM #temp1 
  WHERE ( EnumVal1 = @EnumVal1 ) AND ( EnumVal2 = @EnumVal2 );
  SELECT p.PersonId,p.DOB,p.ReverseName as FullName,sg.GroupName,ss.StatusText as InfoText,p.GenderId
  FROM #temp2 t2 
  JOIN Person p ON p.PersonId=t2.PersonId
  JOIN StudCase sc ON sc.PersonId=t2.PersonId
  JOIN StudyStatus ss ON ss.StudyId=sc.StudyId AND ss.StatusId=sc.FinState AND ss.StatusActive=1 
  JOIN StudyGroup sg ON sg.StudyId=sc.StudyId AND sg.GroupId=sc.GroupId AND sg.GroupActive=1
  WHERE sc.StudyId=@StudyId
END]]>
	</row>
	<row ProcId="25" StudyName="*" ProcName="dbo.GetCaseListByNumber" ProcDesc="Personer: Alle etter løpenummer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-02-12T07:01:17.420Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListByNumber( @StudyId INT ) AS
BEGIN
  SELECT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName,ss.StatusText AS InfoText,
    sc.HandledBy, up.Signature as PrimaryContactSign,up.FullName as PrimaryContactName,
    p.GenderId
  FROM dbo.StudCase sc
    JOIN dbo.ViewCaseListStub vcl ON sc.PersonId=vcl.PersonId AND vcl.StudyId=sc.StudyId
    JOIN dbo.Person p ON p.PersonId=vcl.PersonId
    LEFT OUTER JOIN dbo.StudyStatus ss ON ss.StatusId=sc.FinState AND ss.StudyId=sc.StudyId
    LEFT OUTER JOIN dbo.UserList ul ON ul.UserId=sc.HandledBy
    LEFT OUTER JOIN dbo.Person up ON up.PersonId=ul.PersonId 
  WHERE sc.StudyId=@StudyId
  ORDER BY vcl.PersonId
END]]>
	</row>
	<row ProcId="26" StudyName="*" ProcName="dbo.GetActiveCasesWithoutId" ProcDesc="Personer: Ugyldig personnummer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-06-12T12:00:18.857Z">
		<![CDATA[CREATE PROCEDURE dbo.GetActiveCasesWithoutId ( @StudyId INT ) AS
BEGIN
  select v.*,'Personnr: '+ISNULL(p.NationalId,'(tomt)') AS InfoText 
  from ViewActiveCaseListStub v
  join Person p ON p.PersonId=v.PersonId 
  where DATALENGTH(ISNULL(p.NationalId,''))<>11
END]]>
	</row>
	<row ProcId="50" StudyName="BASE" ProcName="dbo.GetCaseListProblem" ProcDesc="Utvalg basert på diagnose" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-05-12T12:47:27.627Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProblem( @StudyId INT, @ProbCode VARCHAR(8) ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,i.ItemCode + ' ' + i.ItemName AS InfoText
  FROM ViewActiveCaseListStub v
  LEFT OUTER JOIN dbo.ClinProblem cp ON cp.PersonId=v.PersonId AND v.StudyId=@StudyId
  JOIN dbo.MetaNomListItem li ON li.ListItem=cp.ListItem
  JOIN dbo.MetaNomItem i on i.ItemId=li.ItemId
  WHERE ( i.ItemCode LIKE @ProbCode )
  ORDER BY GroupName
END]]>
	</row>
	<row ProcId="60" StudyName="BASE" ProcName="dbo.GetCaseListByFormName" ProcDesc="Utvalg basert på skjemanavn" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-06-12T09:34:18.823Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListByFormName ( @StudyId INT, @FormName VARCHAR(32) )
AS
BEGIN
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,
    'Siste: ' + CONVERT(VARCHAR,max(ce.EventTime),104) as InfoText
  FROM ViewCaseListStub p
  JOIN ClinEvent ce ON ce.PersonId=p.PersonId
  JOIN ClinForm cf ON cf.EventId=ce.EventId
  JOIN MetaForm mf ON mf.FormId=cf.FormId
  WHERE ( mf.FormName=@FormName ) AND ( cf.DeletedAt IS NULL ) AND ( p.StudyId=@StudyId )
  GROUP BY p.PersonId,p.DOB,p.FullName,p.GroupName
  ORDER BY p.FullName
END]]>
	</row>
	<row ProcId="101" StudyName="GBD" ProcName="GetCaseListFocused" ProcDesc="101. Overvåket status" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListFocused( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,p.CAVE as InfoText
  FROM ViewActiveCaseListStub v
    JOIN dbo.StudCase sc ON sc.PersonId=v.PersonId AND sc.StudyId=v.StudyId
    JOIN dbo.Person p ON  p.PersonId=v.PersonId
  WHERE v.StudyId=@StudyId AND sc.FinState = 2;
END]]>
	</row>
	<row ProcId="102" StudyName="GBD" ProcName="GetCaseListNextINR" ProcDesc="102. Marevandosering" ProcParams=":StudyId" ListId="CASE" GrantTo="public" InfoCaption="Neste dosering" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNextINR( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,'Neste dosering ' + CONVERT(varchar,MAX(co.DTVal),104) AS InfoText
    FROM ClinObservation co 
    JOIN ClinEvent ce ON ce.EventId=co.EventId 
    JOIN ViewActiveCaseListStub v on v.PersonId=ce.PersonId
    JOIN OngoingTreatment dt ON dt.PersonId=v.PersonId AND dt.ATC='B01AA03'
  WHERE v.StudyId=@StudyId AND co.VarName='WARFARIN_NEXT'  
  GROUP BY v.PersonId,v.DOB,v.FullName,v.GroupName
  ORDER BY MAX(co.DTVal)
END]]>
	</row>
	<row ProcId="103" StudyName="GBD" ProcName="GetCaseListH03AA" ProcDesc="Medikamentbruk: Thyroideasubstitusjon (H03AA)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-10-10T07:45:35.407Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListH03AA( @StudyId INT ) AS
BEGIN 
  EXEC dbo.GetCaseListDrug @StudyId,'H03AA%'
END]]>
	</row>
	<row ProcId="104" StudyName="GBD" ProcName="GetCaseListC01AA" ProcDesc="Medikamentbruk: Digitalis (C01AA)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListC01AA( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'C01AA%'
END]]>
	</row>
	<row ProcId="105" StudyName="GBD" ProcName="GetCaseListC09" ProcDesc="Medikamentbruk: ACEI/A2B (C09)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListC09( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'C09%'
END]]>
	</row>
	<row ProcId="106" StudyName="GBD" ProcName="GetCaseListJ01" ProcDesc="Medikamentbruk: Antibiotika (J01)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" InfoCaption="Antibiotikum og indikasjon" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListJ01( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'J01%'
END]]>
	</row>
	<row ProcId="107" StudyName="GBD" ProcName="GetCaseListN06A" ProcDesc="Medikamentbruk: Antidepressiva (N06A)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN06A( @StudyId INT ) AS  
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N06A%'
END]]>
	</row>
	<row ProcId="108" StudyName="GBD" ProcName="GetCaseListA10" ProcDesc="Medikamentbruk: Antidiabetika (A10)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListA10( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'A10%'
END]]>
	</row>
	<row ProcId="109" StudyName="GBD" ProcName="GetCaseListN03" ProcDesc="Medikamentbruk: Antiepileptika (N03)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN03( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N03%'
END]]>
	</row>
	<row ProcId="110" StudyName="GBD" ProcName="GetCaseListN04BA" ProcDesc="Medikamentbruk: Antiparkinson-midler (N04BA)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN04BA( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N04BA%'
END]]>
	</row>
	<row ProcId="111" StudyName="GBD" ProcName="GetCaseListN05B" ProcDesc="Medikamentbruk: Benzodiazepiner (N05B)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN05B( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N05B%'
END]]>
	</row>
	<row ProcId="112" StudyName="GBD" ProcName="GetCaseListN06D" ProcDesc="Medikamentbruk: Demensmedisin (N06D)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN06D( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N06D%'
END]]>
	</row>
	<row ProcId="113" StudyName="GBD" ProcName="GetCaseListB01AA03" ProcDesc="Medikamentbruk: Marevan (B01AA03)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListB01AA03( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'B01AA03'
END]]>
	</row>
	<row ProcId="114" StudyName="GBD" ProcName="GetCaseListN05A" ProcDesc="Medikamentbruk: Nevroleptika (N05A)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN05A( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N05A%'
END]]>
	</row>
	<row ProcId="115" StudyName="GBD" ProcName="GetCaseListNSAID" ProcDesc="Medikamentbruk: NSAID (M01A)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNSAID( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'M01A%'
END]]>
	</row>
	<row ProcId="116" StudyName="GBD" ProcName="GetCaseListN02A" ProcDesc="Medikamentbruk: Opioider (N02A)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN02A( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N02A%'
END]]>
	</row>
	<row ProcId="117" StudyName="GBD" ProcName="GetCaseListProblemE10" ProcDesc="Diagnose: Diabetes Mellitus Type-1" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProblemE10( @StudyId INT ) AS
BEGIN 
  EXECUTE dbo.GetCaseListProblem @StudyId,'E10%'
END]]>
	</row>
	<row ProcId="118" StudyName="GBD" ProcName="GetCaseListProblemE11" ProcDesc="Diagnose: Diabetes Mellitus Type-2" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProblemE11( @StudyId INT ) AS 
BEGIN
 EXECUTE dbo.GetCaseListProblem @StudyId,'E11%'
END]]>
	</row>
	<row ProcId="119" StudyName="GBD" ProcName="GetCaseListWeightMissing" ProcDesc="Ernæring: Ikke veid siste måned" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListWeightMissing( @StudyId INT ) AS
BEGIN
  /* Get list of patients with last weight date */
  SELECT vcl.PersonId,max(ce.EventTime) AS LastWeightDate
  INTO #weightDate FROM ViewActiveCaseListStub vcl
    LEFT OUTER JOIN ClinEvent ce ON ce.PersonId=vcl.PersonId
    LEFT OUTER JOIN ClinObservation co ON co.EventId=ce.EventId AND co.VarName='WEIGHT'
  WHERE vcl.StudyId=@StudyId AND ISNULL(co.Quantity,0) > 0
  GROUP BY vcl.PersonId;
  /* Select the list */
  SELECT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName, ISNULL(dbo.LongTime(wd.LastWeightDate), 'Ingen vekt registrert!' ) AS InfoText
    FROM ViewActiveCaseListStub vcl
    JOIN #weightDate wd ON wd.PersonId=vcl.PersonId
  WHERE ( vcl.StudyId=@StudyId) AND ( getdate()-wd.LastWeightDate > 30  OR wd.LastWeightDate IS NULL )
  ORDER BY wd.LastWeightDate
END]]>
	</row>
	<row ProcId="120" StudyName="GBD" ProcName="GBD.GetCaseListMust" ProcDesc="Ernæring: MUST score" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2016-02-26T15:30:57.497Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListMUST (@StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  EXEC GBD.UpdateMustScoreForAll @StudyId;
  SELECT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName, l.LevelDesc + ': ' + a.AlertHeader AS InfoText
  FROM dbo.Alert a
    JOIN dbo.ViewActiveCaseListStub vcl ON vcl.PersonId=a.PersonId
    JOIN dbo.MetaAlertLevel l ON (l.AlertLevel=a.AlertLevel)
  WHERE ( a.StudyId=@StudyId) AND ( AlertClass='MUST' ) ORDER BY a.AlertLevel DESC,vcl.PersonId
END]]>
	</row>
	<row ProcId="121" StudyName="GBD" ProcName="GetCaseListDruidHigh" ProcDesc="Interaksjoner: DRUID Rødt nivå" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListDruidHigh( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListDruidLevel @StudyId,4
END]]>
	</row>
	<row ProcId="122" StudyName="GBD" ProcName="GetCaseListDruidMedium" ProcDesc="Interaksjoner: DRUID Rødt og gult nivå" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListDruidMedium( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListDruidLevel @StudyId,2
END]]>
	</row>
	<row ProcId="123" StudyName="GBD" ProcName="GetCaseListAntiHTLowBP" ProcDesc="Forsiktighetsregler: Antihypertensiva og BT &lt; 120" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListAntiHTLowBP( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  SELECT DISTINCT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName,
    'Sys BT = ' + CONVERT(VARCHAR,CONVERT(INT,dbo.GetLastQuantity(vcl.PersonId,'SBP_UNSPEC'))) +
    ', ' + dt.DrugName AS InfoText
  FROM dbo.ViewActiveCaseListStub vcl
    JOIN dbo.DrugTreatment dt on dt.PersonId=vcl.PersonId
      and ( dt.ATC like 'C07%' or dt.ATC like 'C09%' or dt.ATC like 'C08%'
        or dt.ATC like 'C02%' OR dt.ATC like 'C03%')
      and ( dt.StopAt IS NULL OR dt.StopAt>getdate())
  WHERE vcl.StudyId=@StudyId AND dbo.GetLastQuantity(vcl.PersonId,'SBP_UNSPEC') < 120
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="124" StudyName="GBD" ProcName="GetCaseListN04BAN05A" ProcDesc="Kontraindikasjoner: Antiparkinson + nevroleptika" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN04BAN05A( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListDrugCombo @StudyId,'N05A%','N04BA%'
END]]>
	</row>
	<row ProcId="125" StudyName="GBD" ProcName="GetCaseListAF" ProcDesc="Underbehandling: Atrieflimmer m/ behandling" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-10-10T08:01:58.907Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListAF( @StudyId INT ) AS
BEGIN
  SELECT DISTINCT v.PersonId,v.DOB,v.FullName,v.GroupName,
    ISNULL(ISNULL(dt1.DrugName,ISNULL(dt2.DrugName,ISNULL(dt3.DrugName,dt4.DrugName))),'Ubehandlet') as InfoText
  FROM ViewActiveCaseListStub v
  LEFT OUTER JOIN DrugTreatment dt1 ON dt1.PersonId=v.PersonId AND dt1.ATC = 'B01AA03' AND dt1.StopAt IS NULL
  LEFT OUTER JOIN DrugTreatment dt2 ON dt2.PersonId=v.PersonId AND dt2.ATC = 'B01AE%' AND dt2.StopAt IS NULL
  LEFT OUTER JOIN DrugTreatment dt3 ON dt3.PersonId=v.PersonId AND dt3.ATC LIKE 'B01AF%' AND dt3.StopAt IS NULL
  LEFT OUTER JOIN DrugTreatment dt4 ON dt4.PersonId=v.PersonId AND dt4.ATC LIKE 'B01AC%' AND dt4.StopAt IS NULL
  LEFT OUTER JOIN dbo.ClinProblem cp ON cp.PersonId=v.PersonId
  LEFT OUTER JOIN dbo.ClinEvent ce ON ce.StudyId=v.StudyId AND ce.PersonId=v.PersonId
  LEFT OUTER JOIN dbo.ClinObservation co ON co.EventId=ce.EventId and co.VarName='EKG_AF' AND co.Quantity=1
  JOIN MetaNomListItem li ON li.ListItem=cp.ListItem
  JOIN MetaNomItem i on i.ItemId=li.ItemId AND i.ItemCode like 'I48%'
  WHERE v.StudyId = @StudyId
  ORDER BY GroupName
END]]>
	</row>
	<row ProcId="126" StudyName="GBD" ProcName="GetCaseListC09LowGFR" ProcDesc="Forsiktighetsregler: Bruker ACEI/A2-blokker med GFR &lt; 60" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListC09LowGFR( @StudyId INT ) AS
BEGIN
  DECLARE @CalcDate DateTime;
  SET NOCOUNT ON;
  SET @CalcDate = getdate();
  SELECT DISTINCT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName,
    'GFR = ' + CONVERT(VARCHAR,dbo.GetMDRD(vcl.PersonId,@CalcDate)) +
    ', ' + dt.DrugName AS InfoText
  FROM dbo.ViewActiveCaseListStub vcl
    JOIN dbo.DrugTreatment dt on dt.PersonId=vcl.PersonId
      and ( dt.ATC like 'C09%' ) and ( StopAt IS NULL OR StopAt>getdate())
  WHERE vcl.StudyId=@StudyId AND dbo.GetMDRD(vcl.PersonId,@CalcDate) < 60
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="127" StudyName="GBD" ProcName="GetCaseListMetforminGFR" ProcDesc="Forsiktighetsregler: Metformin og GFR verdi" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListMetforminGFR( @StudyId INT ) AS
BEGIN
  DECLARE @CalcAt DateTime;
  SET @CalcAt = getdate();
  SELECT DISTINCT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName,dbo.GetMDRD( vcl.PersonId,@CalcAt ) AS GFR,
  '....................................................................' as InfoText
  INTO #temp FROM dbo.OngoingTreatment dt
    JOIN ViewActiveCaseListStub vcl ON vcl.PersonId=dt.PersonId AND vcl.StudyId=@StudyId
    JOIN dbo.OngoingTreatment d on d.PersonId=vcl.PersonId and d.ATC like 'A10BA02';
  UPDATE #temp SET InfoText = ( 'eGFR = ' + CONVERT(VARCHAR,GFR) + ' mL/min/1.73m2' ) WHERE NOT GFR IS NULL;
  UPDATE #temp SET InfoText = ( 'OBS eGFR = ' + CONVERT(VARCHAR,GFR) + ' mL/min/1.73m2. Vurder å seponere metformin.' ) WHERE GFR<60;
  UPDATE #temp SET InfoText = ( 'eGFR > 80' ) WHERE GFR > 80;
  UPDATE #temp SET InfoText = ( 'Oppdatert S-Kreatinin mangler!' ),GFR=-1 WHERE GFR IS NULL;
  SELECT Personid,DOB,FullName,GroupName,InfoText FROM #temp order by GFR;
END]]>
	</row>
	<row ProcId="128" StudyName="GBD" ProcName="GetCaseListProBNP" ProcDesc="Underbehandling: ProBNP &gt; 180 uten ACEI/A2RB" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2016-02-29T09:17:14.887Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProBNP (@StudyId INT) AS
BEGIN
  SET NOCOUNT ON;
  SELECT v.*, a.LabDate, a.NumResult, a.ResultId,
    'ProBNP = ' + CONVERT(VARCHAR, a.NumResult) + ' den ' + CONVERT(VARCHAR, a.LabDate, 104) + '.' AS InfoText
  FROM (SELECT PersonId, LabDate, NumResult, ResultId, RANK() OVER (PARTITION BY PersonId ORDER BY LabDate DESC) AS OrderNo
    FROM dbo.LabData ld
    JOIN dbo.LabCode lc
      ON lc.LabCodeId = ld.LabCodeId
    WHERE lc.LabClassId = 140 ) a
  JOIN dbo.ViewActiveCaseListStub v ON v.StudyId = @StudyId AND v.PersonId = a.PersonId
  WHERE a.OrderNo = 1  AND a.NumResult > 180
  AND NOT v.PersonId IN ( SELECT PersonId FROM dbo.OngoingTreatment ot WHERE ot.ATC LIKE 'C09%' )
  ORDER BY a.NumResult DESC
END

]]>
	</row>
	<row ProcId="129" StudyName="GBD" ProcName="GetCaseListWarfarinNSAID" ProcDesc="Kontraindikasjoner: Warfarin + NSAIDs" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListWarfarinNSAID( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListDrugCombo @StudyId,'B01AA03','M01A%'
END]]>
	</row>
	<row ProcId="130" StudyName="GBD.Deprecated" ProcName="GetCaseListProblemI48" ProcDesc="Diagnose: Atrieflimmer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProblemI48( @StudyId INT ) AS 
BEGIN
  EXECUTE dbo.GetCaseListProblem @StudyId,'I48%'
END]]>
	</row>
	<row ProcId="131" StudyName="GBD.OLD" ProcName="GetCaseListLastBerger" ProcDesc="Prosess: Siste Berger" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2016-03-19T08:41:49.417Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListLastBerger( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId, 'BERGER'
END
]]>
	</row>
	<row ProcId="132" StudyName="GBD" ProcName="GetCaseListLastHulten" ProcDesc="Prosess: Siste Hulten" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListLastHulten( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId, 'HULTEN'
END
]]>
	</row>
	<row ProcId="133" StudyName="GBD" ProcName="GetCaseListOldLab" ProcDesc="Prosess: Siste labdata (eksterne)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListOldLab( @StudyId INT ) AS
BEGIN
  /* Get list of last lab dates */
  SELECT PersonId,Max(LabDate) AS LabDate
  INTO #tempLab FROM LabData GROUP BY PersonId;
  /* Select the list */
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,dbo.LongTime(tl.LabDate) AS InfoText
  FROM ViewActiveCaseListStub p
    JOIN #tempLab tl ON tl.PersonId=p.PersonId
  WHERE p.StudyId=@StudyId
  ORDER BY tl.LabDate
END]]>
	</row>
	<row ProcId="134" StudyName="GBD" ProcName="GetCaseListLastMMSE" ProcDesc="Prosess: Siste MMS" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListLastMMSE( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId, 'MMSE_INPATIENT'
END
]]>
	</row>
	<row ProcId="136" StudyName="GBD" ProcName="GetCaseListC07" ProcDesc="Medikamentbruk: Betablokker (C07)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListC07( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'C07%'
END]]>
	</row>
	<row ProcId="137" StudyName="GBD" ProcName="GetCaseListC08" ProcDesc="Medikamentbruk: Kalsiumantagonister (C08)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListC08( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'C08%'
END]]>
	</row>
	<row ProcId="138" StudyName="GBD" ProcName="GetCaseListN02BE" ProcDesc="Medikamentbruk: Paracetamol (N02BE)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN02BE( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N02BE%'
END]]>
	</row>
	<row ProcId="139" StudyName="GBD" ProcName="GetCaseListC03" ProcDesc="Medikamentbruk: Diuretika (C03)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListC03( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'C03%'
END]]>
	</row>
	<row ProcId="140" StudyName="GBD" ProcName="GetCaseListProBNPgt223" ProcDesc="Forskning: ProBNP &gt; 223" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2016-02-29T09:17:32.083Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProBNPgt223 (@StudyId INT) AS
BEGIN
  SET NOCOUNT ON;
  SELECT v.*, a.LabDate, a.NumResult, a.ResultId,
    'ProBNP = ' + CONVERT(VARCHAR, a.NumResult) + ' den ' + CONVERT(VARCHAR, a.LabDate, 104) + '.' AS InfoText
  FROM (SELECT PersonId, LabDate, NumResult, ResultId, RANK() OVER (PARTITION BY PersonId ORDER BY LabDate DESC) AS OrderNo
    FROM dbo.LabData ld
    JOIN dbo.LabCode lc
      ON lc.LabCodeId = ld.LabCodeId
    WHERE lc.LabClassId = 140 AND ld.NumResult > 223 ) a
  JOIN dbo.ViewActiveCaseListStub v ON v.StudyId = @StudyId AND v.PersonId = a.PersonId
  WHERE a.OrderNo = 1
  ORDER BY a.NumResult DESC
END]]>
	</row>
	<row ProcId="141" StudyName="GBD" ProcName="GBD.GetCaseListTvangsvedtak" ProcDesc="Tvang: Aktive vedtak" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="512" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListTvangsvedtak( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,
    'Vedtak ' + CONVERT(VARCHAR,tv.EventTime,4) + ' gyldig til ' + CONVERT(VARCHAR,tv.StopDate,4) AS InfoText
  FROM dbo.ViewActiveCaseListStub p
  JOIN GBD.Tvangsvedtak tv ON tv.StudyId=p.StudyId AND tv.PersonId=p.PersonId AND tv.StudyId=@StudyId
  WHERE tv.StopDate >= getdate();
END]]>
	</row>
	<row ProcId="142" StudyName="GBD" ProcName="GBD.GetCaseListNoMMSLastYear" ProcDesc="Prosess: Ikke MMS siste år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNoMMSLastYear( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId,'MMSE_INPATIENT',365
END]]>
	</row>
	<row ProcId="143" StudyName="GBD.OLD" ProcName="GBD.GetCaseListNoBergerSixMonths" ProcDesc="Prosess: Ikke Berger siste 6 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2016-03-19T08:41:51.410Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNoBergerSixMonths( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId,'BERGER',180
END]]>
	</row>
	<row ProcId="144" StudyName="GBD" ProcName="GBD.GetCaseListNoHulten3Months" ProcDesc="Prosess: Ikke Hulten siste 3 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNoHulten3Months( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId,'HULTEN',90
END]]>
	</row>
	<row ProcId="145" StudyName="GBD" ProcName="GBD.GetCaseListNoECG6Months" ProcDesc="Prosess: Ikke EKG siste 6 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNoECG6Months( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId,'GBD_EKG',180
END]]>
	</row>
	<row ProcId="146" StudyName="GBD" ProcName="GetCaseListBPMissing" ProcDesc="Prosess: Ikke BT siste 60 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListBPMissing( @StudyId INT, @DaysBack FLOAT = 60 ) AS
BEGIN
  -- Get BP for active cases
  SELECT v.PersonId,max(ce.EventTime) AS BPDate INTO #tempTable FROM ViewActiveCaseListStub v
    JOIN ClinEvent ce ON ce.PersonId=v.PersonId AND v.StudyId=@StudyId
    JOIN ClinObservation co ON co.EventId=ce.EventId
    WHERE co.VarName IN ( 'SBP_UNSPEC','SBP') AND co.Quantity > 0
    GROUP BY v.PersonId;
  -- Join with active cases
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName, 'Siste BT: ' + ISNULL( dbo.LOngTime(t.BPDate), 'Aldri') AS InfoText
    FROM dbo.ViewActiveCaseListStub v
    LEFT OUTER JOIN #tempTable t ON t.PersonId=v.PersonId AND v.StudyId=@StudyId
  WHERE ( BPDate < getdate()-@DaysBack ) OR ( BPDate IS NULL )
  ORDER BY BPDate;
END]]>
	</row>
	<row ProcId="147" StudyName="GBD" ProcName="GetCaseListLastDocForm" ProcDesc="Prosess: Ikke legekontakt siste 90 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListLastDocForm( @StudyId INT, @IgnoreDays FLOAT = 90 ) AS
BEGIN
  DECLARE @IgnoreAfter DateTime;
  SET @IgnoreAfter = getdate() - @IgnoreDays;
  -- Find everybody with a form
  SELECT v.PersonId,max(ce.EventTime) AS LastEvent
  INTO #tempWithForm
    FROM ViewActiveCaseListStub v
    JOIN ClinEvent ce ON ce.PersonId=v.PersonId
    JOIN ClinForm cf ON cf.EventId=ce.EventId
    JOIN UserList ul ON ul.UserId=cf.CreatedBy
    JOIN MetaProfession mp ON mp.ProfId=ul.ProfId
  WHERE mp.ProfType='LE'
  GROUP BY v.PersonId;
  --  Select result, removing the forms newer than @IgnoreDays
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,t2.LastEvent,
  'Legetilsyn: ' + ISNULL(CONVERT(VARCHAR,t2.LastEvent,104), 'Aldri') AS InfoText
  FROM ViewActiveCaseListStub v
  LEFT OUTER JOIN #tempWithForm t2 ON v.PersonId=t2.PersonId
  WHERE (t2.LastEvent < @IgnoreAfter ) OR ( t2.LastEvent IS NULL )
  ORDER BY t2.LastEvent
END]]>
	</row>
	<row ProcId="148" StudyName="GBD" ProcName="GetCaseListN05B" ProcDesc="Medikamentbruk: Anxiolytika (N05B)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN05B( @StudyId INT ) AS
BEGIN 
  EXEC dbo.GetCaseListDrug @StudyId,'N05B%'
END]]>
	</row>
	<row ProcId="149" StudyName="GBD" ProcName="GetCaseListN05C" ProcDesc="Medikamentbruk: Hypnotika (N05C)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN05C( @StudyId INT ) AS
BEGIN 
  EXEC dbo.GetCaseListDrug @StudyId,'N05C%'
END]]>
	</row>
	<row ProcId="150" StudyName="GBD" ProcName="GetCaseListNoBloodTest" ProcDesc="Prosess: Ingen labdata siste 6 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNoBloodTest( @StudyId INT, @DaysBack FLOAT = 180 ) AS
BEGIN
  -- Get BP for active cases
  SELECT v.PersonId,max(ld.LabDate) AS LabDate INTO #tempTable FROM ViewActiveCaseListStub v
    JOIN LabData ld ON ld.PersonId=v.PersonId
    WHERE ld.NumResult > 0
    GROUP BY v.PersonId;
  -- Join with active cases
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName, 'Siste blodprøver: ' + ISNULL( dbo.LongTime(t.LabDate), 'Aldri') AS InfoText
    FROM dbo.ViewActiveCaseListStub v
    LEFT OUTER JOIN #tempTable t ON t.PersonId=v.PersonId AND v.StudyId=@StudyId
  WHERE ( LabDate < getdate()-@DaysBack ) OR ( LabDate IS NULL )
  ORDER BY LabDate;
END]]>
	</row>
	<row ProcId="151" StudyName="GBD" ProcName="GBD.GetCaseListAnticholinergic" ProcDesc="Forsiktighetsregler: Antikolinergika og demens" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-04-25T12:52:00.467Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAnticholinergic( @StudyId INT ) AS 
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,ot.DrugName,ac.AlertLevel,CONVERT(INT,dbo.GetLastEnumVal(v.PersonId,'BERGER_SKALA')) as Berger
  INTO #temp 
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.OngoingTreatment ot ON ot.PersonId=v.PersonId
  JOIN dbo.KBAnticholinDrug ac ON ac.ATC=ot.ATC;
  SELECT PersonId,DOB,FullName,GroupName,'Nivå ' + CONVERT(VARCHAR,AlertLevel) + ' (' + DrugName + ') Berger: ' + ISNULL(CONVERT(VARCHAR,Berger),'Ukjent') AS InfoText
  FROM #temp
  WHERE AlertLevel IN ('A','B')
  ORDER BY AlertLevel,Berger DESC,FullName
END]]>
	</row>
	<row ProcId="152" StudyName="GBD" ProcName="GBD.GetCaseListOppholdstype" ProcDesc="Personer: Oppholdstype" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListOppholdstype( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId,p.DOB,p.ReverseName as FullName,sg.GroupName,ss.StatusText as InfoText, p.BestId
  FROM Person p
  JOIN StudCase sc ON sc.PersonId=p.PersonId
  JOIN StudyStatus ss ON ss.StudyId=sc.StudyId AND ss.StatusId=sc.StatusId AND ss.StatusActive=1
  JOIN StudyGroup sg ON sg.StudyId=sc.StudyId AND sg.GroupId=sc.GroupId AND sg.GroupActive=1
  JOIN UserList ul ON ul.UserId=USER_ID() AND ul.CenterId=sg.CenterId
  WHERE sc.StudyId=@StudyId
  ORDER BY p.ReverseName
END]]>
	</row>
	<row ProcId="153" StudyName="GBD" ProcName="GetCaseListA10A" ProcDesc="Medikamentbruk: Insulin (A10A)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListA10A( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'A10A%'
END]]>
	</row>
	<row ProcId="154" StudyName="GBD.BASE" ProcName="GBD.GetCaseListAvvikMine" ProcDesc="Avvik: Alle mine avvik" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-10-15T09:59:23.780Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAvvikMine( @StudyId INT, @StartAt DateTime, @StopAt DateTime ) AS
BEGIN
  SELECT ce.PersonId, p.DOB, p.ReverseName AS FullName, sg.GroupName, p.GenderId, p.NationalId,
    'Opprettet: ' + dbo.ShortTime( ce.EventTime ) + ', ' + ISNULL(mia.OptionText,'Registrert*') AS InfoText 
  FROM dbo.ClinForm cf
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  JOIN dbo.ClinEvent ce ON ce.EventId=cf.EventId
  JOIN dbo.Person p ON p.PersonId=ce.PersonId
  JOIN dbo.StudyGroup sg ON ( sg.StudyId=ce.StudyId ) AND ( sg.GroupId=ce.GroupId ) AND ( sg.GroupActive = 1 )
  LEFT OUTER JOIN dbo.ClinObservation co ON co.EventId=ce.EventId AND co.VarName='AvvikStatus'
  LEFT OUTER JOIN dbo.MetaItemAnswer mia ON mia.ItemId=8512 AND mia.OrderNumber=co.EnumVal
  LEFT OUTER JOIN dbo.StudyUser su ON su.UserId=USER_ID() AND su.StudyId=ce.StudyId
  WHERE ( mf.FormName='GbdAvvik' ) AND ( cf.DeletedAt IS NULL )
  AND ( ce.StudyId=@StudyId ) AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  AND ( ( su.GroupId=ce.GroupId ) OR ( su.UserId IS NULL ) OR ( su.GroupId IS NULL ) OR ( su.ShowMyGroup = 0 ) )
  AND ( cf.CreatedBy=USER_ID() )
  ORDER BY ce.EventTime DESC
END]]>
	</row>
	<row ProcId="155" StudyName="GBD" ProcName="GBD.GetCaseListDiedHere" ProcDesc="Dødsfall: Skjema utfylt" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="523" LastUpdate="2013-05-30T10:24:54.970Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListDiedHere( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,v.StudyId,v.GenderId,
    'LCP3:  ' + dbo.LongTime(dbo.GetLastSignedForm(v.StudyId,v.PersonId,'LCP3')) as InfoText 
  FROM ViewCenterCaseListStub v   
  JOIN StudyCase sc ON sc.StudyId=v.StudyId and sc.PersonId=v.PersonId
  WHERE v.StudyId=@StudyId and sc.FinState=5
END]]>
	</row>
	<row ProcId="156" StudyName="GBD" ProcName="GetCaseListDiabetes" ProcDesc="Diagnose: Diabetes" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-03-29T14:22:07.773Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListDiabetes( @StudyId INT ) AS
BEGIN 
  EXECUTE dbo.GetCaseListProblem @StudyId,'E1[014]%'
END]]>
	</row>
	<row ProcId="157" StudyName="GBD.BASE" ProcName="GBD.GetCaseListAvvikOpen" ProcDesc="Avvik: Alle åpne avvik" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-10-15T09:59:10.060Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAvvikOpen( @StudyId INT, @StartAt DateTime, @StopAt DateTime ) AS
BEGIN
  SELECT ce.PersonId, p.DOB, p.ReverseName AS FullName, sg.GroupName, p.GenderId, p.NationalId,
    'Opprettet: ' + dbo.ShortTime( ce.EventTime ) + ', ' + ISNULL(mia.OptionText,'Registrert*') AS InfoText 
  FROM dbo.ClinForm cf
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  JOIN dbo.ClinEvent ce ON ce.EventId=cf.EventId
  JOIN dbo.Person p ON p.PersonId=ce.PersonId      
  JOIN dbo.UserList ul ON ul.UserId=USER_ID()
  JOIN dbo.StudyGroup sg ON ( sg.StudyId=ce.StudyId ) AND ( sg.GroupId=ce.GroupId ) AND ( sg.GroupActive = 1 ) AND ( sg.CenterId=ul.CenterId )
  LEFT OUTER JOIN dbo.ClinObservation co ON co.EventId=ce.EventId AND co.VarName='AvvikStatus'
  LEFT OUTER JOIN dbo.MetaItemAnswer mia ON mia.ItemId=8512 AND mia.OrderNumber=co.EnumVal
  LEFT OUTER JOIN dbo.StudyUser su ON su.UserId=USER_ID() AND su.StudyId=ce.StudyId
  WHERE ( mf.FormName='GbdAvvik' ) AND ( ISNULL(co.EnumVal,-1) <> 3 ) AND ( cf.DeletedAt IS NULL )
  AND ( ce.StudyId=@StudyId ) AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  AND ( ( su.GroupId=ce.GroupId ) OR ( su.UserId IS NULL ) OR ( su.GroupId IS NULL ) OR ( su.ShowMyGroup = 0 ) )
  ORDER BY ce.EventTime DESC
END]]>
	</row>
	<row ProcId="158" StudyName="GBD" ProcName="GBD.GetCaseListAvvikOpenThisTertial" ProcDesc="Avvik: Åpne avvik dette tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-05-12T12:59:32.390Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAvvikOpenThisTertial( @StudyId INT ) AS
BEGIN
  DECLARE @StartAt DateTime;
  DECLARE @StopAt DateTime; 
  DECLARE @KeyDate DateTime;
  SET @KeyDate = GETDATE();
  EXEC dbo.CalculateTertial @KeyDate, @StartAt OUTPUT, @StopAt OUTPUT;
  EXEC GBD.GetCaseListAvvikOpen @StudyId, @StartAt, @StopAt; 
END
]]>
	</row>
	<row ProcId="159" StudyName="GBD" ProcName="GBD.GetCaseListAvvikOpenLastTertial" ProcDesc="Avvik: Åpne avvik forrige tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-05-12T12:59:29.440Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAvvikOpenLastTertial( @StudyId INT ) AS
BEGIN
  DECLARE @StartAt DateTime;
  DECLARE @StopAt DateTime; 
  DECLARE @KeyDate DateTime;
  SET @KeyDate = DATEADD( MONTH, -4, GETDATE() );
  EXEC dbo.CalculateTertial @KeyDate, @StartAt OUTPUT, @StopAt OUTPUT;
  EXEC GBD.GetCaseListAvvikOpen @StudyId, @StartAt, @StopAt; 
END]]>
	</row>
	<row ProcId="160" StudyName="GBD" ProcName="GBD.GetCaseListAvvikMineThisTertial" ProcDesc="Avvik: Mine avvik dette tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-06-06T11:48:46.693Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAvvikMineThisTertial( @StudyId INT ) AS
BEGIN
  DECLARE @StartAt DateTime;
  DECLARE @StopAt DateTime; 
  DECLARE @KeyDate DateTime;
  SET @KeyDate = GETDATE();
  EXEC dbo.CalculateTertial @KeyDate, @StartAt OUTPUT, @StopAt OUTPUT;
  EXEC GBD.GetCaseListAvvikMine @StudyId, @StartAt, @StopAt; 
END
]]>
	</row>
	<row ProcId="161" StudyName="GBD" ProcName="GBD.GetCaseListAvvikMineLastTertial" ProcDesc="Avvik: Mine avvik forrige tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-06-06T11:48:48.553Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAvvikMineLastTertial( @StudyId INT ) AS
BEGIN
  DECLARE @StartAt DateTime;
  DECLARE @StopAt DateTime; 
  DECLARE @KeyDate DateTime;
  SET @KeyDate = DATEADD( MONTH, -4, GETDATE() );
  EXEC dbo.CalculateTertial @KeyDate, @StartAt OUTPUT, @StopAt OUTPUT;
  EXEC GBD.GetCaseListAvvikMine @StudyId, @StartAt, @StopAt; 
END]]>
	</row>
	<row ProcId="162" StudyName="GBD" ProcName="GBD.GetCaseListUnsignedInfectionForms" ProcDesc="Infeksjoner: Usignerte infeksjonsregistreringer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-04-30T09:27:14.357Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListUnsignedInfectionForms( @StudyId INT ) AS
BEGIN
  SELECT 
    p.PersonId, p.DOB, p.FullName, sg.GroupName,mf.FormTitle + ', ' + dbo.LongTime(ce.EventTime) AS InfoText,
    p.GenderId,p.NationalId
  FROM dbo.ClinForm cf
    JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
    JOIN dbo.StudyGroup sg ON sg.GroupId = ce.GroupId AND sg.StudyId = @StudyId
    JOIN dbo.UserList ul ON ul.CenterId = sg.CenterId AND ul.UserId = USER_ID()
    JOIN dbo.Person p ON p.PersonId = ce.PersonId
    JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId AND mf.FormName = 'GBD_INFECTION'
  WHERE ( cf.SignedAt IS NULL ) AND ( cf.DeletedAt IS NULL )
  ORDER BY ce.EventTime;
END]]>
	</row>
	<row ProcId="163" StudyName="GBD" ProcName="GBD.GetCaseListNorGEP" ProcDesc="NorGEP: Anbefalinger fra NorGEP" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="512" LastUpdate="2015-11-11T10:08:23.540Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNorGEP( @StudyId INT ) AS
BEGIN
 
  SELECT DISTINCT dt.PersonId,p.DOB,p.FullName,a.GroupName,dt.DrugName + ': ' + ng.Warning + ' (NorGEP ' + CONVERT(VARCHAR,ng.Id) + ')' AS InfoText,ng.Id  
  FROM DrugTreatment dt JOIN KB.NorGEP ng ON dt.ATC=ng.ATC 
    JOIN ViewActiveCaseListStub a ON a.PersonId=dt.PersonId AND StudyId=@StudyId
    JOIN Person p ON p.PersonId=a.PersonId   
  WHERE  ( ( dt.StopAt IS NULL ) OR ( dt.StopAt > getdate() ) ) 
    AND ( ( ng.MaxDose IS NULL ) OR ( ng.MaxDose < dt.Dose24HDD ) OR ( dt.Dose24hDD IS NULL ) )
    AND ( ( p.DOB < getdate()-365.25*AgeLow ) AND ( p.DOB > getdate()-365.24*AgeHigh ) )                                                                 

  UNION
  
  SELECT PersonId,DOB,FullName,GroupName, AlertHeader + ': ' + Warning + ' (NorGEP ' + CONVERT(VARCHAR,NgId) + ')' AS InfoText, ngId
  FROM KB.ViewNorGEPInteractions WHERE StudyId=@StudyId
  
  UNION
  
  SELECT a.PersonId, a.DOB, a.FullName, a.GroupName, n.Warning + '(NorGEP 36, n=' + CONVERT(VARCHAR,v.DrugCount) + ')' as InfoText,36 as Id FROM KB.ViewNorGEPPoly v 
  JOIN ViewActiveCaseListStub a ON a.PersonId=v.PersonId AND a.StudyId=@StudyId    
  JOIN KB.NorGEP n ON n.Id=36
  
  ORDER BY ng.Id
  
END]]>
	</row>
	<row ProcId="164" StudyName="GBD" ProcName="GBD.GetCaseListProblemI50" ProcDesc="Diagnose: Hjertevikt" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2016-02-28T14:14:34.790Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListProblemI50( @StudyId INT ) AS
BEGIN 
  EXECUTE dbo.GetCaseListProblem @StudyId,'I50%'
END]]>
	</row>
	<row ProcId="201" StudyName="NDV.BASE" ProcName="NDV.GetPumpWithHighHbA1c" ProcDesc="Utvalg av Type-1 m/pumpe basert på alder og HbA1c-verdier" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T07:59:28.400Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPumpWithHighHbA1c( @StudyId INT, @AgeMin FLOAT, @AgeMax FLOAT, @HbA1cCutoff FLOAT ) AS
BEGIN
  -- Create temporary table
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,dbo.GetLastValue(PersonId,'HBA1C') AS HbA1c INTO #temp
  FROM NDV.Type1InsulinPump p WHERE p.Age >= @AgeMin AND p.Age < @AgeMax;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'HbA1c = ' + SUBSTRING(CONVERT(VARCHAR,HbA1c),1,4) as InfoText 
  FROM #temp WHERE HbA1c >= @HbA1cCutoff
  ORDER BY HbA1c DESC
END]]>
	</row>
	<row ProcId="202" StudyName="NDV.BASE" ProcName="NDV.GetType2WithHighBP" ProcDesc="Utvalg av Type-2 etter blodtrykk" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithHighBP( @StudyId INT, @SysBpCutoff FLOAT ) AS
BEGIN
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastQuantity(PersonId,'SYSBP') AS SysBP INTO #temp
  FROM NDV.Type2;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'SysBT = ' + CONVERT(VARCHAR,SysBP) as InfoText 
  FROM #temp WHERE SysBP >= @SysBPCutoff
  ORDER BY SysBP DESC
END]]>
	</row>
	<row ProcId="203" StudyName="NDV.BASE" ProcName="NDV.GetType2WithHighLDL" ProcDesc="Utvalg av Type-2 etter LDL" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithHighLDL( @StudyId INT, @LDLCutoff FLOAT, @MinAge INT = 18 ) AS
BEGIN
  DECLARE @LastDOB DateTime;
  SET @LastDOB = DATEADD( year, -@MinAge,getdate() )
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastLab(PersonId,'LDL') AS LDL INTO #temp
  FROM NDV.Type2 WHERE DOB <= @LastDOB;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'LDL = ' + CONVERT(VARCHAR,LDL) as InfoText 
  FROM #temp WHERE LDL >= @LDLCutoff
  ORDER BY LDL DESC
END]]>
	</row>
	<row ProcId="204" StudyName="NDV.BASE" ProcName="NDV.GetType1WithHighLDL" ProcDesc="Utvalg av Type-1 etter LDL" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType1WithHighLDL( @StudyId INT, @LDLCutoff FLOAT, @MinAge INT = 18 ) AS
BEGIN
  DECLARE @LastDOB DateTime;
  SET @LastDOB = DATEADD( year, -@MinAge,getdate() )
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastLab(PersonId,'LDL') AS LDL INTO #temp
  FROM NDV.Type1 WHERE DOB <= @LastDOB;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'LDL = ' + CONVERT(VARCHAR,LDL) as InfoText 
  FROM #temp WHERE LDL >= @LDLCutoff
  ORDER BY LDL DESC
END]]>
	</row>
	<row ProcId="205" StudyName="NDV.BASE" ProcName="NDV.GetActiveWIthHighUACR" ProcDesc="Utvalg etter U-ACR verdi" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetActiveWithHighUACR( @StudyId INT, @UACRCutoff FLOAT ) AS
BEGIN
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastLab(PersonId,'UACR') AS UACR INTO #temp
  FROM NDV.AllActive;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'UACR = ' + CONVERT(VARCHAR,UACR) as InfoText 
  FROM #temp WHERE UACR >= @UACRCutoff
  ORDER BY UACR DESC
END

]]>
	</row>
	<row ProcId="206" StudyName="NDV.BASE" ProcName="NDV.GetIncretinUsersWithHighHbA1c" ProcDesc="Utvalg av inkretinbrukere etter HbA1c" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:19:56.947Z">
		<![CDATA[CREATE PROCEDURE NDV.GetIncretinUsersWithHighHbA1c( @StudyId INT, @AgeMin FLOAT, @AgeMax FLOAT, @HbA1cCutoff FLOAT ) AS
BEGIN
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastValue(PersonId,'HBA1C') AS HbA1c 
  INTO #temp
  FROM NDV.IncretinUsers WHERE ( Age >= @AgeMin ) AND ( Age < @AgeMax );
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'HbA1c = ' + SUBSTRING(CONVERT(VARCHAR,HbA1c),1,4) as InfoText 
  FROM #temp WHERE HbA1c >= @HbA1cCutoff
  ORDER BY HbA1c DESC
END]]>
	</row>
	<row ProcId="207" StudyName="NDV.BASE" ProcName="NDV.GetNonPumpWithHighHbA1c" ProcDesc="Utvalg av Type-1 u/pumpe basert på alder og HbA1c-verdier" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T07:59:39.900Z">
		<![CDATA[CREATE PROCEDURE NDV.GetNonPumpWithHighHbA1c( @StudyId INT, @AgeMin FLOAT, @AgeMax FLOAT, @HbA1cCutoff FLOAT ) AS
BEGIN
  -- Create temporary table
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,dbo.GetLastValue(PersonId,'HBA1C') AS HbA1c INTO #temp
  FROM NDV.Type1NotInsulinPump p WHERE p.Age >= @AgeMin AND p.Age < @AgeMax;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'HbA1c = ' + SUBSTRING(CONVERT(VARCHAR,HbA1c),1,4) as InfoText 
  FROM #temp WHERE HbA1c >= @HbA1cCutoff
  ORDER BY HbA1c DESC
END]]>
	</row>
	<row ProcId="209" StudyName="*" ProcName="GetCaseListA10BX" ProcDesc="Medikamentbruk: Andre midler mot diabetes (A10BX)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-03-20T10:56:10.663Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListA10BX( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'A10BX%'
END]]>
	</row>
	<row ProcId="210" StudyName="*" ProcName="GetCaseListA10BH" ProcDesc="Medikamentbruk: DPP-4 hemmere (A10BH)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListA10BH( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'A10BH%'
END]]>
	</row>
	<row ProcId="211" StudyName="NDV.BASE" ProcName="NDV.GetLongDuration" ProcDesc="Diabetes etter varighet" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-03-20T11:01:50.553Z">
		<![CDATA[CREATE PROCEDURE NDV.GetLongDuration( @StudyId INT, @YearCount INT ) AS
BEGIN 

  DECLARE @FirstDob DateTime;
  SET @FirstDob = DATEADD( yyyy, -@YearCount, getdate() );
  SELECT p.PersonId,dbo.GetLastQuantity( p.PersonId, 'NDV_DIAGNOSE_YYYY') AS NDV_DIAGNOSE_YYYY
  INTO #temp1
  FROM Person p JOIN StudCase sc ON sc.PersonId=p.PersonId 
  WHERE ( sc.StudyId=@StudyId ) AND (p.DOB < @FirstDob);
  
  --- Calculate duration
  SELECT PersonId,NDV_DIAGNOSE_YYYY, CONVERT(INT,DATEPART(YYYY,getdate())-t1.NDV_DIAGNOSE_YYYY) AS DiabetesDuration
  INTO #temp2 
  FROM #temp1 t1
  WHERE DATEPART(YYYY,getdate())-NDV_DIAGNOSE_YYYY >= @YearCount;
  
  SELECT v.*, t2.DiabetesDuration,
  'Varighet ' + CONVERT(VARCHAR,t2.DiabetesDuration) + ' år' AS InfoText
  FROM #temp2 t2 JOIN dbo.ViewActiveCaseListStub v ON v.PersonId=t2.PersonId
  WHERE t2.DiabetesDuration >= @YearCount AND v.StudyId=@StudyId
  ORDER BY t2.DiabetesDuration DESC END]]>
	</row>
	<row ProcId="212" StudyName="NDV.BASE" ProcName="NDV.GetPregnantByYear" ProcDesc="Gravide: Utvalg på år" ProcParams=":StudyId,:Year" ListId="CASE" GrantTo="public" LastUpdate="2015-09-25T07:11:42.220Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPregnantByYear( @StudyId INT, @Year INT )
AS
BEGIN
  SELECT ce.PersonId,COUNT(*) as Antall 
  INTO #temp FROM dbo.ClinEvent ce
  JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId AND cf.DeletedAt IS NULL
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  WHERE mf.FormName = 'DIAPOL_GRAVIDE'
  AND DATEPART(yy,ce.EventTime) = @Year
  GROUP BY ce.PersonId;
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, REPLACE(ISNULL(mia.OptionText, 'Uspesifisert'),'.','') + '; ' + CONVERT(VARCHAR,t.Antall) + ' kontroller ' + CONVERT(VARCHAR,@Year) + '.' AS InfoText
  FROM dbo.ViewCaseListStub v 
  JOIN #temp t ON t.PersonId=v.PersonId
  LEFT JOIN dbo.MetaItemAnswer mia ON mia.ItemId = 3196 AND mia.OrderNumber = dbo.GetLastEnumValInThePast( v.PersonId, 'NDV_TYPE', CONVERT(VARCHAR(10), CAST(@Year+1 as VARCHAR)+'-01-01'))
  WHERE v.StudyId=@StudyId;
END]]>
	</row>
	<row ProcId="213" StudyName="NDV.BASE" ProcName="NDV.GetPregnantByType" ProcDesc="Gravide: Utvalg på type" ProcParams=":StudyId,:DiaType" ListId="CASE" GrantTo="public" MinVersion="6000" LastUpdate="2015-04-10T14:32:27.947Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPregnantByType( @StudyId INT, @DiaType INT = NULL ) AS
BEGIN
 SELECT PersonId, DOB, ReverseName AS FullName, GenderId, GroupName, NationalId, EventTime, InfoText =

   CASE DiaType 
     WHEN 1 THEN 'Type 1'
     WHEN 2 THEN 'Type 2'
     WHEN 5 THEN 'Svangerskapsdiabetes'
     ELSE 'Andre typer' 
   END

  FROM (

  SELECT 
    sc.PersonId, p.DOB, p.FullName, p.ReverseName, p.GenderId, p.NationalId, 
    sg.CenterId, sg.GroupId, sg.GroupName, 
    sc.StudyId, sc.FinState,
    cdp.EnumVal AS DiaType, ce.EventTime, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime ) AS OrderNo 
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) 
  JOIN dbo.ClinDatapoint cdp ON cdp.EventId=ce.EventId AND cdp.ItemId=3196
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  JOIN dbo.StudCase sc ON ( sc.StudyId = ce.StudyId ) AND ( sc.PersonId = ce.PersonId ) 
  JOIN dbo.Person p ON ( p.PersonId=sc.PersonId ) 
  JOIN dbo.StudyGroup sg ON ( sg.StudyId = ce.StudyId ) AND ( sg.GroupId = ce.GroupId ) 
  JOIN dbo.UserList my ON ( my.UserId = USER_ID() ) 
  WHERE ( cf.DeletedAt IS NULL )
    AND ( mf.FormName='DIAPOL_GRAVIDE' )
    AND ( sg.CenterId=my.CenterId ) 

    ) a

WHERE a.OrderNo = 1 AND ( ( a.DiaType=@DiaType ) OR ( @DiaType IS NULL ) )
ORDER BY ReverseName
END]]>
	</row>
	<row ProcId="214" StudyName="NDV.BASE" ProcName="NDV.GetAnnualControls" ProcDesc="Årskontroller: Utvalg på periode" ProcParams=":StartAt,:StopAt" ListId="CASE" GrantTo="public" MinVersion="6000" InfoCaption="Dato for årskontroll" LastUpdate="2015-11-05T07:57:56.603Z">
		<![CDATA[CREATE PROCEDURE NDV.GetAnnualControls( @StartDate DateTime, @StopDate DateTime ) AS
BEGIN
  SELECT p.PersonId, p.DOB, p.ReverseName AS FullName, 'Type ' + mia.ShortCode AS GroupName, 'Uansett status' AS StatusText, 
    p.GenderId, p.NationalId, a.DiabetesType, 'Kontroll ' + dbo.LongTime( a.LastVisit ) AS InfoText
  FROM 
  (
    SELECT ce.PersonId, MIN(cdp.EnumVal) AS DiabetesType, MAX(ce.EventTime) AS LastVisit, COUNT(*) AS VisitCount
    FROM dbo.ClinForm cf 
      JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
      JOIN dbo.StudyGroup sg ON sg.StudyId = ce.StudyId and sg.GroupId=ce.GroupId
      JOIN dbo.StudyCenter c ON c.CenterId = sg.CenterId
      JOIN dbo.UserList ul ON ul.UserId=USER_ID() AND ul.CenterId=sg.CenterId
      JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId=3196
      JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
    WHERE ( cf.DeletedAt IS NULL AND mf.FormName = 'DIAPOL_YEAR' ) AND ( ce.EventTime >= @StartDate ) AND ( ce.EventTime < @StopDate )
    GROUP BY ce.PersonId,cdp.EnumVal
  ) a
  JOIN dbo.Person p ON p.PersonId=a.PersonId
  JOIN dbo.MetaItemAnswer mia on mia.ItemId=3196 AND mia.OrderNumber=a.DiabetesType
  ORDER BY a.LastVisit DESC
END]]>
	</row>
	<row ProcId="251" StudyName="NDV" ProcName="dbo.GetCaseListPump" ProcDesc="Behandling: Insulinpumpe" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T09:06:04.133Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListPump( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,dbo.GetLastTextVal( v.PersonId, 'INSPUMP_NAVN') AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  WHERE v.StudyId=@StudyId AND dbo.GetLastEnumVal( v.PersonId, 'NDV_INSULIN_DEVICE') = 2
END]]>
	</row>
	<row ProcId="252" StudyName="NDV" ProcName="NDV.GetPumpAge21To25HbA1cAbove9" ProcDesc="Type 1 m/pumpe: Alder 21-25, HbA1c &gt;= 9" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:13:55.917Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPumpAge21To25Hba1cAbove9( @StudyId INT ) AS
BEGIN 
  EXECUTE NDV.GetPumpWithHighHbA1c @StudyId,21,26,9
END]]>
	</row>
	<row ProcId="253" StudyName="NDV" ProcName="NDV.GetPumpAge26To99HbA1cAbove9" ProcDesc="Type 1 m/pumpe: Alder 26+, HbA1c &gt;= 9" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:13:58.837Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPumpAge26To99Hba1cAbove9( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetPumpWithHighHbA1c @StudyId,26,99,9
END]]>
	</row>
	<row ProcId="254" StudyName="NDV" ProcName="NDV.GetPumpHbA1cAbove7" ProcDesc="Type 1 m/pumpe: HbA1c &gt; 7" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:14:00.977Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPumpHbA1cAbove7( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetPumpWithHighHbA1c @StudyId,0,99,7.01
END]]>
	</row>
	<row ProcId="255" StudyName="NDV" ProcName="NDV.GetNonPumpAge21To25HbA1cAbove9" ProcDesc="Type 1 u/pumpe: Alder 21-25, HbA1c &gt;= 9" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:14:03.510Z">
		<![CDATA[CREATE PROCEDURE NDV.GetNonPumpAge21To25HbA1cAbove9( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetNonPumpWithHighHbA1c @StudyId,21,26,9
END]]>
	</row>
	<row ProcId="256" StudyName="NDV" ProcName="NDV.GetNonPumpAge26To99HbA1cAbove9" ProcDesc="Type 1 u/pumpe: Alder 26+, HbA1c &gt;= 9" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:14:06.663Z">
		<![CDATA[CREATE PROCEDURE NDV.GetNonPumpAge26To99HbA1cAbove9( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetNonPumpWithHighHbA1c @StudyId,26,99,9
END]]>
	</row>
	<row ProcId="257" StudyName="NDV" ProcName="NDV.GetNonPumpHbA1cAbove7" ProcDesc="Type 1 u/pumpe: HbA1c &gt; 7" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T07:37:04.117Z">
		<![CDATA[CREATE PROCEDURE NDV.GetNonPumpHbA1cAbove7( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetNonPumpWithHighHbA1c @StudyId,0,99,7.01
END]]>
	</row>
	<row ProcId="258" StudyName="NDV" ProcName="NDV.GetActiveWithEyecheck" ProcDesc="Prosess: Siste hos øyelege" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetActiveWithEyecheck( @StudyId INT ) AS
BEGIN
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastDTVal(PersonId,'NDV_EYECHECK_DATE') AS NDV_EYECHECK_DATE INTO #temp 
  FROM NDV.AllActive;
  UPDATE #temp SET NDV_EYECHECK_DATE = NULL WHERE NDV_EYECHECK_DATE < DOB;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,ISNULL(CONVERT(VARCHAR,NDV_EYECHECK_DATE,104),'Ukjent') as InfoText 
  FROM #temp 
  ORDER BY NDV_EYECHECK_DATE
END
]]>
	</row>
	<row ProcId="259" StudyName="NDV" ProcName="GetCaseListEventCount" ProcDesc="Prosess: Dokumentasjonsfrekvens" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListEventCount( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId,p.DOB,p.FullName,
    min(ce.EventTime) as FirstEvent,max(ce.EventTime) as LastEvent, count(*) as EventCount,
    CONVERT(FLOAT,1) as DaysElapsed, CONVERT(FLOAT,1) as EventsPerDay
  INTO #tempList
    FROM dbo.ViewActiveCaseListStub p
    JOIN dbo.ClinEvent ce on ce.PersonId=p.PersonId
  WHERE p.StudyId=@StudyId AND ce.EventTime > getdate()-180
  GROUP BY p.PersonId,p.DOB,p.FullName;
  
  UPDATE #tempList SET DaysElapsed = CONVERT(FLOAT,LastEvent)-CONVERT(FLOAT,FirstEvent)+1.0;
  UPDATE #tempList SET EventsPerDay = CONVERT(FLOAT,EventCount ) / DaysElapsed;
  SELECT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName,
    'E=' +
    CONVERT(VARCHAR,EventCount) +
    ' D=' +
    CONVERT(VARCHAR,DaysElapsed) +
    ' E/D=' +
    CONVERT(VARCHAR,EventsPerDay) AS InfoText
  FROM #tempList vcl
  WHERE StudyId=@StudyId AND DaysElapsed > 30
  ORDER BY EventsPerDay 
END]]>
	</row>
	<row ProcId="260" StudyName="NDV" ProcName="NDV.GetPumpAge0To21HbA1cAbove9" ProcDesc="Type 1 m/pumpe:Alder &lt; 21, HbA1c &gt;= 9" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:14:24.870Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPumpAge0To21Hba1cAbove9( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetPumpWithHighHbA1c @StudyId,0,21,9
END]]>
	</row>
	<row ProcId="261" StudyName="NDV" ProcName="NDV.GetNonPumpAge0To21HbA1cAbove9" ProcDesc="Type 1 u/pumpe: Alder &lt; 21, HbA1c &gt;= 9" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:14:28.447Z">
		<![CDATA[CREATE PROCEDURE NDV.GetNonPumpAge0To21HbA1cAbove9( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetNonPumpWithHighHbA1c @StudyId,0,21,9
END]]>
	</row>
	<row ProcId="262" StudyName="NDV" ProcName="NDV.GetType2WithBPAbove135" ProcDesc="Type 2: Blodtrykk &gt; 135" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithBPAbove135( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetType2WithHighBP @StudyId,135.1
END]]>
	</row>
	<row ProcId="263" StudyName="NDV" ProcName="NDV.GetType2WithLDLAbove35" ProcDesc="Type 2: LDL &gt; 3.5" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithLDLAbove35( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetType2WithHighLDL @StudyId,3.51
END]]>
	</row>
	<row ProcId="265" StudyName="NDV" ProcName="NDV.GetType2WIthLDLAbove25" ProcDesc="Type 2: LDL &gt; 2.5" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithLDLAbove25( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetType2WithHighLDL @StudyId,2.51
END]]>
	</row>
	<row ProcId="266" StudyName="NDV" ProcName="NDV.GetIncretinUsersWithHba1c" ProcDesc="Inkretinbrukere: Etter fallende HbA1c-verdier" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:20:18.993Z">
		<![CDATA[CREATE PROCEDURE NDV.GetIncretinUsersWithHbA1c ( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetIncretinUsersWithHighHbA1c @StudyId,0,99,0.1
END]]>
	</row>
	<row ProcId="267" StudyName="NDV" ProcName="NDV.GetActiveWithUACRAbove3" ProcDesc="Komplikasjoner: U-ACR &gt; 3" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetActiveWithUACRAbove3( @StudyId INT ) AS
BEGIN 
  EXECUTE NDV.GetActiveWithHighUACR @StudyId,3.01
END]]>
	</row>
	<row ProcId="268" StudyName="NDV" ProcName="NDV.GetType2WithLDLAbove35Age40" ProcDesc="Type 2: LDL &gt; 3.5, Alder &gt;= 40" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithLDLAbove35Age40( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetType2WithHighLDL @StudyId,3.51,40
END]]>
	</row>
	<row ProcId="269" StudyName="NDV" ProcName="NDV.GetType1WithLDLAbove35Age40" ProcDesc="Type 1: LDL &gt; 3.5, Alder &gt;= 40" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType1WithLDLAbove35Age40( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetType1WithHighLDL @StudyId,3.51,40
END]]>
	</row>
	<row ProcId="270" StudyName="NDV" ProcName="GetCaseListHbA1c9Plus" ProcDesc="Behandling: HbA1c &gt; 9" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T07:12:21.587Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListHbA1c9Plus( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,
    dbo.GetLastValue( v.PersonId, 'HBA1C') as HbA1c,
    dbo.GetLastEnumVal( v.PersonId, 'NDV_TYPE') AS DiaType
  INTO #TempTable 
  FROM dbo.ViewActiveCaseListStub v
  WHERE v.StudyId=@StudyId;
  SELECT PersonId,DOB,FullName,GroupName,
  ISNULL('Type-' +
    SUBSTRING(CONVERT( VARCHAR,DiaType),1,1),'Uspes') + ', HbA1c: ' +
    SUBSTRING(CONVERT(VARCHAR,ROUND(HbA1c,1)),1,4) AS InfoText
  FROM #TempTable WHERE HBA1C >= 9 ORDER BY HbA1c DESC
END]]>
	</row>
	<row ProcId="271" StudyName="NDV" ProcName="NDV.GetCaseListType2WithCHD" ProcDesc="Studier: Leader, koronarsyke &gt; 50 år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="490" LastUpdate="2014-04-25T12:49:50.717Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListType2WithCHD( @StudyId INT ) AS
BEGIN  
  SELECT PersonId,DOB,FullName,GroupName,'Koronarsyk siden ' + 
  ISNULL(SUBSTRING(CONVERT(VARCHAR,dbo.GetLastQuantity( PersonId, 'NDV_CHD_DEBUT' )),1,4),'?') as InfoText 
  FROM NDV.Type2 WHERE ( Age >= 50 ) AND ( dbo.GetLastEnumVal( PersonId, 'NDV_CHD' ) = 1 ) 
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="272" StudyName="NDV" ProcName="NDV.GetType2WithHypertension" ProcDesc="Studier: Leader, hypertensjon &gt; 60 år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="490" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithHypertension( @StudyId INT, @MinAge FLOAT = 60.0 ) AS
BEGIN
  SELECT *,
    CONVERT( INT, dbo.GetLastQuantity( PersonId,'SYSBP')) AS SYSBP,
    CONVERT( INT,dbo.GetLastQuantity( PersonId,'DIABP')) AS DIABP,
    CONVERT( INT, dbo.GetLastQuantity( PersonId,'NDV_BPDRUGS')) AS BPDRUGS 
  INTO #temp
  FROM NDV.Type2  
  WHERE Age > @MinAge;
  SELECT PersonId,DOB,FullName,GroupName, 
    'Siste BT ' + ISNULL(CONVERT(VARCHAR,SYSBP),'?') + '/' + ISNULL(CONVERT(VARCHAR,DIABP),'?') +', bruker ' + ISNULL(CONVERT(VARCHAR,BPDRUGS),'?') + ' preparater.' as InfoText
  FROM #temp WHERE ( SYSBP > 140 ) OR ( BPDRUGS > 1 ) ORDER BY FullName;
END

]]>
	</row>
	<row ProcId="273" StudyName="NDV" ProcName="NDV.GetCaseListNoForm15Months" ProcDesc="Prosess: Aktive uten skjema siste 15 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListNoForm15Months ( @StudyId INT ) AS
BEGIN 
  EXEC GetCaseListNoRecentForm @StudyId,456;
END]]>
	</row>
	<row ProcId="274" StudyName="NDV" ProcName="NDV.GetType1WithHbA1c" ProcDesc="Type 1: Sortert etter fallende HbA1c" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:15:45.040Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType1WithHbA1c( @StudyId INT ) AS
BEGIN
  -- Create temporary table
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,dbo.GetLastValue(PersonId,'HBA1C') AS HbA1c INTO #temp
  FROM NDV.Type1 p;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'HbA1c = ' + SUBSTRING(CONVERT(VARCHAR,HbA1c),1,4) as InfoText 
  FROM #temp 
  ORDER BY HbA1c DESC
END]]>
	</row>
	<row ProcId="275" StudyName="NDV" ProcName="NDV.GetType2WithHbA1c" ProcDesc="Type 2: Sortert etter fallende HbA1c" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:03:44.180Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithHbA1c( @StudyId INT ) AS
BEGIN
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastValue(PersonId,'HBA1C') AS HbA1c 
  INTO #temp
  FROM NDV.Type2;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'HbA1c = ' + SUBSTRING(CONVERT(VARCHAR,HbA1c),1,4) as InfoText 
  FROM #temp 
  ORDER BY HbA1c DESC
END]]>
	</row>
	<row ProcId="276" StudyName="NDV" ProcName="NDV.GetCaseListNoForm24Months" ProcDesc="Prosess: Aktive uten skjema siste 24 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListNoForm24Months ( @StudyId INT ) AS
BEGIN 
  EXEC GetCaseListNoRecentForm @StudyId,730;
END]]>
	</row>
	<row ProcId="277" StudyName="NDV" ProcName="NDV.TorClaudiLadaHunt" ProcDesc="Bodø: Mulig LADA 30-75" ProcParams=":StudyId" ListId="CASE" GrantTo="public" InfoCaption="Bodø LADA" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.TorClaudiLadaHunt( @StudyId INT )  AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,'Mulig LADA?' as InfoText,
  p.GenderId,
  DateDiff(yy,v.DOB,getdate()) as AgeNow,
  CONVERT( INT, ISNULL(dbo.GetLastQuantity( v.PersonId,'NDV_DIAGNOSE_YYYY'),9999)) as NDV_DIAGNOSE_YYYY,
  ISNULL(dbo.GetLastEnumVal( v.PersonId,'NDV_ANTIBODY' ),9) as NDV_ANTIBODY 
  FROM dbo.ViewActiveCaseListStub v 
  JOIN dbo.Person p on p.PersonId =v.PersonId
  WHERE v.StudyId=@StudyId 
  AND DateDiff( yy, v.DOB, getdate()) >= 30 
  AND DateDiff( yy, v.DOB, getdate()) <= 75
  AND ISNULL(dbo.GetLastQuantity( v.PersonId,'NDV_DIAGNOSE_YYYY'),9999) >= 2009
  AND ISNULL(dbo.GetLastEnumVal( v.PersonId,'NDV_ANTIBODY' ),9) = 1
END]]>
	</row>
	<row ProcId="278" StudyName="NDV" ProcName="NDV.GetLongDuration10" ProcDesc="Varighet: Over 10 år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-03-20T11:04:04.617Z">
		<![CDATA[CREATE PROCEDURE NDV.GetLongDuration10( @StudyId INT ) AS
BEGIN
  EXEC NDV.GetLongDuration @StudyId,10                
END]]>
	</row>
	<row ProcId="279" StudyName="NDV" ProcName="NDV.GetLongDuration20" ProcDesc="Varighet: Over 20 år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-03-20T11:03:31.223Z">
		<![CDATA[CREATE PROCEDURE NDV.GetLongDuration20( @StudyId INT ) AS
BEGIN
  EXEC NDV.GetLongDuration @StudyId,20                
END]]>
	</row>
	<row ProcId="280" StudyName="NDV" ProcName="NDV.GetLongDuration30" ProcDesc="Varighet: Over 30 år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-03-20T11:05:00.430Z">
		<![CDATA[CREATE PROCEDURE NDV.GetLongDuration30( @StudyId INT ) AS
BEGIN
  EXEC NDV.GetLongDuration @StudyId,30                
END]]>
	</row>
	<row ProcId="281" StudyName="NDV" ProcName="NDV.GetLongDuration40" ProcDesc="Varighet: Over 40 år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-03-20T11:05:01.553Z">
		<![CDATA[CREATE PROCEDURE NDV.GetLongDuration40( @StudyId INT ) AS
BEGIN
  EXEC NDV.GetLongDuration @StudyId,40                
END]]>
	</row>
	<row ProcId="282" StudyName="NDV" ProcName="NDV.GetCaseListNoDuration" ProcDesc="Varighet: Ikke registrert" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-03-20T11:37:44.757Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListNoDuration( @StudyId INT ) AS
BEGIN
  SELECT *,'Varighet mangler' AS InfoText
  FROM dbo.ViewActiveCaseListStub 
  WHERE ( StudyId=@StudyId ) AND ( dbo.GetLastQuantity( PersonId,'NDV_DIAGNOSE_YYYY')  IS NULL )
  ORDER BY FullName                                                                            
END]]>
	</row>
	<row ProcId="283" StudyName="NDV" ProcName="NDV.MetforminMonotherapyFallingHbA1c" ProcDesc="Studier: BI 1275.9,  Metformin monoterapi etter fallende HbA1c" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:05:44.727Z">
		<![CDATA[CREATE PROCEDURE NDV.MetforminMonotherapyFallingHbA1c( @StudyId INT ) AS
BEGIN

  -- Find candidates, active cases with Metformin

  SELECT v.PersonId 
  INTO #temp
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.OngoingTreatment dt ON dt.PersonId = v.PersonId
  AND dt.ATC='A10BA02'
  WHERE v.StudyId=@StudyId;

  -- Remove A10A insulin and analogues
  DELETE FROM #temp WHERE EXISTS( SELECT TreatId FROM dbo.OngoingTreatment WHERE PersonId=#temp.PersonId  AND ATC LIKE 'A10A%' );

  -- Remove A10B Everything else in group except metformin
  DELETE FROM #temp WHERE EXISTS( SELECT TreatId FROM dbo.OngoingTreatment WHERE PersonId=#temp.PersonId  AND ( ATC LIKE 'A10B%' AND ATC <>'A10BA02' ) );

  -- Remove everybody with form Insulindosering: 
  DELETE FROM #temp WHERE EXISTS( 
    SELECT ce.EventId FROM ClinEvent ce 
    JOIN dbo.ClinForm cf ON cf.EventId = ce.EventId 
    JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
    WHERE ce.PersonId=#temp.PersonId AND mf.FormName='DIAPOL_INSULIN' );
  -- Get patient list with HbA1c as InfoText
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName, dbo.GetLastValue( v.PersonId, 'HBA1C' ) as HBA1C,
  'HbA1c: ' + ISNULL( CONVERT(VARCHAR, dbo.GetLastValue( v.PersonId, 'HBA1C' )), '(ukjent)' ) as InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN #temp t ON t.PersonId=v.PersonId
  WHERE v.StudyId=@StudyId
  ORDER BY HBA1C DESC
END]]>
	</row>
	<row ProcId="284" StudyName="NDV" ProcName="NDV.GetGravide" ProcDesc="Gravide: Minst en svangerskapskontroll" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6302" LastUpdate="2016-02-14T11:01:55.537Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravide( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  SELECT ce.PersonId,COUNT(*) AS Antall,CONVERT(DATE,MAX(ce.EventTime)) AS SisteDato
  INTO #temp1 FROM dbo.ClinEvent ce
  JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId AND DeletedAt IS NULL
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  WHERE mf.FormName = 'DIAPOL_GRAVIDE'
  GROUP BY ce.PersonId;
  -- Get type
  SELECT t1.PersonId,DiaType = 
    CASE dbo.GetLastEnumVal(t1.PersonId,'NDV_TYPE') 
      WHEN 1 THEN 'Type 1'
      WHEN 2 THEN 'Type 2'
      WHEN 5 THEN 'Svskap'
      ELSE 'Andre' 
     END
  INTO #temp2 FROM #temp1 t1;
  -- Get result set  
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,
    DiaType + '. Ktr=' + CONVERT(VARCHAR,t1.Antall) + ', sist ' + CONVERT(VARCHAR,t1.SisteDato,104) + '.' AS InfoText
  FROM dbo.ViewFullCaseListStub v 
  JOIN #temp1 t1 ON t1.PersonId=v.PersonId
  JOIN #temp2 t2 ON t2.PersonId=v.PersonId
  WHERE v.StudyId=@StudyId;
END
]]>
	</row>
	<row ProcId="285" StudyName="NDV" ProcName="NDV.GetYoungRecentlyDiagnosedType1" ProcDesc="Studier: Unge (18-25 år) type 1, nye etter 01.11.2012" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-09-23T13:53:50.380Z">
		<![CDATA[CREATE PROCEDURE NDV.GetYoungRecentlyDiagnosedType1( @StudyId INT )
AS
BEGIN
  select sc.PersonId,
  dbo.GetLastQuantity( sc.PersonId,'NDV_DIAGNOSE_YYYY') AS NDV_DIAGNOSE_YYYY,
  dbo.GetLastEnumVal( sc.PersonId,'NDV_TYPE') AS NDV_TYPE
  INTO #temp
  FROM StudCase sc
  JOIN Person p ON p.PersonId=sc.PersonId 
  WHERE ( p.DOB >= '1988-11-01' ) AND ( p.DOB < DATEADD(yy,-18,getdate() ) )
  AND sc.StudyId=@StudyId;
  DELETE FROM #temp 
  WHERE PersonId IN ( SELECT DISTINCT PersonId FROM ClinEvent WHERE EventTime < '2012-11-01' )
  OR ( NDV_DIAGNOSE_YYYY < 2012 ) OR ( NDV_TYPE <> 1 )
  SELECT p.PersonId,p.DOB,p.ReverseName as FullName,'Alle grupper' as GroupName,
  'Diagnoseår: ' + ISNULL(CONVERT(VARCHAR,CONVERT(INT,NDV_DIAGNOSE_YYYY)),'Uoppgitt') AS InfoText FROM #temp t
  JOIN Person p ON p.PersonId=t.PersonId
  ORDER BY DOB
END]]>
	</row>
	<row ProcId="286" StudyName="NDV" ProcName="NDV.GetGravide2012" ProcDesc="Gravide: Kontroller i 2012" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-09-27T10:40:31.467Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravide2012(  @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByYear @StudyId,2012
END]]>
	</row>
	<row ProcId="287" StudyName="NDV" ProcName="NDV.GetGravide2013" ProcDesc="Gravide: Kontroller i 2013" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-09-27T10:40:38.500Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravide2013(  @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByYear @StudyId,2013
END]]>
	</row>
	<row ProcId="288" StudyName="NDV" ProcName="NDV.GetCaseListConsentUnknown" ProcDesc="Samtykke: Ukjent eller ubesvart" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-04-29T15:22:53.703Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListConsentUnknown( @StudyId INT )
AS
BEGIN
  -- Finn diabetikere
  SELECT DISTINCT ce.PersonId 
  INTO #t1 
  FROM dbo.ClinEvent ce
  JOIN dbo.ClinObservation co ON co.EventId=ce.EventId AND co.VarName='NDV_TYPE' and co.EnumVal > 0;
  -- Finn samtykkestatus
  SELECT t1.PersonId,ISNULL(dbo.GetLastEnumVal(t1.PersonId,'NDV_CONSENT'),-1) AS NDV_CONSENT
  INTO #t2
  FROM #t1 t1;
  -- Lag resultatsett
  SELECT t2.PersonId,v.DOB,v.FullName,v.GroupName,
    CASE NDV_CONSENT WHEN -1 THEN 'NDV Samtykke ubesvart' WHEN 4 THEN 'NDV Samtykke ukjent' END AS InfoText
  FROM dbo.ViewActiveCaseListStub v JOIN #t2 t2 ON t2.PersonId = v.PersonId AND v.StudyId=@StudyId
  WHERE NDV_CONSENT IN (-1,4)
END]]>
	</row>
	<row ProcId="289" StudyName="ENDO" ProcName="NDV.GetCaseListConsentUnknown" ProcDesc="Samtykke NDV: Ukjent eller ubesvart" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-11-06T07:29:35.067Z">
		<![CDATA[]]>
	</row>
	<row ProcId="290" StudyName="NDV" ProcName="NDV.GetCaseListCGMTraining" ProcDesc="CGM: Opplæring siste år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" LastUpdate="2015-11-05T07:38:09.160Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListCGMTraining( @StudyId INT )
AS
BEGIN
  SELECT p.PersonId,p.DOB,p.ReverseName AS FullName,sg.GroupName,p.GenderId,p.NationalId,
    'CGM opplæring ' + CONVERT(VARCHAR,MIN(dp.DTVal),104 ) + ' (' + CONVERT(VARCHAR,COUNT(DISTINCT dp.DTVal)) + 'x)' as InfoText
  FROM dbo.ClinDatapoint dp 
  JOIN dbo.ClinEvent ce ON ce.EventId = dp.EventId
  JOIN dbo.StudCase sc ON sc.StudyId=ce.StudyId AND sc.PersonId=ce.PersonId
  JOIN dbo.StudyGroup sg ON sg.StudyId=ce.StudyId AND sg.GroupId = ISNULL(ce.GroupId,sc.GroupId)
  JOIN dbo.Person p ON p.PersonId=ce.PersonId
  JOIN dbo.UserList ul ON ul.CenterId=sg.CenterId AND ul.UserId=USER_ID() 
  WHERE dp.ItemId = 9513 AND dp.DtVal > getdate()-365 AND sg.GroupActive = 1
  GROUP BY p.PersonId,p.DOB,p.ReverseName,p.GenderId,p.NationalId,sg.GroupName
  ORDER BY p.ReverseName 
END]]>
	</row>
	<row ProcId="291" StudyName="ENDO" ProcName="NDV.GetCaseListCGMTraining" ProcDesc="CGM: Opplæring siste år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" LastUpdate="2015-11-05T07:38:09.800Z">
		<![CDATA[]]>
	</row>
	<row ProcId="292" StudyName="NDV" ProcName="NDV.GetCaseListConsentNegative" ProcDesc="Samtykke: Nei / Trukket" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-11-06T07:29:31.550Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListConsentNegative( @StudyId INT )
AS
BEGIN
  -- Finn diabetikere
  SELECT DISTINCT ce.PersonId 
  INTO #t1 
  FROM dbo.ClinEvent ce
  JOIN dbo.ClinObservation co ON co.EventId=ce.EventId AND co.VarName='NDV_TYPE' and co.EnumVal > 0;
  -- Finn samtykkestatus
  SELECT t1.PersonId,ISNULL(dbo.GetLastEnumVal(t1.PersonId,'NDV_CONSENT'),-1) AS NDV_CONSENT
  INTO #t2
  FROM #t1 t1;
  -- Lag resultatsett
  SELECT t2.PersonId,v.DOB,v.FullName,v.GroupName,
    CASE NDV_CONSENT WHEN 2 THEN 'NDV Ikke samtykke' WHEN 3 THEN 'NDV Trukket samtykke' END AS InfoText
  FROM dbo.ViewActiveCaseListStub v JOIN #t2 t2 ON t2.PersonId = v.PersonId AND v.StudyId=@StudyId
  WHERE NDV_CONSENT IN (2,3)
END]]>
	</row>
	<row ProcId="293" StudyName="ENDO" ProcName="NDV.GetCaseListConsentNegative" ProcDesc="Samtykke NDV: Nei / Trukket" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2014-11-06T07:29:25.630Z">
		<![CDATA[]]>
	</row>
	<row ProcId="295" StudyName="NDV" ProcName="NDV.GetGravide2014" ProcDesc="Gravide: Kontroller i 2014" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-03-31T13:43:09.447Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravide2014(  @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByYear @StudyId,2014
END]]>
	</row>
	<row ProcId="296" StudyName="NDV" ProcName="NDV.GetGravide2015" ProcDesc="Gravide: Kontroller i 2015" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-03-31T13:43:23.200Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravide2015(  @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByYear @StudyId,2015
END]]>
	</row>
	<row ProcId="297" StudyName="NDV" ProcName="NDV.GetGravideType1" ProcDesc="Gravide: Type 1 før svangerskap" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" LastUpdate="2015-04-09T11:10:16.570Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravideType1 ( @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByType @StudyId, 1
END
]]>
	</row>
	<row ProcId="298" StudyName="NDV" ProcName="NDV.GetGravideType2" ProcDesc="Gravide: Type 2 før svangerskap" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" LastUpdate="2015-04-09T11:10:18.320Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravideType2 ( @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByType @StudyId, 2
END
]]>
	</row>
	<row ProcId="299" StudyName="NDV" ProcName="NDV.GetGravideType5" ProcDesc="Gravide: Svangerskapsdiabetes" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" LastUpdate="2015-04-09T11:10:19.790Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravideType5 ( @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByType @StudyId, 5
END
]]>
	</row>
	<row ProcId="300" StudyName="NDV" ProcName="NDV.GetCaseListCGM" ProcDesc="CGM: Aktive CGM brukere" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" LastUpdate="2015-05-21T11:58:19.880Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListCGM( @StudyId INT ) AS 
BEGIN 
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,mia.OptionText AS InfoText, v.GenderId 
  FROM 
  ( 
    SELECT ce.PersonId,cdp.EnumVal,RANK() OVER (PARTITION BY ce.PersonId ORDER BY ce.EventTime DESC ) AS Nummer
    FROM dbo.ClinDataPoint cdp 
    JOIN dbo.ClinEvent ce on ce.EventId=cdp.EventId
    WHERE cdp.ItemId=5715 AND cdp.EnumVal IN (1,2) 
  ) a
  JOIN dbo.MetaItemAnswer mia ON mia.ItemId=5715 AND mia.OrderNumber=a.EnumVal
  JOIN dbo.ViewActiveCaseListStub v on v.PersonId=a.PersonId
  WHERE a.Nummer=1 AND v.StudyId = @StudyId 
  ORDER BY v.FullName
END]]>
	</row>
	<row ProcId="301" StudyName="NDV" ProcName="NDV.GetPumpAll" ProcDesc="Type 1 m/pumpe: Alle etter fallende HbA1c" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="521" LastUpdate="2015-11-08T10:38:38.057Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPumpAll( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetPumpWithHighHbA1c @StudyId,0,99,1
END]]>
	</row>
	<row ProcId="302" StudyName="NDV" ProcName="NDV.GetAnnualControls2015" ProcDesc="Årskontroller: Årskontroller i 2015" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" InfoCaption="Dato for årskontroll" LastUpdate="2015-11-05T07:58:00.417Z">
		<![CDATA[CREATE PROCEDURE NDV.GetAnnualControls2015( @StudyId INT ) AS 
BEGIN
  SET NOCOUNT ON; 
  EXEC NDV.GetAnnualControls '2015-01-01','2015-12-31'; 
END]]>
	</row>
	<row ProcId="303" StudyName="NDV" ProcName="NDV.GetAnnualControls2014" ProcDesc="Årskontroller: Årskontroller i 2014" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" InfoCaption="Dato for årskontroll" LastUpdate="2015-11-05T07:58:03.853Z">
		<![CDATA[CREATE PROCEDURE NDV.GetAnnualControls2014( @StudyId INT ) AS 
BEGIN
  SET NOCOUNT ON; 
  EXEC NDV.GetAnnualControls '2014-01-01','2014-12-31'; 
END]]>
	</row>
	<row ProcId="304" StudyName="NDV" ProcName="NDV.GetAnnualControls2013" ProcDesc="Årskontroller: Årskontroller i 2013" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" InfoCaption="Dato for årskontroll" LastUpdate="2015-11-05T12:10:05.060Z">
		<![CDATA[CREATE PROCEDURE NDV.GetAnnualControls2013( @StudyId INT ) AS 
BEGIN
  SET NOCOUNT ON; 
  EXEC NDV.GetAnnualControls '2013-01-01','2013-12-31'; 
END]]>
	</row>
	<row ProcId="305" StudyName="NDV" ProcName="NDV.GetAnnualControls2012" ProcDesc="Årskontroller: Årskontroller i 2012" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" LastUpdate="2015-11-05T13:35:47.620Z">
		<![CDATA[CREATE PROCEDURE NDV.GetAnnualControls2012( @StudyId INT ) AS 
BEGIN
  SET NOCOUNT ON; 
  EXEC NDV.GetAnnualControls '2012-01-01','2012-12-31'; 
END]]>
	</row>
	<row ProcId="306" StudyName="NDV" ProcName="NDV.GetAnnualControlMissing" ProcDesc="Årskontroller: Aktive uten årskontroll siste 15 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" InfoCaption="Diabetes type" LastUpdate="2015-11-06T12:53:23.070Z">
		<![CDATA[CREATE PROCEDURE NDV.GetAnnualControlMissing(@StudyId INT)
AS
  BEGIN
    SET NOCOUNT ON;

    DECLARE @CutoffDate DateTime;
    SET @CutoffDate = DATEADD( MM, -15, GETDATE() );

    -- First get latest diabetes type
    SELECT a.PersonId,a.DiabetesType
    INTO   #DiaType
    FROM   (SELECT ce.PersonId,cdp.EnumVal AS DiabetesType,
              RANK() OVER ( PARTITION BY ce.PersonId ORDER BY ce.EventTime DESC ) AS OrderNo
              FROM   dbo.ClinEvent ce
              JOIN   dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId
            WHERE  cdp.ItemId = 3196) a
    WHERE  a.OrderNo = 1;

    -- Now get the list of patients
    SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,v.GenderId,p.NationalId, 'Type ' + mia.ShortCode AS InfoText
    FROM   (SELECT PersonId
              FROM   dbo.ViewActiveCaseListStub v
              WHERE  StudyId = @StudyId
            EXCEPT
              SELECT ce.PersonId
                FROM dbo.ClinEvent ce
                JOIN dbo.ClinForm cf ON cf.EventId = ce.EventId
                JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId AND mf.FormName = 'DIAPOL_YEAR'
              WHERE  ( cf.DeletedAt IS NULL ) AND ( ce.EventTime > @CutoffDate )) a
    JOIN   dbo.ViewActiveCaseListStub v
      ON v.PersonId = a.PersonId AND v.StudyId = @StudyId
    JOIN   dbo.Person p
      ON p.PersonId = v.PersonId
    JOIN   #DiaType dt
      ON dt.PersonId = v.PersonId
	JOIN dbo.MetaItemAnswer mia ON mia.ItemId=3196 AND mia.OrderNumber=dt.DiabetesType
  END]]>
	</row>
	<row ProcId="307" StudyName="NDV" ProcName="NDV.GetType1WithoutConsent" ProcDesc="Samtykke: Aktive m/Type 1, ukjent/ubesvart samtykke" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6302" InfoCaption="Samtykkestatus" LastUpdate="2015-11-08T10:37:31.603Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType1WithoutConsent( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  SELECT v.*,'Ukjent/ubesvart samtykke' AS InfoText
  FROM dbo.GetLastEnumValues( 3196 ) DiaType 
  LEFT JOIN dbo.GetLastEnumValues( 3389 ) Samtykke ON Samtykke.PersonId = DiaType.PersonId
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = DiaType.PersonId AND v.StudyId=@StudyId
  WHERE ( DiaType.EnumVal = 1 ) AND ( NOT ISNULL(Samtykke.EnumVal,-1) IN (1,2,3) )
END]]>
	</row>
	<row ProcId="308" StudyName="NDV" ProcName="NDV.GetType2WithoutConsent" ProcDesc="Samtykke: Aktive m/Type 2, ukjent/ubesvart samtykke" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6302" InfoCaption="Samtykkestatus" LastUpdate="2015-11-08T10:37:35.900Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithoutConsent( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  SELECT v.*,'Ukjent/ubesvart samtykke' AS InfoText
  FROM dbo.GetLastEnumValues( 3196 ) DiaType 
  LEFT JOIN dbo.GetLastEnumValues( 3389 ) Samtykke ON Samtykke.PersonId = DiaType.PersonId
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = DiaType.PersonId AND v.StudyId=@StudyId
  WHERE ( DiaType.EnumVal = 2 ) AND ( NOT ISNULL(Samtykke.EnumVal,-1) IN (1,2,3) )
END]]>
	</row>
	<row ProcId="309" StudyName="NDV" ProcName="NDV.GetType5WithoutConsent" ProcDesc="Samtykke: Aktive m/Sv.sk.sdiabetes, ukjent/ubesvart samtykke" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6302" InfoCaption="Samtykkestatus" LastUpdate="2015-11-08T10:38:01.150Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType5WithoutConsent( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  SELECT v.*,'Ukjent/ubesvart samtykke' AS InfoText
  FROM dbo.GetLastEnumValues( 3196 ) DiaType 
  LEFT JOIN dbo.GetLastEnumValues( 3389 ) Samtykke ON Samtykke.PersonId = DiaType.PersonId
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = DiaType.PersonId AND v.StudyId=@StudyId
  WHERE ( DiaType.EnumVal = 5 ) AND ( NOT ISNULL(Samtykke.EnumVal,-1) IN (1,2,3) )
END]]>
	</row>
	<row ProcId="310" StudyName="NDV" ProcName="NDV.GetType34WithoutConsent" ProcDesc="Samtykke: Aktive m/Andre typer, ukjent ubesvart samtykke" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6302" InfoCaption="Samtykkestatu" LastUpdate="2015-11-08T10:43:05.430Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType34WithoutConsent( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  SELECT v.*,'Ukjent/ubesvart samtykke' AS InfoText
  FROM dbo.GetLastEnumValues( 3196 ) DiaType 
  LEFT JOIN dbo.GetLastEnumValues( 3389 ) Samtykke ON Samtykke.PersonId = DiaType.PersonId
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = DiaType.PersonId AND v.StudyId=@StudyId
  WHERE ( DiaType.EnumVal IN (3,4) ) AND ( NOT ISNULL(Samtykke.EnumVal,-1) IN (1,2,3) )
END]]>
	</row>
	<row ProcId="311" StudyName="NDV" ProcName="NDV.GetYoungDiabetics" ProcDesc="Studier: Unge diabetikere" ProcParams=":StudyId" ListId="CASE" GrantTo="Researcher" MinVersion="6302" InfoCaption="Første konsultasjon" LastUpdate="2016-03-02T08:33:40.740Z">
		<![CDATA[CREATE PROCEDURE NDV.GetYoungDiabetics( @StudyId INT ) AS
BEGIN
  SELECT a.*, a.StudyName + ': '+ CONVERT( VARCHAR,a.FirstDate,104) + ' (' + CONVERT(VARCHAR,a.Alder) + ' år)'  AS InfoText
  FROM (
    SELECT p.PersonId,p.DOB,p.FullName,dt.OptionText AS GroupName,p.GenderId,p.NationalId,
      DATEDIFF(YYYY,p.DOB,sc.CreatedAt ) AS Alder, sc.CreatedAt AS FirstDate, s.StudyName,
      RANK() OVER( PARTITION BY p.PersonId ORDER BY sc.CreatedAt ) AS EntryOrder
    FROM dbo.Person p
      JOIN dbo.StudCase sc ON sc.PersonId = p.PersonId
      JOIN dbo.Study s ON s.StudyId=sc.StudyId
      JOIN dbo.GetLastEnumValues(3196) dt ON dt.PersonId = p.PersonId 
    WHERE DATEDIFF(YYYY,p.DOB,sc.CreatedAt) BETWEEN 15 AND 20
  AND s.StudName IN ( 'NDV','ENDO' )
  ) a
  WHERE a.EntryOrder = 1
  ORDER BY Alder
END
]]>
	</row>
	<row ProcId="312" StudyName="ENDO" ProcName="NDV.GetYoungDiabetics" ProcDesc="Studier: Unge diabetikere" ProcParams=":StudyId" ListId="CASE" GrantTo="Researcher" MinVersion="6302" InfoCaption="Første konsultajson" LastUpdate="2016-03-02T08:33:43.277Z">
		<![CDATA[]]>
	</row>
	<row ProcId="400" StudyName="BAR" ProcName="BAR.GetHospitalizedWithoutAdmissionForm" ProcDesc="Todo: Hospitalized without form" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-11-14T14:52:27.327Z">
		<![CDATA[CREATE PROCEDURE BAR.GetHospitalizedWithoutAdmissionForm( @StudyId INT )
AS
BEGIN  
  SELECT DISTINCT ce.PersonId 
  INTO #temp
  FROM ClinEvent ce 
  JOIN ClinObservation co ON co.EventId=ce.EventId
  JOIN MetaItem mi ON mi.VarName=co.VarName
  WHERE mi.ItemId=8091 AND co.EnumVal=1 AND ce.StudyId=@StudyId
  EXCEPT 
  SELECT DISTINCT ce2.PersonId FROM ClinEvent ce2 
  JOIN ClinForm cf2 ON cf2.EventId=ce2.EventId
  WHERE cf2.FormId=655 AND ce2.StudyId=@StudyId;
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName, 'No FirstAdmission!' as InfoText
  FROM ViewActiveCaseListStub v JOIN #temp t ON t.PersonId=v.PersonId
  WHERE v.StudyId=@StudyId
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="500" StudyName="NDV" ProcName="NDV.GetType1Age18to65WithHbA1c" ProcDesc="Type 1: Alder 18-65 etter fallende HbA1c" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2015-06-12T08:11:09.150Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType1Age18to65WithHbA1c( @StudyId INT ) AS
BEGIN
  -- Create temporary table
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,dbo.GetLastValue(PersonId,'HBA1C') AS HbA1c INTO #temp
  FROM NDV.Type1 p
  WHERE ( Age < 65 ) AND ( Age >= 18 )  
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'HbA1c = ' + SUBSTRING(CONVERT(VARCHAR,HbA1c),1,4) as InfoText
  FROM #temp
  ORDER BY HbA1c DESC
END]]>
	</row>
	<row ProcId="600" StudyName="ROAS" ProcName="ENDO.GetAddisonPatients" ProcDesc="Addison: Alle aktive" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6303" InfoCaption="Addison type" LastUpdate="2015-12-18T09:28:32.743Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetAddisonPatients (@StudyId INT) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, v.GenderId,
    'Diagnoseår ' + ISNULL(CONVERT(VARCHAR, CONVERT(INT, T6089.Quantity)), 'mangler') + ', ' +
    ISNULL(T6090.OptionText, '(subtype mangler)') + '.' AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastEnumValues(6090) AS T6090 ON T6090.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastEnumValues(6299) AS T6299 ON T6299.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastQuantities(6089) AS T6089 ON T6089.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND (T6090.EnumVal = 1 OR T6299.EnumVal = 1 OR T6089.Quantity > 1900)
END]]>
	</row>
	<row ProcId="601" StudyName="ROAS" ProcName="ENDO.GetAddisonNoRecentData" ProcDesc="Addison: Uten skjemadata etter 01.01.2013" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6002" LastUpdate="2014-06-12T10:54:29.327Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetAddisonNoRecentData( @StudyId INT ) AS
BEGIN
  -- Find Addison patients
  SELECT DISTINCT ce.PersonId
  INTO #temp 
  FROM dbo.ClinEvent ce 
  JOIN dbo.ClinObservation co ON co.EventId=ce.EventId
  WHERE co.VarName='ICD10_E271' AND co.EnumVal = 1
  UNION
  SELECT DISTINCT ce.PersonId FROM dbo.ClinEvent ce 
  JOIN dbo.ClinObservation co ON co.EventId=ce.EventId
  WHERE co.VarName='RoasAddisonType' AND co.EnumVal = 1
  EXCEPT 
  SELECT DISTINCT ce.PersonId FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ce.EventId=cf.EventId  
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  WHERE FormName IN ( 'Autoimmunitet','Addison' )
  AND ce.EventTime > '2013-01-01';
  -- Join with active patients
  SELECT DISTINCT v.*,ISNULL(p.PostalCode,'') + ' ' + ISNULL(p.City,'')  AS InfoText FROM dbo.ViewActiveCaseListStub v
  JOIN #temp t ON t.PersonId=v.PersonId  
  JOIN dbo.Person p ON p.PersonId=v.PersonId AND ISNULL(DeceasedInd,0)=0
  WHERE v.StudyId=@StudyId
  ORDER BY v.FullName;                        
END]]>
	</row>
	<row ProcId="700" StudyName="ENDO" ProcName="ENDO.GetCaseListHypertyreose" ProcDesc="Diagnose: Hypertyreose" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-09-27T10:41:14.780Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetCaseListHypertyreose ( @StudyId INT )
AS
BEGIN
  SELECT p.PersonId, p.DOB, p.ReverseName as FullName,sg.GroupName,dbo.GetLastEnumVal(p.PersonId,'VAR6658') as Var6658 
  INTO #tempAll 
  FROM dbo.Person p
  JOIN dbo.StudCase sc ON sc.PersonId=p.PersonId
  JOIN dbo.Study s ON s.StudyId=sc.StudyId AND s.StudyId=@StudyId
  LEFT OUTER JOIN dbo.StudyGroup Sg ON sg.StudyId=sc.StudyId and sg.GroupId=sc.GroupId;
  select t.PersonId,t.DOB,t.FullName,t.GroupName,mia.OptionText as InfoText
  FROM #tempAll t 
  JOIN dbo.MetaItemAnswer mia ON mia.OrderNumber=t.Var6658 AND mia.ItemId=6658
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="701" StudyName="ENDO" ProcName="ENDO.GetCaseListOtherThyroid" ProcDesc="Diagnose: Andre tyroideasykdommer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-09-27T10:41:25.717Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetCaseListOtherThyroid ( @StudyId INT )
AS
BEGIN
  SELECT p.PersonId, p.DOB, p.ReverseName as FullName,sg.GroupName,
    dbo.GetLastEnumVal(p.PersonId,'VAR8002') as Var8002,
    dbo.GetLastEnumVal(p.PersonId,'VAR6642') as Var6642
  INTO #tempAll 
  FROM dbo.Person p
  JOIN dbo.StudCase sc ON sc.PersonId=p.PersonId
  JOIN dbo.Study s ON s.StudyId=sc.StudyId AND s.StudyId=@StudyId
  LEFT OUTER JOIN dbo.StudyGroup Sg ON sg.StudyId=sc.StudyId and sg.GroupId=sc.GroupId;
  select t.PersonId,t.DOB,t.FullName,t.GroupName, RTRIM(LTRIM(ISNULL(mia6642.OptionText,'') + ' '+ ISNULL(mia8002.OptionText,''))) as InfoText
  FROM #tempAll t 
  LEFT OUTER JOIN dbo.MetaItemAnswer mia6642 ON mia6642.OrderNumber=t.Var6642 AND mia6642.ItemId=6642
  LEFT OUTER JOIN dbo.MetaItemAnswer mia8002 ON mia8002.OrderNumber=t.Var8002 AND mia8002.ItemId=8002
  WHERE ISNULL(Var6642,0)=4 or ISNULL(Var8002,0)=9 
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="703" StudyName="ENDO" ProcName="ENDO.GetCaseListBinyreTumor" ProcDesc="Diagnose: Binyretumor" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-09-27T10:41:41.280Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetCaseListBinyreTumor ( @StudyId INT )
AS
BEGIN
  SELECT p.PersonId, p.DOB, p.ReverseName as FullName,sg.GroupName,
    dbo.GetLastEnumVal(p.PersonId,'VAR5733') as Var5733
  INTO #tempAll 
  FROM dbo.Person p
  JOIN dbo.StudCase sc ON sc.PersonId=p.PersonId
  JOIN dbo.Study s ON s.StudyId=sc.StudyId AND s.StudyId=@StudyId
  LEFT OUTER JOIN dbo.StudyGroup Sg ON sg.StudyId=sc.StudyId and sg.GroupId=sc.GroupId;
  select t.PersonId,t.DOB,t.FullName,t.GroupName, 'Binyretumor' as InfoText
  FROM #tempAll t 
  JOIN dbo.MetaItemAnswer mia5733 ON mia5733.OrderNumber=Var5733 AND mia5733.ItemId=5733
  WHERE ISNULL(Var5733,0)=1 
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="704" StudyName="ENDO" ProcName="ENDO.GetAddisonPatients" ProcDesc="Addison: Alle aktive" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6303" LastUpdate="2015-12-18T08:02:08.850Z">
		<![CDATA[]]>
	</row>
	<row ProcId="705" StudyName="ENDO.BASE" ProcName="ENDO.GetApsPatients" ProcDesc="Utvalg av APS etter type" ProcParams=":StudyId,:ApsType" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:09:04.170Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetApsPatients( @StudyId INT, @ApsType INT )
AS
BEGIN
  select p.PersonId,
  dbo.GetLastEnumVal( p.PersonId,'VAR6607') as ApsType
  INTO #temp1
  FROM Person p;
  SELECT DISTINCT PersonId 
  INTO #temp2
  FROM #temp1 
  WHERE ApsType = @ApsType;
  SELECT p.PersonId,p.DOB,p.ReverseName as FullName,sg.GroupName,ss.StatusText as InfoText,p.GenderId
  FROM #temp2 t2 
  JOIN Person p ON p.PersonId=t2.PersonId
  JOIN StudCase sc ON sc.PersonId=t2.PersonId
  JOIN StudyStatus ss ON ss.StudyId=sc.StudyId AND ss.StatusId=sc.FinState AND ss.StatusActive=1 
  JOIN StudyGroup sg ON sg.StudyId=sc.StudyId AND sg.GroupId=sc.GroupId AND sg.GroupActive=1
  WHERE sc.StudyId=@StudyId
END]]>
	</row>
	<row ProcId="706" StudyName="ENDO" ProcName="ENDO.GetApsType1" ProcDesc="Polyendokrine syndromer: APS-I" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:11:33.077Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetApsType1( @StudyId INT ) AS BEGIN EXEC ENDO.GetApsPatients @StudyId,1 END]]>
	</row>
	<row ProcId="707" StudyName="ENDO" ProcName="ENDO.GetApsType2" ProcDesc="Polyendokrine syndromer: APS-II" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:11:34.060Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetApsType2( @StudyId INT ) AS BEGIN EXEC ENDO.GetApsPatients @StudyId,2 END]]>
	</row>
	<row ProcId="708" StudyName="ENDO" ProcName="ENDO.GetApsType3" ProcDesc="Polyendokrine syndromer: APS-III" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:15:37.483Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetApsType3( @StudyId INT ) AS BEGIN EXEC ENDO.GetApsPatients @StudyId,3 END]]>
	</row>
	<row ProcId="709" StudyName="ROAS" ProcName="ENDO.GetApsType1" ProcDesc="Polyendokrine syndromer: APS-I" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:12:37.250Z">
		<![CDATA[]]>
	</row>
	<row ProcId="710" StudyName="ROAS" ProcName="ENDO.GetApsType2" ProcDesc="Polyendokrine syndromer: APS-II" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:12:41.983Z">
		<![CDATA[]]>
	</row>
	<row ProcId="711" StudyName="ROAS" ProcName="ENDO.GetApsType3" ProcDesc="Polyendokrine syndromer: APS-III" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:13:03.750Z">
		<![CDATA[]]>
	</row>
	<row ProcId="712" StudyName="ROAS" ProcName="ENDO.GetHypoParaAutoimmune" ProcDesc="Hypoparatyreoidisme: Idiopatisk/autoimmun" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:52:04Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoParaAutoImmune( @StudyId INT ) AS 
BEGIN 
 EXEC dbo.GetActiveSingleVar @StudyId,'VAR6663',0 
END]]>
	</row>
	<row ProcId="713" StudyName="ENDO" ProcName="ENDO.GetHypoParaAutoimmune" ProcDesc="Hypoparatyreoidisme: Idiopatisk/autoimmun" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:52:00.623Z">
		<![CDATA[]]>
	</row>
	<row ProcId="714" StudyName="ROAS" ProcName="ENDO.GetHypoParaPseudo" ProcDesc="Hypoparatyreoidisme: Pseudohypoparatyreoidisme" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:51:53.717Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoParaPseudo( @StudyId INT ) AS 
BEGIN 
 EXEC dbo.GetActiveSingleVar @StudyId,'VAR6663',1 
END]]>
	</row>
	<row ProcId="715" StudyName="ENDO" ProcName="ENDO.GetHypoParaPseudo" ProcDesc="Hypoparatyreoidisme: Pseudohypoparatyreoidisme" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:52:06.280Z">
		<![CDATA[]]>
	</row>
	<row ProcId="716" StudyName="ENDO" ProcName="ENDO.GetHypoParaAll" ProcDesc="Hypoparatyreoidisme: Alle aktive" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:50:36.467Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoParaAll( @StudyId INT ) AS 
BEGIN 
 EXEC dbo.GetActiveSingleVar @StudyId,'ICD10_E20',1 
END]]>
	</row>
	<row ProcId="717" StudyName="ROAS" ProcName="ENDO.GetHypoParaAll" ProcDesc="Hypoparatyreoidisme: Alle aktive" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:51:04.640Z">
		<![CDATA[]]>
	</row>
	<row ProcId="718" StudyName="ENDO" ProcName="ENDO.GetHypoParaPostop" ProcDesc="Hypoparatyreoidisme: Postoperativt" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:57:04.357Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoParaPostop( @StudyId INT ) AS 
BEGIN 
 EXEC dbo.GetActiveSingleVar @StudyId,'ICD10.E892',1 
END]]>
	</row>
	<row ProcId="719" StudyName="ROAS" ProcName="ENDO.GetHypoParaPostop" ProcDesc="Hypoparatyreoidisme: Postoperativt" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T10:57:12.140Z">
		<![CDATA[]]>
	</row>
	<row ProcId="720" StudyName="ENDO" ProcName="ENDO.GetHypoParaDiGeorge" ProcDesc="Hypoparatyreoidisme: Di George syndrom" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T11:09:16.967Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoParaDiGeorge( @StudyId INT ) AS 
BEGIN 
 EXEC dbo.GetActiveSingleVar @StudyId,'ICD10.E821',1 
END]]>
	</row>
	<row ProcId="721" StudyName="ROAS" ProcName="ENDO.GetHypoParaDiGeorge" ProcDesc="Hypoparatyreoidisme: Di George syndrom" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T11:09:19.500Z">
		<![CDATA[]]>
	</row>
	<row ProcId="722" StudyName="ENDO" ProcName="ENDO.GetHypoParaAutosomal" ProcDesc="Hypoparatyreoidisme: Autosomal dominant hypokalsemi" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T11:07:44.530Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoParaAutosomal( @StudyId INT ) AS 
BEGIN 
 EXEC dbo.GetActiveSingleVar @StudyId,'VAR6884',1 
END]]>
	</row>
	<row ProcId="723" StudyName="ROAS" ProcName="ENDO.GetHypoParaAutosomal" ProcDesc="Hypoparatyreoidisme: Autosomal dominant hypokalsemi" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T11:08:11.793Z">
		<![CDATA[]]>
	</row>
	<row ProcId="724" StudyName="ROAS" ProcName="ENDO.GetHypoThyroAutoimmune" ProcDesc="Hypotyreose: Autoimmun" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T11:19:34.450Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoThyroAutoimmune( @StudyId INT ) AS 
BEGIN 
 EXEC dbo.GetActiveSingleVar @StudyId,'ICD10_E063a',1 
END]]>
	</row>
	<row ProcId="725" StudyName="ROAS" ProcName="ROAS.GetRoasNumbers" ProcDesc="Prosess: Prøvenummer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6311" InfoCaption="Prøvenummer" LastUpdate="2016-04-15T18:29:00.283Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetRoasNumbers ( @StudyId INT ) AS
BEGIN
  SELECT v.*, ISNULL( CONVERT(VARCHAR, CONVERT(INT, a.Quantity)), 'Mangler') AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastQuantityTable(6082, NULL) a ON a.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId
  ORDER BY v.PersonId
END]]>
	</row>
	<row ProcId="726" StudyName="ROAS" ProcName="ENDO.GetHyperThyroAutoimmune" ProcDesc="Hypertyreose: Autoimmun" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-02-14T11:22:21.030Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHyperThyroAutoimmune( @StudyId INT ) AS 
BEGIN 
 EXEC dbo.GetActiveSingleVar @StudyId,'ICD10_E063b',1 
END]]>
	</row>
	<row ProcId="727" StudyName="ROAS" ProcName="ROAS.GetRoasNumbersMissing" ProcDesc="Prosess: Mangler prøvenummer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6311" InfoCaption="Informasjon" LastUpdate="2016-04-15T18:34:27.473Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetRoasNumbersMissing ( @StudyId INT ) AS
BEGIN
  SELECT v.*, ISNULL(CONVERT(VARCHAR, CONVERT(INT, a.Quantity)), 'Mangler') AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastQuantityTable( 6082, NULL) a ON a.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND a.Quantity IS NULL
  ORDER BY v.PersonId
END]]>
	</row>
	<row ProcId="728" StudyName="ROAS" ProcName="ENDO.GetDiabetesType1" ProcDesc="Diagnose: Diabetes type 1" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-06-06T10:09:07.020Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetDiabetesType1( @StudyId INT ) AS 
BEGIN 
 EXEC dbo.GetActiveSingleVar @StudyId,'ICD10_E10',1 
END]]>
	</row>
	<row ProcId="729" StudyName="ENDO" ProcName="ENDO.GetFamilialTumors" ProcDesc="Tumorer: Familære typer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" InfoCaption="Antall treff" LastUpdate="2013-08-22T08:42:11.113Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetFamilialTumors( @StudyId INT ) AS
BEGIN  

  SELECT ce.PersonId
  INTO #temp1
  FROM ClinObservation co
    JOIN ClinEvent ce ON ce.EventId=co.EventId
    JOIN MetaItem mi ON mi.VarName=co.VarName
  WHERE ( ce.StudyId=@StudyId ) AND ( mi.ItemId=5745 ) AND ( co.EnumVal = 1 )

  UNION
  
  SELECT ce.PersonId
  FROM ClinObservation co
    JOIN ClinEvent ce ON ce.EventId=co.EventId
    JOIN MetaItem mi ON mi.VarName=co.VarName
  WHERE ( ce.StudyId=@StudyId ) AND ( mi.ItemId=6981 ) AND ( co.EnumVal IN ( 1,2,3,4 ) );
  
  -- Få unik personliste
  
  SELECT PersonId,COUNT(*) AS HitCount 
  INTO #temp2 
  FROM #temp1 GROUP BY PersonId;
  
  -- Hent pasientene
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName, 'Kriterier = ' + CONVERT(VARCHAR,t.HitCount) AS InfoText
    FROM ViewCaseListStub v
    JOIN #temp2 t ON t.PersonId=v.PersonId
  WHERE v.StudyId=@StudyId
  ORDER BY v.FullName;
  END]]>
	</row>
	<row ProcId="730" StudyName="ENDO" ProcName="ENDO.GetDiabetesType1AndAddison" ProcDesc="Diagnose: Diabetes type 1 + Addison" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6302" LastUpdate="2015-12-17T14:10:25.190Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetDiabetesType1AndAddison( @StudyId INT ) AS 
BEGIN 
 EXEC dbo.GetActiveDoubleVar @StudyId,'ICD10_E10',1,'ICD10_E271',1 
END]]>
	</row>
	<row ProcId="731" StudyName="ROAS" ProcName="ENDO.GetDiabetesType1AndAddison" ProcDesc="Diagnose: Diabetes type 1 + Addison" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-06-06T10:09:11.877Z">
		<![CDATA[]]>
	</row>
	<row ProcId="732" StudyName="ROAS" ProcName="ENDO.GetDiabetesType1AndAddison" ProcDesc="Addison: Aktive med Diabetes type 1" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-03-19T14:17:21.897Z">
		<![CDATA[]]>
	</row>
	<row ProcId="733" StudyName="ENDO" ProcName="ENDO.GetDiabetesType1AndAddison" ProcDesc="Addison: Aktive med Diabetes type 1" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-03-19T14:17:44.083Z">
		<![CDATA[]]>
	</row>
	<row ProcId="734" StudyName="ENDO" ProcName="ENDO.GetEndocrineTumors" ProcDesc="Tumorer: Hypofyse, parathyroidea, binyre og familiære." ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-06-06T10:06:20.410Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetEndocrineTumors( @StudyId INT ) AS
BEGIN
  -- Get number of diagnoses
  SELECT ce.PersonId,count(DISTINCT co.VarName) AS HitCount
    INTO #temp
  FROM ClinObservation co
    JOIN ClinEvent ce ON ce.EventId=co.EventId
  WHERE ce.StudyId=@StudyId AND co.VarName IN
     ( SELECT VarName FROM MetaItem WHERE ItemId IN ( 5732,5733,5742,5745 ) )
     AND co.EnumVal = 1
     GROUP BY ce.PersonId;
  -- Get patients
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName, 'Treff = ' + CONVERT(VARCHAR,t.HitCount) AS InfoText
    FROM ViewCaseListStub v
    JOIN #temp t ON t.PersonId=v.PersonId
  WHERE v.StudyId=@StudyId
  ORDER BY v.FullName;
END]]>
	</row>
	<row ProcId="735" StudyName="ROAS" ProcName="ENDO.GetEndocrineTumors" ProcDesc="Tumorer: Hypofyse, parathyroidea, binyre og familiære." ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-06-06T10:06:26.097Z">
		<![CDATA[]]>
	</row>
	<row ProcId="736" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Hyperaldosteronisme (skjema finnes)" ProcParams=":StudyId,'Hyperaldosteronism'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" LastUpdate="2013-06-12T09:37:18.463Z">
		<![CDATA[]]>
	</row>
	<row ProcId="737" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Feokromocytom (skjema finnes)" ProcParams=":StudyId,'Phaeochromocytoma'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" LastUpdate="2013-06-12T09:37:23.277Z">
		<![CDATA[]]>
	</row>
	<row ProcId="738" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Hypofysesvikt (skjema finnes)" ProcParams=":StudyId,'Hypopituitarism'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" LastUpdate="2013-06-12T09:37:26.667Z">
		<![CDATA[]]>
	</row>
	<row ProcId="739" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Acromegali (skjema finnes)" ProcParams=":StudyId,'Acromegaly'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" LastUpdate="2013-06-12T09:37:30.183Z">
		<![CDATA[]]>
	</row>
	<row ProcId="740" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Cushing (skjema finnes)" ProcParams=":StudyId,'Cushing'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" LastUpdate="2013-06-12T09:37:38.103Z">
		<![CDATA[]]>
	</row>
	<row ProcId="741" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Hyperparatyroidisme (skjema finnes)" ProcParams=":StudyId,'Hyperparathyroidism'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" LastUpdate="2013-06-12T09:37:43.387Z">
		<![CDATA[]]>
	</row>
	<row ProcId="742" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Hyperprolaktinemi (skjema finnes)" ProcParams=":StudyId,'Hyperprolactinemia'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" LastUpdate="2013-06-12T09:37:45.760Z">
		<![CDATA[]]>
	</row>
	<row ProcId="743" StudyName="TEST" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Test Addison som parameter" ProcParams=":StudyId,'Addison'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" LastUpdate="2013-06-12T09:36:06.120Z">
		<![CDATA[]]>
	</row>
	<row ProcId="744" StudyName="ROAS" ProcName="dbo.GetActiveDeceased" ProcDesc="Døde: Døde uten Død som status" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-09-19T10:57:06.470Z">
		<![CDATA[CREATE PROCEDURE dbo.GetActiveDeceased( @StudyId INT ) AS
BEGIN
  select v.*,'Død ' + CONVERT(VARCHAR,p.DeceasedDate,106)+ ' ('+ss.StatusText+')' AS InfoText FROM 
  dbo.ViewActiveCaseListStub v
  JOIN dbo.StudyCase sc ON sc.StudyId=v.StudyId AND sc.PersonId=v.PersonId
  JOIN dbo.StudyStatus ss ON ss.StudyId=v.StudyId AND ss.StatusId=sc.StatusId
  JOIN dbo.Person p ON p.PersonId=v.PersonId
  WHERE (not p.DeceasedDate IS NULL) AND ( sc.StatusId<>2 ) AND ( v.StudyId=@StudyId )
  ORDER BY p.DeceasedDate DESC
END]]>
	</row>
	<row ProcId="800" StudyName="HOFTE" ProcName="dbo.GetCaseListLastGamma" ProcDesc="Operasjon: Gammanagling" ProcParams=":StudyId" ListId="CASE" GrantTo="public" LastUpdate="2013-09-03T11:41:34.540Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListLastGamma( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId, 'HofteGamma'
END

]]>
	</row>
	<row ProcId="1001" StudyName="GBD" ProcName="GBD.RapportAvvik" ProcDesc="Avviksrapport" ProcParams=":StudyId, :StartAt, :StopAt, :OrderBy" ListId="FR" GrantTo="public" LastUpdate="2014-10-01T13:33:16.560Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportAvvik ( @StudyId INT, @StartAt DateTime = NULL, @StopAt DateTime = NULL, @OrderBy INT = 0 ) AS
BEGIN
  SET LANGUAGE Norwegian; 
  IF @StartAt IS NULL SET @StartAt = GETDATE()-365;
  IF @StopAt IS NULL SET @StopAt = GETDATE();
  /* Conform to Population field names */
  SELECT 
    sc.PersonId, sg.CenterId, sg.GroupId, sg.GroupName, 
    ce.EventId, ce.EventTime, 
    cf.ClinFormId, cf.FormStatus, cf.FormComplete, cf.Comment,
    dbo.MonthYear( ce.EventTime ) AS MonthYear,
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ww, ce.EventTime ) AS EventWeek,
    v6402.EnumVal as E6402,
    a6402.OptionText as T6402,
    CONVERT(VARCHAR(16),v6410.TextVal) as T6410,
    v8507.EnumVal as E8507,
    a8507.OptionText as T8507,
    v8508.EnumVal as E8508,
    a8508.OptionText as T8508,
    v8509.EnumVal as E8509,
    a8509.OptionText as T8509,
    v8510.EnumVal as E8510,
    a8510.OptionText as T8510,
    v8511.EnumVal as E8511,
    a8511.OptionText as T8511,
    v8512.EnumVal as E8512,
    a8512.OptionText as T8512,
    CONVERT(VARCHAR(16),v8513.TextVal) as T8513,
    v8514.EnumVal as E8514,
    a8514.OptionText as T8514,
    CONVERT(VARCHAR(16),v8518.TextVal) as T8518,
    CONVERT(VARCHAR(16),v8519.TextVal) as T8519,
    v9105.EnumVal as E9105,
    a9105.OptionText as T9105,
    cf.CreatedAt, cf.CreatedBy, 
    pcr.Signature as CreatedBySign, pcr.FullName AS CreatedByName, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime DESC ) AS OrderNo 
  INTO #temp
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) 
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  JOIN dbo.StudCase sc ON ( sc.StudyId = ce.StudyId ) AND ( sc.PersonId = ce.PersonId ) 
  JOIN dbo.StudyGroup sg ON ( sg.StudyId = ce.StudyId ) AND ( sg.GroupId = ce.GroupId ) 
  JOIN dbo.StudyUser su ON ( su.StudyId=sg.StudyId ) AND ( su.UserId=USER_ID() ) 
  JOIN dbo.UserList my ON ( my.UserId = USER_ID() ) 
  JOIN dbo.StudyCenter c ON ( c.CenterId = sg.CenterId ) 
  JOIN dbo.UserList ucr ON ucr.UserId=cf.CreatedBy
  LEFT OUTER JOIN dbo.Person pcr ON pcr.PersonId=ucr.PersonId 
    LEFT OUTER JOIN dbo.ClinObservation v6402 ON v6402.EventId=ce.EventId and v6402.VarName='EVENT_SEVERITY'
      LEFT OUTER JOIN dbo.MetaItemAnswer a6402 ON a6402.ItemId=6402 and v6402.EnumVal=a6402.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v6410 ON v6410.EventId=ce.EventId and v6410.VarName='AvvikForslag'
    LEFT OUTER JOIN dbo.ClinObservation v8507 ON v8507.EventId=ce.EventId and v8507.VarName='AvvikAlvorlighet'
      LEFT OUTER JOIN dbo.MetaItemAnswer a8507 ON a8507.ItemId=8507 and v8507.EnumVal=a8507.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v8508 ON v8508.EventId=ce.EventId and v8508.VarName='AvvikOpplaering'
      LEFT OUTER JOIN dbo.MetaItemAnswer a8508 ON a8508.ItemId=8508 and v8508.EnumVal=a8508.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v8509 ON v8509.EventId=ce.EventId and v8509.VarName='AvvikRutiner'
      LEFT OUTER JOIN dbo.MetaItemAnswer a8509 ON a8509.ItemId=8509 and v8509.EnumVal=a8509.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v8510 ON v8510.EventId=ce.EventId and v8510.VarName='AvvikOppfoelging'
      LEFT OUTER JOIN dbo.MetaItemAnswer a8510 ON a8510.ItemId=8510 and v8510.EnumVal=a8510.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v8511 ON v8511.EventId=ce.EventId and v8511.VarName='AvvikSikring'
      LEFT OUTER JOIN dbo.MetaItemAnswer a8511 ON a8511.ItemId=8511 and v8511.EnumVal=a8511.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v8512 ON v8512.EventId=ce.EventId and v8512.VarName='AvvikStatus'
      LEFT OUTER JOIN dbo.MetaItemAnswer a8512 ON a8512.ItemId=8512 and v8512.EnumVal=a8512.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v8513 ON v8513.EventId=ce.EventId and v8513.VarName='AvvikLukketAv'
    LEFT OUTER JOIN dbo.ClinObservation v8514 ON v8514.EventId=ce.EventId and v8514.VarName='AvvikType'
      LEFT OUTER JOIN dbo.MetaItemAnswer a8514 ON a8514.ItemId=8514 and v8514.EnumVal=a8514.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v8518 ON v8518.EventId=ce.EventId and v8518.VarName='AvvikStikkord'
    LEFT OUTER JOIN dbo.ClinObservation v8519 ON v8519.EventId=ce.EventId and v8519.VarName='AvvikRespons'
    LEFT OUTER JOIN dbo.ClinObservation v9105 ON v9105.EventId=ce.EventId and v9105.VarName='AvvikHovedarsak'
      LEFT OUTER JOIN dbo.MetaItemAnswer a9105 ON a9105.ItemId=9105 and v9105.EnumVal=a9105.OrderNumber
  WHERE ( cf.DeletedAt IS NULL )
    AND ( mf.FormName='GbdAvvik' )
    AND ( ( su.GroupId=sg.GroupId ) OR ( su.ShowMyGroup = 0 ) ) 
    AND ( sg.CenterId=my.CenterId ) AND ( sg.GroupActive = 1 ) 
    AND ( sc.StudyId=@StudyId ) 
    AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  /* Select final dataset from temp table */
  IF @OrderBy=0 
    SELECT * FROM #temp ORDER BY EventTime;
  IF @OrderBy=1 
    SELECT * FROM #temp ORDER BY E8514, T8507;
  IF @OrderBy=2 
    SELECT * FROM #temp ORDER BY E9105, EventTime;
  IF @OrderBy=3 
    SELECT * FROM #temp ORDER BY T8512, EventTime;
END]]>
	</row>
	<row ProcId="1002" StudyName="GBD" ProcName="GBD.RapportBeslutninger" ProcDesc="Beslutninger" ProcParams=":StudyId" ListId="FR" GrantTo="public" LastUpdate="2014-05-13T13:22:27.940Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportBeslutninger ( @StudyId INT ) AS
BEGIN
  SET LANGUAGE Norwegian; 
  /* Conform to Population field names */
  SELECT 
    v.PersonId, v.DOB, v.FullName, v.GroupName, p.NationalId, 
    ce.EventId, ce.EventTime, 
    cf.ClinFormId, cf.FormStatus, cf.FormComplete, cf.Comment,
    dbo.MonthYear( ce.EventTime ) AS MonthYear,
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ww, ce.EventTime ) AS EventWeek,
    v129.EnumVal as E129,
    a129.OptionText as T129,
    v3437.EnumVal as E3437,
    a3437.OptionText as T3437,
    v3438.EnumVal as E3438,
    a3438.OptionText as T3438,
    v3439.EnumVal as E3439,
    a3439.OptionText as T3439,
    v3440.EnumVal as E3440,
    a3440.OptionText as T3440,
    v3441.EnumVal as E3441,
    a3441.OptionText as T3441,
    CONVERT(VARCHAR(64),v3443.TextVal) as T3443,
    cf.CreatedAt, cf.CreatedBy, 
    pcr.Signature as CreatedBySign, pcr.FullName AS CreatedByName, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime DESC ) AS OrderNo
  INTO #temp 
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) 
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId=ce.PersonId
  JOIN dbo.Person p ON p.PersonId=v.PersonId 
  JOIN dbo.UserList ucr ON ucr.UserId=cf.CreatedBy
  LEFT OUTER JOIN dbo.Person pcr ON pcr.PersonId=ucr.PersonId 
    LEFT OUTER JOIN dbo.ClinObservation v129 ON v129.EventId=ce.EventId and v129.VarName='MYNDIG'
      LEFT OUTER JOIN dbo.MetaItemAnswer a129 ON a129.ItemId=129 and v129.EnumVal=a129.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3437 ON v3437.EventId=ce.EventId and v3437.VarName='GJENOPPLIVES'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3437 ON a3437.ItemId=3437 and v3437.EnumVal=a3437.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3438 ON v3438.EventId=ce.EventId and v3438.VarName='AKUTTINNLEGGELSE'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3438 ON a3438.ItemId=3438 and v3438.EnumVal=a3438.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3439 ON v3439.EventId=ce.EventId and v3439.VarName='ORGANDONOR'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3439 ON a3439.ItemId=3439 and v3439.EnumVal=a3439.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3440 ON v3440.EventId=ce.EventId and v3440.VarName='OBDUSERES'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3440 ON a3440.ItemId=3440 and v3440.EnumVal=a3440.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3441 ON v3441.EventId=ce.EventId and v3441.VarName='BLODTRANSFUSJON'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3441 ON a3441.ItemId=3441 and v3441.EnumVal=a3441.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3443 ON v3443.EventId=ce.EventId and v3443.VarName='MYNDIG_KOMMENTAR'
  WHERE ( cf.DeletedAt IS NULL )          
    AND ( v.StudyId=@StudyId )
    AND ( mf.FormName='GBD_BESLUTNINGER' )
  ORDER BY EventTime;
  SELECT * FROM #temp WHERE OrderNo=1 ORDER BY GroupName,FullName;
END]]>
	</row>
	<row ProcId="1003" StudyName="GBD" ProcName="GBD.AntibioticReport" ProcDesc="Antibiotikakurer" ProcParams=":StartAt,:StopAt" ListId="FR" GrantTo="public" LastUpdate="2014-04-12T15:28:24.937Z">
		<![CDATA[CREATE PROCEDURE GBD.AntibioticReport( @StartAt DateTime, @StopAt DateTime )
AS
BEGIN
  SET LANGUAGE Norwegian;
  SELECT 
    p.PersonId,p.GroupName,DATEPART(month,StartAt) as MonthNo,
    dbo.MonthYear(StartAt) as MonthName,StartAt,StopAt,
    dt.StartReason,dt.StopReason,dt.ATC,dt.DrugName,dt.DrugForm,dt.Dose24hDD,up.FullName 
  FROM dbo.DrugTreatment dt
    JOIN dbo.ViewActiveCaseListStub p ON p.PersonId=dt.PersonId
    JOIN dbo.Study s ON s.StudyId=p.StudyId AND s.StudyName='GBD'
    JOIN dbo.UserList ul ON ul.UserId=dt.CreatedBy
    JOIN dbo.UserList my ON my.UserId=USER_ID()
    JOIN dbo.Person up ON up.PersonId=ul.PersonId
  WHERE dt.ATC LIKE 'J01%' AND ATC<>'J01XX05'
    AND dt.StartAt >= @StartAt AND dt.StartAt < @StopAt 
    AND ABS(DATEDIFF(day,dt.StopAt,dt.StartAt )) > 1 
  ORDER BY MonthNo,MonthName,dt.StartAt
END]]>
	</row>
	<row ProcId="1004" StudyName="GBD" ProcName="GBD.InfectionReport" ProcDesc="Infeksjonsregistreringer" ProcParams=":StudyId,:StartAt,:StopAt" ListId="FR" GrantTo="public" LastUpdate="2014-05-12T20:06:39.813Z">
		<![CDATA[CREATE PROCEDURE GBD.InfectionReport ( @StudyId INT, @StartAt DateTime = NULL, @StopAt DateTime = NULL ) AS
BEGIN
  SET LANGUAGE Norwegian; 
  IF @StartAt IS NULL SET @StartAt = GETDATE()-365;
  IF @StopAt IS NULL SET @StopAt = GETDATE();
  /* Conform to Population field names */
  SELECT 
    sc.PersonId, sg.CenterId, sg.GroupId, sg.GroupName, 
    ce.EventId, ce.EventTime, 
    cf.ClinFormId, cf.FormStatus, cf.FormComplete, cf.Comment,
    dbo.MonthYear( ce.EventTime ) AS MonthYear,
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ww, ce.EventTime ) AS EventWeek,
    v768.DTVal as T768,
    v769.EnumVal as E769,
    a769.OptionText as T769,
    CONVERT(VARCHAR(16),v771.TextVal) as T771,
    v777.EnumVal as E777,
    a777.OptionText as T777,
    v778.EnumVal as E778,
    a778.OptionText as T778,
    CONVERT(VARCHAR(16),v3495.TextVal) as T3495,
    v3498.EnumVal as E3498,
    a3498.OptionText as T3498,
    v3499.EnumVal as E3499,
    a3499.OptionText as T3499,
    v3500.DTVal as T3500,
    cf.CreatedAt, cf.CreatedBy, 
    pcr.Signature as CreatedBySign, pcr.FullName AS CreatedByName, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime DESC ) AS OrderNo 
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) 
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  JOIN dbo.StudCase sc ON ( sc.StudyId = ce.StudyId ) AND ( sc.PersonId = ce.PersonId ) 
  JOIN dbo.StudyGroup sg ON ( sg.StudyId = ce.StudyId ) AND ( sg.GroupId = ce.GroupId ) 
  JOIN dbo.StudyUser su ON ( su.StudyId=sg.StudyId ) AND ( su.UserId=USER_ID() ) 
  JOIN dbo.UserList my ON ( my.UserId = USER_ID() ) 
  JOIN dbo.StudyCenter c ON ( c.CenterId = sg.CenterId ) 
  JOIN dbo.UserList ucr ON ucr.UserId=cf.CreatedBy
  LEFT OUTER JOIN dbo.Person pcr ON pcr.PersonId=ucr.PersonId 
    LEFT OUTER JOIN dbo.ClinObservation v768 ON v768.EventId=ce.EventId and v768.VarName='INFECT_DATE_END'
    LEFT OUTER JOIN dbo.ClinObservation v769 ON v769.EventId=ce.EventId and v769.VarName='INFECT_TYPE'
      LEFT OUTER JOIN dbo.MetaItemAnswer a769 ON a769.ItemId=769 and v769.EnumVal=a769.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v771 ON v771.EventId=ce.EventId and v771.VarName='INFECT_AGENT_NAMES'
    LEFT OUTER JOIN dbo.ClinObservation v777 ON v777.EventId=ce.EventId and v777.VarName='INFEKSJON_INNLEGGELSE'
      LEFT OUTER JOIN dbo.MetaItemAnswer a777 ON a777.ItemId=777 and v777.EnumVal=a777.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v778 ON v778.EventId=ce.EventId and v778.VarName='INFEKSJON_DØD'
      LEFT OUTER JOIN dbo.MetaItemAnswer a778 ON a778.ItemId=778 and v778.EnumVal=a778.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3495 ON v3495.EventId=ce.EventId and v3495.VarName='INFECT_DRUG_NAMES'
    LEFT OUTER JOIN dbo.ClinObservation v3498 ON v3498.EventId=ce.EventId and v3498.VarName='INFECT_AGENT_KNOWN'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3498 ON a3498.ItemId=3498 and v3498.EnumVal=a3498.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3499 ON v3499.EventId=ce.EventId and v3499.VarName='INFECT_DRUG_GIVEN'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3499 ON a3499.ItemId=3499 and v3499.EnumVal=a3499.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3500 ON v3500.EventId=ce.EventId and v3500.VarName='INFECT_DATE_START'
  WHERE ( cf.DeletedAt IS NULL )
    AND ( mf.FormName='GBD_INFECTION' )
    AND ( ( su.GroupId=sg.GroupId ) OR ( su.ShowMyGroup = 0 ) ) 
    AND ( sg.CenterId=my.CenterId ) 
    AND ( sc.StudyId=@StudyId ) 
    AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  ORDER BY ce.EventTime DESC
END]]>
	</row>
	<row ProcId="1005" StudyName="GBD" ProcName="GBD.InjuryReport" ProcDesc="Skaderegistreringer" ProcParams=":StartAt,:StopAt" ListId="FR" GrantTo="public" LastUpdate="2014-04-12T15:30:49.937Z">
		<![CDATA[CREATE PROCEDURE GBD.InjuryReport( @StartAt DateTime = NULL, @StopAt DateTime = NULL, @OrderBy INTEGER = 0 ) 
AS
BEGIN
  IF @StartAt IS NULL SET @StartAt = getdate()-90;
  IF @StopAt IS NULL SET @StopAt = getdate();              
  SET LANGUAGE Norwegian;
  SELECT 
    ce.StudyId,ce.PersonId,dbo.MonthYear(ce.EventTime) as MonthName,
    sg.CenterId,c.CenterName,sc.GroupId,sg.GroupName,
    ce.EventTime,ISNULL(mia1.OptionText,'Uspesifisert') as SkadeType,
    co2.Quantity as Klokketime,
    mia3.OptionText as Aktivitet, 
    mia4.OptionText as Observert, 
    mia5.OptionText as Involvert,        
    mia6.OptionText as Illebefinnende,        
    mia7.OptionText as Brudd,        
    mia8.OptionText as Behandlingssted, 
    mia9.OrderNumber as Alvorlighet,       
    mia9.OptionText as AlvorlighetTekst,        
    cf.Comment as FormComment,                       
    ul.UserId,up.PersonId as UserPersonId,up.FullName
  INTO #temp
  FROM dbo.ClinEvent ce 
  JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId AND cf.DeletedAt IS NULL 
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId AND mf.FormId=267
  LEFT OUTER JOIN dbo.ClinObservation co1 ON co1.EventId=ce.EventId AND co1.VarName='SKADE_FALL'
  LEFT OUTER JOIN dbo.MetaItemAnswer mia1 ON mia1.ItemId=3580 and mia1.OrderNumber=co1.EnumVal
  LEFT OUTER JOIN dbo.ClinObservation co2 ON co2.EventId=ce.EventId AND co2.VarName='SKADE_TIDSPUNKT'
  LEFT OUTER JOIN dbo.ClinObservation co3 ON co3.EventId=ce.EventId AND co3.VarName='SKADE_AKTIVITET'
  LEFT OUTER JOIN dbo.MetaItemAnswer mia3 ON mia3.ItemId=3579 and mia3.OrderNumber=co3.EnumVal
  LEFT OUTER JOIN dbo.ClinObservation co4 ON co4.EventId=ce.EventId AND co4.VarName='SKADE_OBSERVERT'
  LEFT OUTER JOIN dbo.MetaItemAnswer mia4 ON mia4.ItemId=3575 and mia4.OrderNumber=co4.EnumVal
  LEFT OUTER JOIN dbo.ClinObservation co5 ON co5.EventId=ce.EventId AND co5.VarName='SKADE_INVOLVERT'
  LEFT OUTER JOIN dbo.MetaItemAnswer mia5 ON mia5.ItemId=3576 and mia5.OrderNumber=co5.EnumVal
  LEFT OUTER JOIN dbo.ClinObservation co6 ON co6.EventId=ce.EventId AND co6.VarName='SKADE_ILLEBEFINNENDE'
  LEFT OUTER JOIN dbo.MetaItemAnswer mia6 ON mia6.ItemId=3582 and mia6.OrderNumber=co6.EnumVal
  LEFT OUTER JOIN dbo.ClinObservation co7 ON co7.EventId=ce.EventId AND co7.VarName='SKADE_BRUDD'
  LEFT OUTER JOIN dbo.MetaItemAnswer mia7 ON mia7.ItemId=3581 and mia7.OrderNumber=co7.EnumVal
  LEFT OUTER JOIN dbo.ClinObservation co8 ON co8.EventId=ce.EventId AND co8.VarName='SKADE_BEHANDSTED'
  LEFT OUTER JOIN dbo.MetaItemAnswer mia8 ON mia8.ItemId=3578 and mia8.OrderNumber=co8.EnumVal
  LEFT OUTER JOIN dbo.ClinObservation co9 ON co9.EventId=ce.EventId AND co9.VarName='EVENT_SEVERITY'
  LEFT OUTER JOIN dbo.MetaItemAnswer mia9 ON mia9.ItemId=6402 and mia9.OrderNumber=co9.EnumVal
  JOIN dbo.UserList ul ON ul.UserId=cf.CreatedBy
  JOIN dbo.UserList mu ON mu.UserId=USER_ID()
  JOIN dbo.Person up ON up.PersonId=ul.PersonId
  JOIN dbo.StudCase sc ON sc.StudyId=ce.StudyId AND sc.PersonId=ce.PersonId
  JOIN dbo.StudyGroup sg ON sg.StudyId=sc.StudyId AND sg.GroupId=sc.GroupId AND sg.GroupActive=1
  JOIN dbo.StudyCenter c ON c.CenterId=sg.CenterId AND c.CenterId=mu.CenterId
  LEFT OUTER JOIN dbo.StudyUser su ON su.UserId=USER_ID() AND su.StudyId=sc.StudyId
  WHERE ( ce.EventTime > @StartAt AND ce.EventTime < @StopAt )
  AND (( su.GroupId=sc.GroupId ) OR ( su.UserId IS NULL ) OR ( su.GroupId IS NULL ) OR ( su.ShowMyGroup = 0 ));
  IF @OrderBy = 2
    SELECT * FROM #temp ORDER BY SkadeType,EventTime
  ELSE IF @OrderBy = 1
    SELECT * FROM #temp ORDER BY GroupId,PersonId,EventTime
  ELSE  
    SELECT * FROM #temp ORDER BY EventTime;  
END]]>
	</row>
	<row ProcId="1006" StudyName="GBD" ProcName="GBD.AnticholinergicDrugUse" ProcDesc="Antikolinergiske midler" ListId="FR" GrantTo="public" LastUpdate="2014-04-12T15:31:23.543Z">
		<![CDATA[CREATE PROCEDURE GBD.AnticholinergicDrugUse AS
BEGIN
  DECLARE @Total FLOAT;
  SELECT @Total = COUNT(*)
    FROM dbo.Person p 
    JOIN dbo.StudCase sc ON sc.PersonId=p.PersonId AND sc.StudyId=2
    JOIN dbo.StudyStatus ss ON ss.StudyId=sc.StudyId AND ss.StatusId=sc.FinState AND ss.StatusActive=1
    JOIN dbo.StudyGroup sg ON sg.StudyId=sc.StudyId AND sg.GroupId=sc.GroupId AND sg.GroupActive=1 
    JOIN dbo.StudyCenter c ON c.CenterId=sg.CenterId AND c.CenterActive=1;
  SELECT kb.ATC,kb.DrugName,kb.AlertLevel,count(*) as Antall,count(*) / @Total * 100 as PercentUse
    FROM dbo.KBAnticholinDrug kb join dbo.OngoingTreatment ot on ot.ATC=kb.ATC
    JOIN dbo.Person p ON p.PersonId=ot.PersonId
    JOIN dbo.StudCase sc ON sc.PersonId=p.PersonId AND sc.StudyId=2
    JOIN dbo.StudyStatus ss ON ss.StudyId=sc.StudyId AND ss.StatusId=sc.FinState AND ss.StatusActive=1
    JOIN dbo.StudyGroup sg ON sg.StudyId=sc.StudyId AND sg.GroupId=sc.GroupId AND sg.GroupActive=1
    JOIN dbo.StudyCenter c ON c.CenterId=sg.CenterId AND c.CenterActive=1
  GROUP BY kb.ATC,kb.DrugName,kb.AlertLevel 
  ORDER BY count(*) DESC
END]]>
	</row>
	<row ProcId="1007" StudyName="GBD" ProcName="GBD.Bestillingsliste" ProcDesc="Bestillingsliste" ListId="FR" GrantTo="public" LastUpdate="2014-04-12T15:31:53.217Z">
		<![CDATA[CREATE PROCEDURE GBD.Bestillingsliste AS
BEGIN
  SELECT a.ATCCode, a.ATCName, dbo.GetFirstWord( dt.DrugName ) as DrugName, dt.DrugForm, NULLIF(dt.Strength,0) AS Strength, dt.StrengthUnit,
     count(*) as PasAnt, NULLIF( sum(dt.Dose24hCount),0) AS Ant24h,CONVERT( INT, NULLIF( sum(dt.Dose24hCount)*14,0) ) AS Ant14d
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.OngoingTreatment dt ON dt.PersonId=v.PersonId
  JOIN dbo.KBATCIndex a ON dt.ATC=a.ATCCode
  JOIN dbo.MetaTreatType mt ON mt.TreatType=dt.TreatType
  JOIN dbo.MetaPackType mp ON mp.PackType=dt.PackType
  WHERE dt.PackType <> 'M'
  GROUP BY a.ATCCode, a.ATCName,dbo.GetFirstWord( dt.DrugName ),dt.DrugForm,dt.Strength,dt.StrengthUnit 
  ORDER BY a.ATCCode, Strength
END]]>
	</row>
	<row ProcId="1008" StudyName="BAR" ProcName="BAR.ReportInclusion" ProcDesc="Inklusjonsrapport" ProcParams=":StudyId" ListId="FR" GrantTo="public" LastUpdate="2014-11-25T09:58:06.410Z">
		<![CDATA[CREATE PROCEDURE BAR.ReportInclusion ( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId, p.DOB, p.FullName, sg.GroupName, ce.EventTime, ce.StudyId, cf.ClinFormId, 
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ww, ce.EventTime ) AS EventWeek,
    CONVERT(VARCHAR(16),v6166.TextVal) as T6166,
    v6168.EnumVal as E6168,
    a6168.OptionText as T6168,
    v6169.DTVal as T6169,
    v6170.Quantity as T6170,
    v6242.EnumVal as E6242,
    a6242.OptionText as T6242,
    v6243.EnumVal as E6243,
    a6243.OptionText as T6243,
    v6245.EnumVal as E6245,
    a6245.OptionText as T6245,
    v6246.EnumVal as E6246,
    a6246.OptionText as T6246,
    v6247.EnumVal as E6247,
    a6247.OptionText as T6247,
    v6248.EnumVal as E6248,
    a6248.OptionText as T6248,
    v8091.EnumVal as E8091,
    a8091.OptionText as T8091,
    v9319.EnumVal as E9319,
    a9319.OptionText as T9319,
    v9321.EnumVal as E9321,
    a9321.OptionText as T9321,
    cf.FormStatus, cf.FormComplete, cf.Comment,
    up.FullName AS UserFullName, up.Signature as CreatedBySign 
  INTO #temp
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) 
  JOIN dbo.StudCase sc ON ( sc.StudyId = ce.StudyId ) AND ( sc.PersonId = ce.PersonId ) 
  JOIN dbo.ViewActiveCaseListStub p ON ( p.PersonId=sc.PersonId ) 
  LEFT OUTER JOIN dbo.StudyGroup sg ON ( sg.StudyId = ce.StudyId ) AND ( sg.GroupId = ce.GroupId ) 
  LEFT OUTER JOIN dbo.UserList ul ON ul.UserId=cf.CreatedBy
  LEFT OUTER JOIN dbo.Person up ON up.PersonId=ul.PersonId 
    LEFT OUTER JOIN dbo.ClinObservation v6166 ON v6166.EventId=ce.EventId and v6166.VarName='VAR6166'
    LEFT OUTER JOIN dbo.ClinObservation v6168 ON v6168.EventId=ce.EventId and v6168.VarName='BarReferredFrom'
      LEFT OUTER JOIN dbo.MetaItemAnswer a6168 ON a6168.ItemId=6168 and v6168.EnumVal=a6168.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v6169 ON v6169.EventId=ce.EventId and v6169.VarName='BarInclusion'
    LEFT OUTER JOIN dbo.ClinObservation v6170 ON v6170.EventId=ce.EventId and v6170.VarName='BarInclusionAge'
    LEFT OUTER JOIN dbo.ClinObservation v6242 ON v6242.EventId=ce.EventId and v6242.VarName='VAR6242'
      LEFT OUTER JOIN dbo.MetaItemAnswer a6242 ON a6242.ItemId=6242 and v6242.EnumVal=a6242.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v6243 ON v6243.EventId=ce.EventId and v6243.VarName='VAR6243'
      LEFT OUTER JOIN dbo.MetaItemAnswer a6243 ON a6243.ItemId=6243 and v6243.EnumVal=a6243.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v6245 ON v6245.EventId=ce.EventId and v6245.VarName='VAR6245'
      LEFT OUTER JOIN dbo.MetaItemAnswer a6245 ON a6245.ItemId=6245 and v6245.EnumVal=a6245.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v6246 ON v6246.EventId=ce.EventId and v6246.VarName='VAR6246'
      LEFT OUTER JOIN dbo.MetaItemAnswer a6246 ON a6246.ItemId=6246 and v6246.EnumVal=a6246.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v6247 ON v6247.EventId=ce.EventId and v6247.VarName='VAR6247'
      LEFT OUTER JOIN dbo.MetaItemAnswer a6247 ON a6247.ItemId=6247 and v6247.EnumVal=a6247.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v6248 ON v6248.EventId=ce.EventId and v6248.VarName='VAR6248'
      LEFT OUTER JOIN dbo.MetaItemAnswer a6248 ON a6248.ItemId=6248 and v6248.EnumVal=a6248.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v8091 ON v8091.EventId=ce.EventId and v8091.VarName='VAR8091'
      LEFT OUTER JOIN dbo.MetaItemAnswer a8091 ON a8091.ItemId=8091 and v8091.EnumVal=a8091.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v9319 ON v9319.EventId=ce.EventId and v9319.VarName='VAR9319'
      LEFT OUTER JOIN dbo.MetaItemAnswer a9319 ON a9319.ItemId=9319 and v9319.EnumVal=a9319.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v9321 ON v9321.EventId=ce.EventId and v9321.VarName='VAR9321'
      LEFT OUTER JOIN dbo.MetaItemAnswer a9321 ON a9321.ItemId=9321 and v9321.EnumVal=a9321.OrderNumber
  WHERE cf.FormId=763;
  SELECT * FROM #temp ORDER BY PersonId
END]]>
	</row>
	<row ProcId="1009" StudyName="NDV" ProcName="NDV.ReportLabDataFound" ProcDesc="Labdata registrert" ProcParams=":DiabetesType,:StartDate,:StopDate" ListId="FR" GrantTo="public" MinVersion="6000" LastUpdate="2015-11-05T07:37:55.800Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportLabDataFound( @DiabetesType INT, @FirstDate DateTime = NULL, @LastDate DateTime = NULL ) AS
BEGIN

  -- Inclusion period
  IF @LastDate IS NULL SET @LastDate = DATEDIFF(DAY,0,GETDATE());
  IF @FirstDate IS NULL SET @FirstDate = DATEADD( month, -15, @LastDate );

  -- Collection periods for labdata is different from inclusion
  CREATE TABLE #Dates( LabClassId INT NOT NULL PRIMARY KEY, Months INT, StartDate DateTime, LabName VARCHAR(32) );
  INSERT INTO #Dates VALUES (  6, 15, @FirstDate, 'U-Albumin/kreatinin ratio' );
  -- INSERT INTO #Dates VALUES ( 22, 12, @FirstDate ); -- Hemoglobin
  INSERT INTO #Dates VALUES ( 34, 30, @FirstDate, 'S-Totalkolesterol' );
  INSERT INTO #Dates VALUES ( 35, 30, @FirstDate, 'S-LDL-kolesterol' );
  INSERT INTO #Dates VALUES ( 36, 30, @FirstDate, 'S-Triglyserider' );
  INSERT INTO #Dates VALUES ( 37, 30, @FirstDate, 'S-HDL-kolesterol' );
  INSERT INTO #Dates VALUES ( 45, 15, @FirstDate, 'B-HbA1c' );
  INSERT INTO #Dates VALUES ( 49, 15, @FirstDate, 'S-Kreatinin' );
  INSERT INTO #Dates VALUES ( 50, 15, @FirstDate, 'Pt-GFR' );        
  IF @DiabetesType=1
  BEGIN
    INSERT INTO #Dates VALUES ( 62, 60, @FirstDate, 'S-Kobalaminer' );
    INSERT INTO #Dates VALUES ( 83, 60, @FirstDate, 'S-TSH' );
  END;
  INSERT INTO #Dates VALUES ( 124, 30, @FirstDate, 'S-ALAT' );
  UPDATE #Dates SET StartDate  = DATEADD(month,-Months,@LastDate )

  -- Get caselist for everybody with NDV_TYPE (ItemId=3196) in period
  SELECT DISTINCT ce.PersonId INTO #CaseList 
  FROM dbo.ClinEvent ce 
  JOIN dbo.StudyGroup sg ON sg.StudyId=ce.StudyId AND sg.GroupId=ce.GroupId AND sg.GroupActive=1
  JOIN dbo.UserList ul ON ul.CenterId = sg.CenterId AND ul.UserId=USER_ID()
  JOIN dbo.ClinDatapoint dp ON dp.EventId=ce.EventId AND dp.ItemId=3196
  WHERE ( ce.EventTime >= @FirstDate ) AND ( ce.EventTime < @LastDate ) AND ( dp.EnumVal = @DiabetesType );

  -- Get denominator
  DECLARE @Antall INT;
  SELECT @Antall = COUNT(*) FROM #CaseList;

  -- Count lab measurements done
  SELECT v.PersonId,lc.LabClassId,count(LabDate) as Antall
  INTO #PersonLabCount FROM #CaseList v
  JOIN dbo.LabData ld ON ld.PersonId=v.PersonId
  JOIN dbo.LabCode lc ON lc.LabCodeId=ld.LabCodeId
  JOIN #Dates d ON d.LabClassId=lc.LabClassId
  WHERE ( ld.LabDate > d.StartDate ) AND ( ld.LabDate < @LastDate )
  GROUP BY v.PersonId,lc.LabClassId;

  -- Aggregate data
  SELECT LabClassId,COUNT(*) as Teller
  INTO #FinalDataset
  FROM #PersonLabCount
  GROUP BY LabClassId;
  -- Get Result
  SELECT d.LabClassId,d.LabName AS FriendlyName,d.StartDate,d.Months,@LastDate as StopDate,ISNULL(r.Teller,0) AS Teller,@Antall AS Nevner,
    CONVERT(DECIMAL(5,1),100*CONVERT(FLOAT,Teller)/CONVERT(FLOAT,@Antall),2) as Andel 
  FROM #Dates d
  LEFT OUTER JOIN #FinalDataset r ON r.LabClassId=d.LabClassId
  ORDER BY d.LabClassId
END]]>
	</row>
	<row ProcId="1010" StudyName="NDV" ProcName="NDV.ReportClinDataFound" ProcDesc="Kliniske data registrert" ProcParams=":DiabetesType,:StartDate,:StopDate" ListId="FR" GrantTo="public" MinVersion="6000" LastUpdate="2015-11-05T07:37:56.487Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportClinDataFound( @DiabetesType INT, @FirstDate DateTime = NULL, @LastDate DateTime = NULL ) AS
BEGIN

  -- Inclusion period
  IF @LastDate IS NULL SET @LastDate = DATEDIFF(DAY,0,GETDATE());
  IF @FirstDate IS NULL SET @FirstDate = DATEADD( month, -15, @LastDate );

  -- Collection periods for labdata is different from inclusion
  CREATE TABLE #Dates( ItemId INT NOT NULL PRIMARY KEY, Months INT, StartDate DateTime, Caption VARCHAR(32), UnknownVal INT, OrderNo INT );
  INSERT INTO #Dates VALUES (  3196, 120, @FirstDate, 'Diabetes type', -1, 1 );
  INSERT INTO #Dates VALUES (  3389, 120, @FirstDate, 'Samtykke besvart Ja/Nei/Trukket', 4, 2 );
  INSERT INTO #Dates VALUES (  3982, 120, @FirstDate, 'Etnisitet besvart', 5, 3 );
  INSERT INTO #Dates VALUES (  3342, 15, @FirstDate, 'Koronarsykdom i familien besvart', 3, 4 );
  -- Undersøkelser
  INSERT INTO #Dates VALUES (  3225, 120, @FirstDate, 'Høyde registrert', -1, 5 ); 
  INSERT INTO #Dates VALUES (  3224,  15, @FirstDate, 'Vekt registrert', -1, 6 ); 
  INSERT INTO #Dates VALUES (  3227, 15, @FirstDate, 'Røykevaner besvart', 4, 7 );
  INSERT INTO #Dates VALUES (  3230, 15, @FirstDate, 'Blodtrykk registrert', -1, 8 );
  INSERT INTO #Dates VALUES (  4636, 15, @FirstDate, 'Fotsensibilitet undersøkt', 5, 9 );
  INSERT INTO #Dates VALUES (  4637, 15, @FirstDate, 'Fotpuls undersøkt', 5, 10 );
  -- Medikamenter
  INSERT INTO #Dates VALUES (  3322, 15, @FirstDate, 'Behandlingsstrategi besvart', 5, 11 );
  INSERT INTO #Dates VALUES (  3336, 15, @FirstDate, 'Platehemmer besvart', 3, 12 );
  INSERT INTO #Dates VALUES (  4003, 15, @FirstDate, 'Antikoagulasjon besvart', 3, 12 );
  INSERT INTO #Dates VALUES (  3337, 15, @FirstDate, 'Lipidsenkende besvart', 3, 13 );
  INSERT INTO #Dates VALUES (  3339, 15, @FirstDate, 'ACE-hemmer besvart', 3, 14 );
  -- Komplikasjoner
  INSERT INTO #Dates VALUES (  3397, 15, @FirstDate, 'Koronarsykdom besvart', 3, 15 );
  INSERT INTO #Dates VALUES (  3398, 15, @FirstDate, 'Hjerneslag besvart', 3, 16 );
  INSERT INTO #Dates VALUES (  4087, 15, @FirstDate, 'Retinopati besvart', 4, 17 ); 
  UPDATE #Dates SET StartDate  = DATEADD(month,-Months,@LastDate )

  -- Get caselist for everybody with NDV_TYPE (ItemId=3196) in period
  SELECT DISTINCT ce.PersonId INTO #CaseList 
  FROM dbo.ClinEvent ce 
  JOIN dbo.StudyGroup sg ON sg.StudyId=ce.StudyId AND sg.GroupId=ce.GroupId AND sg.GroupActive=1
  JOIN dbo.UserList ul ON ul.CenterId = sg.CenterId AND ul.UserId=USER_ID()
  JOIN dbo.ClinDatapoint dp ON dp.EventId=ce.EventId AND dp.ItemId=3196
  WHERE ( ce.EventTime >= @FirstDate ) AND ( ce.EventTime < @LastDate ) AND ( dp.EnumVal = @DiabetesType );

  -- Get denominator
  DECLARE @Antall INT;
  SELECT @Antall = COUNT(DISTINCT PersonId) FROM #CaseList;

  -- Count data registered
  SELECT v.PersonId,dp.ItemId,count(dp.RowId) as Antall
  INTO #PersonDataCount FROM #CaseList v
  JOIN dbo.ClinEvent ce ON ce.PersonId=v.PersonId
  JOIN dbo.ClinDatapoint dp ON dp.EventId=ce.EventId
  JOIN #Dates d ON d.ItemId=dp.ItemId
  WHERE ( ce.EventTime > d.StartDate ) AND ( ce.EventTime < @LastDate ) 
    AND (dp.Quantity > 0 ) AND ( ISNULL(dp.EnumVal,0) <> d.UnknownVal  )
  GROUP BY v.PersonId,dp.ItemId;

  -- Aggregate data
  SELECT ItemId,COUNT(*) as Teller
  INTO #FinalDataset
  FROM #PersonDataCount
  GROUP BY ItemId;
  -- Get Result
  SELECT mi.ItemId,d.Caption,d.StartDate,d.Months,@LastDate as StopDate,ISNULL(r.Teller,0) AS Teller,@Antall AS Nevner,
    CONVERT(DECIMAL(5,1),100*CONVERT(FLOAT,Teller)/CONVERT(FLOAT,@Antall),2) as Andel 
  FROM #Dates d
  JOIN dbo.MetaItem mi ON mi.ItemId=d.ItemId
  LEFT OUTER JOIN #FinalDataset r ON r.ItemId=d.ItemId
  ORDER BY d.OrderNo;
END]]>
	</row>
	<row ProcId="1011" StudyName="NDV" ProcName="NDV.ReportLabAverages" ProcDesc="Snittverdier labdata" ProcParams=":CenterId,:DiabetesType,:StartDate,:StopDate" ListId="FR" GrantTo="public" MinVersion="6000" LastUpdate="2015-11-05T07:37:57.610Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportLabAverages( @CenterId INT, @DiabetesType INT, @FirstDate DateTime = NULL, @LastDate DateTime = NULL ) AS
BEGIN
  -- Prepare inclusion period
  IF @LastDate IS NULL SET @LastDate = DATEDIFF(DAY,0,GETDATE());
  IF @FirstDate IS NULL SET @FirstDate = DATEADD( month, -15, @LastDate );
  -- Get data
  SELECT PersonId,LabClassId,LabDate,NumResult
  INTO #LabList
  FROM (
    SELECT ld.PersonId,lc.LabClassId,ld.NumResult,ld.LabDate,
	  RANK() OVER ( PARTITION BY ld.PersonId,lc.LabClassId ORDER BY ld.LabDate DESC ) AS TestNo
    FROM dbo.LabData ld
    JOIN dbo.LabCode lc ON lc.LabCodeId=ld.LabCodeId
	JOIN NDV.CaseList( @CenterId, @DiabetesType, @FirstDate, @LastDate ) cas ON cas.PersonId=ld.PersonId
    WHERE lc.LabClassId IN (6,34,35,36,37,45,49,124) AND ld.NumResult >= 0
      AND ld.LabDate < @LastDate ) LabList
  WHERE LabList.TestNo=1;
  SELECT lab.LabClassId,p.GenderId,lc.FriendlyName,
    MIN(lab.NumResult) AS MinVal,CONVERT(DECIMAL(9,2),AVG(lab.NumResult)) AS AvgVal,MAX(lab.NumResult) AS MaxVal FROM #LabList lab
  JOIN Person p ON p.PersonId=lab.PersonId
  JOIN LabClass lc ON lc.LabClassId=lab.LabClassId
  GROUP BY lab.LabClassId,p.GenderId,lc.FriendlyName
  ORDER BY lab.LabClassId,p.GenderId;
END]]>
	</row>
	<row ProcId="1012" StudyName="NDV" ProcName="NDV.ReportBpAverages" ProcDesc="Snittverdier blodtrykk" ProcParams=":CenterId,:DiabetesType,:StartDate,:StopDate" ListId="FR" GrantTo="public" MinVersion="6000" LastUpdate="2015-11-05T07:37:58.377Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportBpAverages( @CenterId INT, @DiabetesType INT, @FirstDate DateTime = NULL, @LastDate DateTime = NULL ) AS
BEGIN
  -- Prepare inclusion period
  IF @LastDate IS NULL SET @LastDate = DATEDIFF(DAY,0,GETDATE());
  IF @FirstDate IS NULL SET @FirstDate = DATEADD( month, -15, @LastDate );
  -- Get data
  SELECT PersonId,ItemId,EventTime,Quantity 
  INTO #BpList
  FROM (
    SELECT ce.PersonId,dp.ItemId,dp.Quantity,ce.EventTime,RANK() OVER ( PARTITION BY ce.PersonId,dp.ItemId ORDER BY ce.EventTime DESC ) AS BpNo
    FROM dbo.ClinDatapoint dp
    JOIN dbo.ClinEvent ce ON ce.EventId=dp.EventId
	JOIN NDV.CaseList( @CenterId, @DiabetesType, @FirstDate, @LastDate ) cas ON cas.PersonId=ce.PersonId
    WHERE dp.ItemId IN ( 3230,3231 ) AND dp.Quantity > 0
      AND ce.EventTime < @LastDate ) BpList
  WHERE BpList.BpNo=1;
  SELECT bp.ItemId,p.GenderId,COUNT(p.PersonId) AS PatCount,MIN(Quantity) AS MinVal,CONVERT(DECIMAL(9,1),AVG(Quantity)) AS AvgVal, MAX(Quantity) as MaxVal 
  FROM #BpList bp JOIN Person p ON p.PersonId=bp.PersonId
  GROUP BY p.GenderId,bp.ItemId
  ORDER BY p.GenderId,bp.ItemId
END]]>
	</row>
	<row ProcId="1013" StudyName="NDV" ProcName="NDV.ReportLabAveragesByAge" ProcDesc="Snittverdier labdata etter alder" ProcParams=":CenterId,:DiabetesType" ListId="FR" GrantTo="public" MinVersion="6000" LastUpdate="2015-11-05T07:37:59.033Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportLabAveragesByAge( @CenterId INT, @DiabetesType INT, @LabClassId INT, @FirstDate DateTime = NULL, @LastDate DateTime = NULL ) AS
BEGIN
  -- Prepare inclusion period
  IF @LastDate IS NULL SET @LastDate = DATEDIFF(DAY,0,GETDATE());
  IF @FirstDate IS NULL SET @FirstDate = DATEADD( month, -15, @LastDate );
  -- Get data
  SELECT PersonId,LabClassId,LabDate,NumResult
  INTO #LabList
  FROM (
    SELECT ld.PersonId,lc.LabClassId,ld.NumResult,ld.LabDate, RANK() OVER ( PARTITION BY ld.PersonId,lc.LabClassId ORDER BY ld.LabDate DESC ) AS TestNo
    FROM dbo.LabData ld
    JOIN dbo.LabCode lc ON lc.LabCodeId=ld.LabCodeId
    JOIN NDV.CaseList( @CenterId, @DiabetesType, @FirstDate, @LastDate ) cas ON cas.PersonId=ld.PersonId
    WHERE lc.LabClassId = @LabClassId AND ld.NumResult >= 0
      AND ld.LabDate < @LastDate ) LabList
  WHERE LabList.TestNo=1;
  -- Aggregate it
  SELECT p.AgeDecades,COUNT(p.PersonId) AS PatCount,
    MIN(lab.NumResult) AS MinVal,CONVERT(DECIMAL(9,2),AVG(lab.NumResult)) AS AvgVal,MAX(lab.NumResult) AS MaxVal 
  INTO #FinalDataset
  FROM #LabList lab
  JOIN NDV.AgeList( @LastDate ) p ON p.PersonId=lab.PersonId
  JOIN LabClass lc ON lc.LabClassId=lab.LabClassId
  GROUP BY p.AgeDecades;
  SELECT AgeDecades AS FromAge,AgeDecades + 9 AS ToAge,PatCount,MinVal,AvgVal,MaxVal FROM #FinalDataset
  ORDER BY AgeDecades;
END]]>
	</row>
	<row ProcId="1014" StudyName="GBD" ProcName="GBD.RapportKontaktinfo" ProcDesc="Kontaktinfo pårørende" ProcParams=":StudyId" ListId="FR" GrantTo="public" MinVersion="6000" LastUpdate="2015-11-05T07:38:00.423Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportKontaktinfo ( @StudyId INT ) AS
BEGIN
  SET LANGUAGE Norwegian; 
  /* Conform to Population field names */
  SELECT 
    v.PersonId, v.DOB, v.FullName, v.GenderId, v.GroupName, 
    ce.EventId, ce.EventTime, 
    cf.ClinFormId, cf.FormStatus, cf.FormComplete, cf.Comment,
    dbo.MonthYear( ce.EventTime ) AS MonthYear,
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ww, ce.EventTime ) AS EventWeek,
    v122.EnumVal as E122,
    a122.OptionText as T122,
    CONVERT(VARCHAR(64),v3424.TextVal) as T3424,
    CONVERT(VARCHAR(64),v3425.TextVal) as T3425,
    CONVERT(VARCHAR(64),v3426.TextVal) as T3426,
    CONVERT(VARCHAR(64),v3427.TextVal) as T3427,
    CONVERT(VARCHAR(16),v3433.TextVal) as T3433,
    CONVERT(VARCHAR(64),v9318.TextVal) as T9318,
    cf.CreatedAt, cf.CreatedBy, 
    pcr.Signature as CreatedBySign, pcr.FullName AS CreatedByName, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime DESC ) AS OrderNo 
  INTO #temp
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) 
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId=ce.PersonId 
  JOIN dbo.UserList ucr ON ucr.UserId=cf.CreatedBy
    LEFT OUTER JOIN dbo.Person pcr ON pcr.PersonId=ucr.PersonId 
    LEFT OUTER JOIN dbo.ClinObservation v122 ON v122.EventId=ce.EventId and v122.VarName='NEXTOFKIN_TYPE'
    LEFT OUTER JOIN dbo.MetaItemAnswer a122 ON a122.ItemId=122 and v122.EnumVal=a122.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3424 ON v3424.EventId=ce.EventId and v3424.VarName='NEXTOFKIN_ADDRESS'
    LEFT OUTER JOIN dbo.ClinObservation v3425 ON v3425.EventId=ce.EventId and v3425.VarName='NEXTOFKIN_PHONE'
    LEFT OUTER JOIN dbo.ClinObservation v3426 ON v3426.EventId=ce.EventId and v3426.VarName='NEXTOFKIN_NAME'
    LEFT OUTER JOIN dbo.ClinObservation v3427 ON v3427.EventId=ce.EventId and v3427.VarName='NEXTOFKIN_CITY'
    LEFT OUTER JOIN dbo.ClinObservation v3433 ON v3433.EventId=ce.EventId and v3433.VarName='NEXTOFKIN_ZIP'
    LEFT OUTER JOIN dbo.ClinObservation v9318 ON v9318.EventId=ce.EventId and v9318.VarName='NEXTOFKIN_EMAIL'
  WHERE ( cf.DeletedAt IS NULL )
    AND ( mf.FormName='GBD_PASADMIN' )
    AND ( v.StudyId=@StudyId ) 
  ORDER BY EventTime DESC;
  SELECT * FROM #temp WHERE OrderNo=1 ORDER BY FullName;
END]]>
	</row>
	<row ProcId="1015" StudyName="GBD" ProcName="GBD.RapportPaminnelser" ProcDesc="Aktive påminnelser" ProcParams=":StudyId" ListId="FR" GrantTo="public" MinVersion="521" LastUpdate="2015-09-03T12:18:29.723Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportPaminnelser( @StudyId INT )AS
BEGIN
   SET LANGUAGE Norwegian; 
   SELECT v.PersonId, v.DOB,v.FullName,
   a.AlertHeader AS T5601,
   SUBSTRING(a.AlertMessage,1,CHARINDEX('( <a href',a.AlertMessage)-1) AS T5602,
   a.AlertButtons AS T5603,
   a.HideUntil AS T5604, 
   ce.EventTime, up.Signature AS CreatedBySign
  FROM dbo.Alert a 
  JOIN dbo.ViewActiveCaseListStub v ON v.StudyId=a.StudyId AND v.PersonId=a.PersonId
  JOIN dbo.ClinForm cf ON cf.ClinFormId=CONVERT(INTEGER,SUBSTRING(AlertClass,4,15))
  JOIN dbo.ClinEvent ce ON ce.EventId=cf.EventId
  JOIN dbo.UserList ul ON ul.UserId=cf.CreatedBy
  LEFT OUTER JOIN dbo.Person up ON up.PersonId=ul.PersonId
  WHERE ( AlertClass LIKE 'CF#%' ) 
  AND ( v.StudyId=@StudyId ) 
  AND ( a.HideUntil > GETDATE() - 7 ) AND ( a.HideUntil < GETDATE() + 3650 )
  ORDER BY a.HideUntil DESC
END]]>
	</row>
	<row ProcId="1016" StudyName="GBD" ProcName="GBD.RapportFallOgSkader" ProcDesc="Fall og skader" ProcParams=":StudyId, :StartAt, :StopAt, :OrderBy" ListId="FR" GrantTo="public" MinVersion="521" LastUpdate="2015-09-16T10:49:57.280Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportFallOgSkader( @StudyId INT, @StartAt DateTime = NULL, @StopAt DateTime = NULL, @OrderBy INT = 0 ) AS
BEGIN
  SET LANGUAGE Norwegian; 
  IF @StartAt IS NULL SET @StartAt = GETDATE()-365;
  IF @StopAt IS NULL SET @StopAt = GETDATE();
                     
  /* Get relevant forms (GbdAvvik) except when GBD_SKADE on same event */
  SELECT cf.ClinFormId
    INTO #formEventList 
    FROM dbo.ClinForm cf 
    JOIN dbo.ClinEvent ce ON ce.EventId=cf.EventId
    JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
    JOIN dbo.ClinObservation co ON co.EventId=cf.EventId AND co.VarName='SKADE_FALL'
  WHERE ce.StudyId=@StudyId AND mf.FormName = 'GbdAvvik' AND co.EnumVal in (1,2,3) 
    AND NOT cf.EventId IN (SELECT EventId FROM dbo.ClinForm JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId WHERE mf.FormName='GBD_SKADE' AND DeletedAt IS NULL)
    AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  UNION
  /* Add relevant forms (GBD_SKADE) */
  SELECT cf.ClinFormId 
    FROM dbo.ClinForm cf
    JOIN dbo.ClinEvent ce ON ce.EventId=cf.EventId
    JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  WHERE ce.StudyId=@StudyId AND mf.FormName='GBD_SKADE'
    AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt );

  /* Retrieve dataset, field order conforms to population specification */
  SELECT 
    sc.PersonId, p.DOB, p.FullName, p.ReverseName, p.GenderId, p.NationalId, sg.CenterId, sg.GroupId, sg.GroupName, 
    ce.EventId, ce.EventTime, cf.ClinFormId, cf.FormStatus, cf.FormComplete, cf.Comment,
    dbo.MonthYear( ce.EventTime ) AS MonthYear,
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ww, ce.EventTime ) AS EventWeek,
    v3574.Quantity as T3574,
    v3575.EnumVal as E3575,
    a3575.OptionText as T3575,
    v3576.EnumVal as E3576,
    a3576.OptionText as T3576,
    v3578.EnumVal as E3578,
    a3578.OptionText as T3578,
    v3579.EnumVal as E3579,
    a3579.OptionText as T3579,
    v3580.EnumVal as E3580,
    a3580.OptionText as T3580,
    v3581.EnumVal as E3581,
    a3581.OptionText as T3581,
    v3582.EnumVal as E3582,
    a3582.OptionText as T3582,
    v6402.EnumVal as E6402,
    a6402.OptionText as T6402,
    cf.CreatedAt, cf.CreatedBy, 
    pcr.Signature as CreatedBySign, pcr.FullName AS CreatedByName, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime DESC ) AS OrderNo 
  INTO #temp
  FROM #formEventList fel
  JOIN dbo.ClinForm cf ON cf.ClinFormId=fel.ClinFormId 
  JOIN dbo.ClinEvent ce ON ce.EventId=cf.EventId  
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  JOIN dbo.StudCase sc ON ( sc.StudyId = ce.StudyId ) AND ( sc.PersonId = ce.PersonId ) 
  JOIN dbo.Person p ON ( p.PersonId=sc.PersonId ) 
  JOIN dbo.StudyGroup sg ON ( sg.StudyId = ce.StudyId ) AND ( sg.GroupId = ce.GroupId ) 
  JOIN dbo.StudyUser su ON ( su.StudyId=sg.StudyId ) AND ( su.UserId=USER_ID() ) 
  JOIN dbo.UserList my ON ( my.UserId = USER_ID() ) 
  JOIN dbo.StudyCenter c ON ( c.CenterId = sg.CenterId ) 
  JOIN dbo.UserList ucr ON ucr.UserId=cf.CreatedBy
  LEFT OUTER JOIN dbo.Person pcr ON pcr.PersonId=ucr.PersonId 
    LEFT OUTER JOIN dbo.ClinObservation v3574 ON v3574.EventId=ce.EventId and v3574.VarName='SKADE_TIDSPUNKT'
    LEFT OUTER JOIN dbo.ClinObservation v3575 ON v3575.EventId=ce.EventId and v3575.VarName='SKADE_OBSERVERT'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3575 ON a3575.ItemId=3575 and v3575.EnumVal=a3575.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3576 ON v3576.EventId=ce.EventId and v3576.VarName='SKADE_INVOLVERT'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3576 ON a3576.ItemId=3576 and v3576.EnumVal=a3576.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3578 ON v3578.EventId=ce.EventId and v3578.VarName='SKADE_BEHANDSTED'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3578 ON a3578.ItemId=3578 and v3578.EnumVal=a3578.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3579 ON v3579.EventId=ce.EventId and v3579.VarName='SKADE_AKTIVITET'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3579 ON a3579.ItemId=3579 and v3579.EnumVal=a3579.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3580 ON v3580.EventId=ce.EventId and v3580.VarName='SKADE_FALL'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3580 ON a3580.ItemId=3580 and v3580.EnumVal=a3580.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3581 ON v3581.EventId=ce.EventId and v3581.VarName='SKADE_BRUDD'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3581 ON a3581.ItemId=3581 and v3581.EnumVal=a3581.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v3582 ON v3582.EventId=ce.EventId and v3582.VarName='SKADE_ILLEBEFINNENDE'
      LEFT OUTER JOIN dbo.MetaItemAnswer a3582 ON a3582.ItemId=3582 and v3582.EnumVal=a3582.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v6402 ON v6402.EventId=ce.EventId and v6402.VarName='EVENT_SEVERITY'
      LEFT OUTER JOIN dbo.MetaItemAnswer a6402 ON a6402.ItemId=6402 and v6402.EnumVal=a6402.OrderNumber
  WHERE ( cf.DeletedAt IS NULL )
    AND ( ( su.GroupId=sg.GroupId ) OR ( su.ShowMyGroup = 0 ) ) 
    AND ( sg.CenterId=my.CenterId ) 
    AND ( sc.StudyId=@StudyId )
    AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  
  /* Select final dataset from temp table 
     - OrderBy=0 => Order by Month (EventTime)
     - OrderBy=1 => Order by Group, PersonId, EventTime
     - OrderBy=2 => Order by T3580, EventTime
  */     
  IF @OrderBy=0 
    SELECT * FROM #temp ORDER BY EventTime;
  
  IF @OrderBy=1 
    SELECT * FROM #temp ORDER BY GroupId, PersonId, EventTime;

  IF @OrderBy=2 
    SELECT * FROM #temp ORDER BY T3580, EventTime;

END]]>
	</row>
	<row ProcId="1017" StudyName="GBD" ProcName="dbo.ReportStatusUpdates" ProcDesc="Statusendringer" ProcParams=":StudyId, :StartAt, :StopAt" ListId="FR" GrantTo="public" LastUpdate="2015-11-10T09:59:07.210Z">
		<![CDATA[CREATE PROCEDURE dbo.ReportStatusUpdates( @StudyId INT, @StartAt DateTime = NULL, @StopAt DateTime = NULL ) AS
BEGIN
 IF @StartAt IS NULL SET @StartAt = GetDate()-365;
 IF @StopAt IS NULL SET @StopAt = GetDate();
 SELECT DISTINCT pat.NationalId,pat.FullName,
   ISNULL(sgn.GroupName,'(ingen gruppe)') AS GroupNow, ISNULL(sgo.GroupName,'(ingen gruppe)') AS GroupThen,
   scl.ChangedAt, ISNULL(sso.StatusText,'(ingen)') AS OldStatus, ISNULL(ssn.StatusText,'(ingen') AS NewStatus,
   up.Signature,sc.StudCaseId
 FROM dbo.StudCaseLog scl
 JOIN dbo.StudCase sc on sc.StudCaseId=scl.StudCaseId AND sc.StudyId=@StudyId
 JOIN dbo.StudCase scn on scn.StudCaseId=sc.StudCaseId AND scn.StudyId=@StudyId
 JOIN dbo.Person pat ON pat.PersonId=sc.PersonId
 JOIN dbo.UserList ul on ul.UserId=scl.ChangedBy
 JOIN dbo.Person up on up.PersonId=ul.PersonId and ul.UserId=scl.ChangedBy
 JOIN dbo.UserList my on my.UserId=USER_ID()
 LEFT JOIN dbo.StudyStatus ssn on ssn.StudyId=sc.StudyId AND ssn.StatusId=scl.NewStatusId 
 LEFT JOIN dbo.StudyStatus sso on sso.StudyId=sc.StudyId AND sso.StatusId=scl.OldStatusId
 LEFT JOIN dbo.StudyGroup sgn ON sgn.StudyId=sc.StudyId AND sgn.GroupId=scl.NewGroupId
 LEFT JOIN dbo.StudyGroup sgo ON sgo.StudyId=sc.StudyId AND sgo.GroupId=scl.OldGroupId
 LEFT JOIN dbo.StudyGroup sg ON sg.StudyId=sc.StudyId AND sg.GroupId = sc.GroupId
 WHERE ( ( ISNULL( scl.OldStatusId, -1 ) <> ISNULL( scl.NewStatusId,-1 ) )
   AND ( scl.ChangedAt >= @StartAt ) AND ( scl.ChangedAt < @StopAt )
   AND   ( 
           ( ISNULL(sgn.CenterId,0) = my.CenterId AND ISNULL( sgn.GroupActive, 0 ) = 1 ) OR 
           ( ISNULL(sgo.CenterId,0) = my.CenterId AND ISNULL( sgo.GroupActive, 0 ) = 1 ) OR 
           ( ISNULL(sg.CenterId,0) = my.CenterId AND ISNULL( sg.GroupActive, 0 ) = 1 )
          )
       )
 ORDER BY NewStatus,ChangedAt desc
END]]>
	</row>
	<row ProcId="1018" StudyName="GBD" ProcName="GBD.RapportErnaeringTiltak" ProcDesc="Ernæringstiltak" ProcParams=":StudyId, :StartIAt, :StopAt" ListId="FR" GrantTo="public" LastUpdate="2015-05-18T08:46:59.920Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportErnaeringTiltak ( @StudyId INT, @StartAt DateTime = NULL, @StopAt DateTime = NULL ) AS
BEGIN
  SET LANGUAGE Norwegian; 
  IF @StartAt IS NULL SET @StartAt = GETDATE()-365;
  IF @StopAt IS NULL SET @StopAt = GETDATE();
  /* Conform to Population field names */
  SELECT 
    sc.PersonId, p.DOB, p.FullName, p.ReverseName, p.GenderId, p.NationalId, sg.CenterId, sg.GroupId, sg.GroupName, 
    ce.EventId, ce.EventTime, 
    cf.ClinFormId, cf.FormStatus, cf.FormComplete, cf.Comment,
    dbo.MonthYear( ce.EventTime ) AS MonthYear,
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ww, ce.EventTime ) AS EventWeek,
    v4357.EnumVal as E4357,
    a4357.OptionText as T4357,
    v4850.EnumVal as E4850,
    a4850.OptionText as T4850,
    v4896.EnumVal as E4896,
    a4896.OptionText as T4896,
    v4897.DTVal as T4897,
    CONVERT(VARCHAR(64),v5206.TextVal) as T5206,
    v5207.EnumVal as E5207,
    a5207.OptionText as T5207,
    CONVERT(VARCHAR(16),v5459.TextVal) as T5459,
    v5460.EnumVal as E5460,
    a5460.OptionText as T5460,
    CONVERT(VARCHAR(16),v5461.TextVal) as T5461,
    v5462.EnumVal as E5462,
    a5462.OptionText as T5462,
    v5464.EnumVal as E5464,
    a5464.OptionText as T5464,
    v5466.EnumVal as E5466,
    a5466.OptionText as T5466,
    CONVERT(VARCHAR(16),v5467.TextVal) as T5467,
    v5468.EnumVal as E5468,
    a5468.OptionText as T5468,
    CONVERT(VARCHAR(16),v5469.TextVal) as T5469,
    CONVERT(VARCHAR(16),v5472.TextVal) as T5472,
    v5478.DTVal as T5478,
    cf.CreatedAt, cf.CreatedBy, 
    pcr.Signature as CreatedBySign, pcr.FullName AS CreatedByName, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime DESC ) AS OrderNo 
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) 
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  JOIN dbo.StudCase sc ON ( sc.StudyId = ce.StudyId ) AND ( sc.PersonId = ce.PersonId ) 
  JOIN dbo.Person p ON ( p.PersonId=sc.PersonId ) 
  JOIN dbo.StudyGroup sg ON ( sg.StudyId = sc.StudyId ) AND ( sg.GroupId = sc.GroupId ) 
  JOIN dbo.StudyUser su ON ( su.StudyId=sg.StudyId ) AND ( su.UserId=USER_ID() ) 
  JOIN dbo.UserList my ON ( my.UserId = USER_ID() ) 
  JOIN dbo.StudyCenter c ON ( c.CenterId = sg.CenterId ) 
  JOIN dbo.UserList ucr ON ucr.UserId=cf.CreatedBy
  LEFT OUTER JOIN dbo.Person pcr ON pcr.PersonId=ucr.PersonId 
    LEFT OUTER JOIN dbo.ClinObservation v4357 ON v4357.EventId=ce.EventId and v4357.VarName='KOST_Moset'
      LEFT OUTER JOIN dbo.MetaItemAnswer a4357 ON a4357.ItemId=4357 and v4357.EnumVal=a4357.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v4850 ON v4850.EventId=ce.EventId and v4850.VarName='KOST_TiltakHensikt'
      LEFT OUTER JOIN dbo.MetaItemAnswer a4850 ON a4850.ItemId=4850 and v4850.EnumVal=a4850.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v4896 ON v4896.EventId=ce.EventId and v4896.VarName='KOST_Registrering'
      LEFT OUTER JOIN dbo.MetaItemAnswer a4896 ON a4896.ItemId=4896 and v4896.EnumVal=a4896.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v4897 ON v4897.EventId=ce.EventId and v4897.VarName='KOST_NyEvalDato'
    LEFT OUTER JOIN dbo.ClinObservation v5206 ON v5206.EventId=ce.EventId and v5206.VarName='KOST_TiltakGrunn'
    LEFT OUTER JOIN dbo.ClinObservation v5207 ON v5207.EventId=ce.EventId and v5207.VarName='KOST_StartTiltak'
      LEFT OUTER JOIN dbo.MetaItemAnswer a5207 ON a5207.ItemId=5207 and v5207.EnumVal=a5207.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v5459 ON v5459.EventId=ce.EventId and v5459.VarName='MAT_Hensyn'
    LEFT OUTER JOIN dbo.ClinObservation v5460 ON v5460.EventId=ce.EventId and v5460.VarName='KOST_Beriket'
      LEFT OUTER JOIN dbo.MetaItemAnswer a5460 ON a5460.ItemId=5460 and v5460.EnumVal=a5460.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v5461 ON v5461.EventId=ce.EventId and v5461.VarName='KOST_BeriketTekst'
    LEFT OUTER JOIN dbo.ClinObservation v5462 ON v5462.EventId=ce.EventId and v5462.VarName='MDS_K4c'
      LEFT OUTER JOIN dbo.MetaItemAnswer a5462 ON a5462.ItemId=5462 and v5462.EnumVal=a5462.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v5464 ON v5464.EventId=ce.EventId and v5464.VarName='KOST_FortykketDrikke'
      LEFT OUTER JOIN dbo.MetaItemAnswer a5464 ON a5464.ItemId=5464 and v5464.EnumVal=a5464.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v5466 ON v5466.EventId=ce.EventId and v5466.VarName='MDS_K4b'
      LEFT OUTER JOIN dbo.MetaItemAnswer a5466 ON a5466.ItemId=5466 and v5466.EnumVal=a5466.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v5467 ON v5467.EventId=ce.EventId and v5467.VarName='MAT_SondeTekst'
    LEFT OUTER JOIN dbo.ClinObservation v5468 ON v5468.EventId=ce.EventId and v5468.VarName='MDS_K4a'
      LEFT OUTER JOIN dbo.MetaItemAnswer a5468 ON a5468.ItemId=5468 and v5468.EnumVal=a5468.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v5469 ON v5469.EventId=ce.EventId and v5469.VarName='MAT_ParenteralTekst'
    LEFT OUTER JOIN dbo.ClinObservation v5472 ON v5472.EventId=ce.EventId and v5472.VarName='MAT_Egenvurdering'
    LEFT OUTER JOIN dbo.ClinObservation v5478 ON v5478.EventId=ce.EventId and v5478.VarName='WEIGHT_DueDate'
  WHERE ( cf.DeletedAt IS NULL )
    AND ( mf.FormName='GbdErnaeringTiltak' )
    AND ( ( su.GroupId=sg.GroupId ) OR ( su.ShowMyGroup = 0 ) ) 
    AND ( sg.CenterId=my.CenterId ) 
    AND ( sc.StudyId=@StudyId ) 
    AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  ORDER BY ce.EventTime DESC
END]]>
	</row>
	<row ProcId="1019" StudyName="NDV" ProcName="NDV.ReportProblemAreas" ProcDesc="PAID - rapport" ProcParams=":StudyId" ListId="FR" GrantTo="public" LastUpdate="2015-03-13T12:13:40.827Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportProblemAreas AS
BEGIN
SELECT
ce.PersonId,p.ReverseName,
ce.EventTime,co.Quantity as PAID_SUM,
co1.EnumVal-1 as PAID_01,
co2.EnumVal-1 as PAID_02,
co3.EnumVal-1 as PAID_03,
co4.EnumVal-1 as PAID_04,
co5.EnumVal-1 as PAID_05,
co6.EnumVal-1 as PAID_06,
co7.EnumVal-1 as PAID_07,
co8.EnumVal-1 as PAID_08,
co9.EnumVal-1 as PAID_09,
co10.EnumVal-1 as PAID_10,
co11.EnumVal-1 as PAID_11,
co12.EnumVal-1 as PAID_12,
co13.EnumVal-1 as PAID_13,
co14.EnumVal-1 as PAID_14,
co15.EnumVal-1 as PAID_15,
co16.EnumVal-1 as PAID_16,
co17.EnumVal-1 as PAID_17,
co18.EnumVal-1 as PAID_18,
co19.EnumVal-1 as PAID_19,
co20.EnumVal-1 as PAID_20

FROM dbo.ClinObservation co
JOIN dbo.ClinEvent ce ON ce.EventId=co.EventId
JOIN dbo.Person p ON p.PersonId = ce.PersonId

JOIN dbo.ClinObservation co1 ON co1.EventId=co.EventId AND co1.VarName='PAID_01'
JOIN dbo.ClinObservation co2 ON co2.EventId=co.EventId AND co2.VarName='PAID_02'
JOIN dbo.ClinObservation co3 ON co3.EventId=co.EventId AND co3.VarName='PAID_03'
JOIN dbo.ClinObservation co4 ON co4.EventId=co.EventId AND co4.VarName='PAID_04'
JOIN dbo.ClinObservation co5 ON co5.EventId=co.EventId AND co5.VarName='PAID_05'
JOIN dbo.ClinObservation co6 ON co6.EventId=co.EventId AND co6.VarName='PAID_06'
JOIN dbo.ClinObservation co7 ON co7.EventId=co.EventId AND co7.VarName='PAID_07'
JOIN dbo.ClinObservation co8 ON co8.EventId=co.EventId AND co8.VarName='PAID_08'
JOIN dbo.ClinObservation co9 ON co9.EventId=co.EventId AND co9.VarName='PAID_09'
JOIN dbo.ClinObservation co10 ON co10.EventId=co.EventId AND co10.VarName='PAID_10'
JOIN dbo.ClinObservation co11 ON co11.EventId=co.EventId AND co11.VarName='PAID_11'
JOIN dbo.ClinObservation co12 ON co12.EventId=co.EventId AND co12.VarName='PAID_12'
JOIN dbo.ClinObservation co13 ON co13.EventId=co.EventId AND co13.VarName='PAID_13'
JOIN dbo.ClinObservation co14 ON co14.EventId=co.EventId AND co14.VarName='PAID_14'
JOIN dbo.ClinObservation co15 ON co15.EventId=co.EventId AND co15.VarName='PAID_15'
JOIN dbo.ClinObservation co16 ON co16.EventId=co.EventId AND co16.VarName='PAID_16'
JOIN dbo.ClinObservation co17 ON co17.EventId=co.EventId AND co17.VarName='PAID_17'
JOIN dbo.ClinObservation co18 ON co18.EventId=co.EventId AND co18.VarName='PAID_18'
JOIN dbo.ClinObservation co19 ON co19.EventId=co.EventId AND co19.VarName='PAID_19'
JOIN dbo.ClinObservation co20 ON co20.EventId=co.EventId AND co20.VarName='PAID_20'

where co.VarName = 'PAID_SUM'

ORDER BY ce.PersonId,ce.EventTime
END]]>
	</row>
	<row ProcId="1020" StudyName="NDV" ProcName="NDV.ReportFootFormCount" ProcDesc="Antall fotskjema per år" ListId="FR" GrantTo="public" LastUpdate="2014-12-15T18:03:32.857Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportFootFormCount
AS
BEGIN
  SELECT DATEPART(yy,ce.EventTime) AS FormYear,COUNT(*) AS FormCount
  FROM dbo.ClinEvent ce 
  JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  WHERE mf.FormName='DIAPOL_FOOT'
  GROUP BY DATEPART(yy,ce.EventTime)
  ORDER BY DATEPART(yy,ce.EventTime)
END]]>
	</row>
	<row ProcId="1021" StudyName="NDV" ProcName="NDV.ReportFootFormFirst" ProcDesc="Henvisninger til fotklinikk" ListId="FR" GrantTo="public" LastUpdate="2014-12-15T18:04:34.327Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportFootFormFirst
AS
BEGIN
  SELECT ce.PersonId,DATEPART(yy,min(ce.EventTime)) as StartYear 
  INTO #temp
  FROM dbo.ClinEvent ce 
  JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  WHERE mf.FormName='DIAPOL_FOOT'
  GROUP BY ce.PersonId;
  SELECT StartYear,count(*) as FormCount FROM #temp
  GROUP BY StartYear
  ORDER BY StartYear
END]]>
	</row>
	<row ProcId="1022" StudyName="NDV" ProcName="NDV.ReportFootLastHbA1c" ProcDesc="HbA1c på fotklinikk" ListId="FR" GrantTo="public" LastUpdate="2014-12-15T18:05:30.840Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportFootLastHbA1c
AS
BEGIN
  SELECT DISTINCT ce.PersonId,DATEPART(yy,ce.EventTime) AS ReportYear
  INTO #tempPop
  FROM dbo.ClinEvent ce 
  JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  WHERE mf.FormName='DIAPOL_FOOT';
  ALTER TABLE #tempPop ADD HbA1c DECIMAL(12,4);
  UPDATE #tempPop SET HbA1c = ( 
    SELECT TOP 1 NumResult 
	FROM dbo.LabData ld 
    JOIN dbo.LabCode lc ON lc.LabCodeId=ld.LabCodeId
    WHERE ld.PersonId=#tempPop.PersonId AND lc.VarName='HBA1C'
    AND DATEPART(yy,ld.LabDate) = #tempPop.ReportYear
    AND NOT (NULLIF(NumResult,-1) IS NULL )
    ORDER BY ld.LabDate  )
  SELECT ReportYear,COUNT(PersonId) as CountPerson,COUNT(HbA1c) AS CountHbA1c,AVG(HbA1c) AS AvgHbA1c FROM 
  #tempPop
  GROUP BY ReportYear
  ORDER BY ReportYear
END]]>
	</row>
	<row ProcId="1023" StudyName="*" ProcName="dbo.ReportFormStatusLog" ProcDesc="Statusendringer på skjema" ProcParams=":ClinFormId" ListId="FR" GrantTo="public" MinVersion="6019" LastUpdate="2014-12-20T08:32:45.920Z">
		<![CDATA[CREATE PROCEDURE dbo.ReportFormStatusLog( @ClinFormId INT )
AS
BEGIN 
  SELECT ClinFormId,cl.CreatedAt,cl.Comment,p.FullName,ISNULL(mfs.StatusDesc,'(unknown)') AS StatusDesc                                                                                   
  FROM dbo.ClinFormLog cl
  LEFT OUTER JOIN dbo.UserList ul ON ul.UserId=cl.CreatedBy
  LEFT OUTER JOIN dbo.Person p ON p.PersonId=ul.PersonId
  LEFT OUTER JOIN dbo.MetaFormStatus mfs ON mfs.FormStatus=cl.FormStatus
  WHERE ClinFormId=@ClinFormId                    
  ORDER BY ClinFormLogId DESC 
END]]>
	</row>
	<row ProcId="1024" StudyName="*" ProcName="dbo.ReportLabResults" ProcDesc="Labdata for enkeltpasient" ProcParams=":PersonId" ListId="FR" GrantTo="public" LastUpdate="2014-12-15T20:16:26.107Z">
		<![CDATA[CREATE PROCEDURE dbo.ReportLabResults( @PersonId INT ) AS
BEGIN
  SELECT ld.ResultId, ld.LabDate, ld.LabCodeId, lc.LabName, ld.NumResult, ld.UnitStr, 
    mdr.OID9533, ld.TxtResult, CompSign =
    CASE ld.ArithmeticComp
    WHEN 'GT' THEN '<'
    WHEN 'LT' THEN '>' 
    ELSE ''
    END,       
    ld.Comment, ld.RefInterval
  FROM dbo.LabData ld
  JOIN dbo.LabCode lc on lc.LabCodeId=ld.LabCodeId
  LEFT OUTER JOIN dbo.MetaDevResult mdr ON mdr.DevResult=ld.DevResult
  WHERE ld.PersonId=@PersonId
  ORDER BY ld.LabDate DESC, lc.LabName
END]]>
	</row>
	<row ProcId="1025" StudyName="*" ProcName="dbo.ReportFormStatusLog" ProcDesc="Statusendringer på skjema" ProcParams=":ClinFormId" ListId="FR" GrantTo="public" MaxVersion="6018" LastUpdate="2014-12-20T08:34:42.873Z">
		<![CDATA[CREATE PROCEDURE dbo.ReportFormStatusLog( @ClinFormId INT )
AS
BEGIN 
  SELECT ClinFormId,cl.CreatedAt,cl.Comment,p.FullName,'(ukjent)' AS StatusDesc                                                                                   
  FROM dbo.ClinFormLog cl
  LEFT OUTER JOIN dbo.UserList ul ON ul.UserId=cl.CreatedBy
  LEFT OUTER JOIN dbo.Person p ON p.PersonId=ul.PersonId
  WHERE ClinFormId=@ClinFormId                    
  ORDER BY ClinFormLogId DESC 
END]]>
	</row>
	<row ProcId="1026" StudyName="NDV" ProcName="NDV.RapportSvangerskapskontroller" ProcDesc="Svangerskapskontroller" ProcParams=":StartAt,:StopAt" ListId="FR" GrantTo="public" MinVersion="6000" LastUpdate="2015-11-05T07:37:47.860Z">
		<![CDATA[CREATE PROCEDURE NDV.RapportSvangerskapskontroller( @StartDate DateTime, @StopDate DateTime ) AS
BEGIN
  SELECT ce.PersonId,p.DOB,p.ReverseName,c.CenterName, cdp.EnumVal,mia.OptionText as DiabetesType,
  MIN(ce.EventTime) as FirstVisit, COUNT(*) AS VisitCount
  FROM dbo.ClinForm cf 
  JOIN dbo.ClinEvent ce ON ce.EventId=cf.EventId
  JOIN dbo.StudyGroup sg ON sg.StudyId=ce.StudyId and sg.GroupId=ce.GroupId
  JOIN dbo.StudyCenter c ON c.CenterId=sg.CenterId
  JOIN dbo.ClinDataPoint cdp ON cdp.EventId=ce.EventId AND cdp.ItemId=3196
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  JOIN dbo.MetaItemAnswer mia on mia.ItemId=cdp.ItemId AND mia.OrderNumber=cdp.EnumVal
  JOIN dbo.Person p ON p.PersonId=ce.PersonId AND p.GenderId=2
  JOIN dbo.UserList ul ON ul.UserId=USER_ID() AND ul.CenterId=sg.CenterId
  WHERE
    ( cf.DeletedAt IS NULL AND mf.FormName = 'DIAPOL_GRAVIDE' ) AND ( ce.EventTime >= @StartDate ) AND ( ce.EventTime < @StopDate )
  GROUP BY ce.PersonId,p.DOB,p.ReverseName,c.CenterName,cdp.EnumVal,mia.OptionText
  ORDER BY c.CenterName,cdp.EnumVal,ce.PersonId
END]]>
	</row>
	<row ProcId="1027" StudyName="GBD" ProcName="GBD.RapportBrukereMedKliniskeData" ProcDesc="Brukere med kliniske data" ListId="FR" GrantTo="superuser" LastUpdate="2016-05-20T12:49:06.903Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportBrukereMedKliniskeData AS
BEGIN
  SELECT * FROM (
    SELECT ul.UserId, p.PersonId, p.DOB, p.ReverseName, 
      (SELECT COUNT(*) FROM dbo.ClinEvent ce WHERE ce.PersonId = ul.PersonId) ClinEventCount, 
      (SELECT COUNT(*) FROM dbo.LabData ld WHERE ld.PersonId = ul.PersonId) LabDataCount, 
      (SELECT COUNT(*) FROM dbo.DrugTreatment dt WHERE dt.PersonId = ul.PersonId) DrugTreatmentCount
    FROM dbo.UserList ul
    JOIN dbo.Person p ON ul.PersonId = p.PersonId) Patients
    WHERE ClinEventCount > 0 OR LabDataCount > 0 OR DrugTreatmentCount > 0
    ORDER BY ReverseName;
END]]>
	</row>
	<row ProcId="1028" StudyName="*" ProcName="dbo.RapportDokumentasjonsfrekvens" ProcDesc="Dokumentasjonsfrekvens" ListId="FR" GrantTo="superuser" LastUpdate="2015-05-18T09:22:49.530Z">
		<![CDATA[CREATE PROCEDURE dbo.RapportDokumentasjonsfrekvens
AS
BEGIN
  SELECT ul.UserId,p.ReverseName, LastThreeMonths.CountLastThreeMonths, LastMonth.CountLastMonth, LastWeek.CountLastWeek
    FROM (
      SELECT ul1.UserId, COUNT(*) CountLastThreeMonths
        FROM dbo.ClinForm cf
        JOIN dbo.UserList ul1 ON ul1.UserId = cf.CreatedBy
        JOIN dbo.UserList ul2 ON ul2.CenterId = ul1.CenterId AND ul2.UserId = USER_ID()
        WHERE cf.CreatedAt > DATEADD(MONTH, -3, GETDATE())
        GROUP BY ul1.UserId) LastThreeMonths
    LEFT JOIN (
      SELECT ul1.UserId, COUNT(*) CountLastMonth
        FROM dbo.ClinForm cf
        JOIN dbo.UserList ul1 ON ul1.UserId = cf.CreatedBy
        JOIN dbo.UserList ul2 ON ul2.CenterId = ul1.CenterId AND ul2.UserId = USER_ID()
        WHERE cf.CreatedAt > DATEADD(MONTH, -1, GETDATE())
        GROUP BY ul1.UserId) LastMonth ON LastMonth.UserId = LastThreeMonths.UserId
    LEFT OUTER JOIN (
      SELECT ul1.UserId, COUNT(*) CountLastWeek
        FROM dbo.ClinForm cf
        JOIN dbo.UserList ul1 ON ul1.UserId = cf.CreatedBy
        JOIN dbo.UserList ul2 ON ul2.CenterId = ul1.CenterId AND ul2.UserId = USER_ID()
        WHERE cf.CreatedAt > DATEADD(DAY, -7, GETDATE())
        GROUP BY ul1.UserId) LastWeek ON LastWeek.UserId = LastThreeMonths.UserId
    JOIN UserList ul ON ul.UserId = LastThreeMonths.UserId
    JOIN Person p ON p.PersonId = ul.PersonId
    WHERE ul.UserId > 0
    ORDER BY LastThreeMonths.CountLastThreeMonths DESC;
END]]>
	</row>
	<row ProcId="1029" StudyName="*" ProcName="dbo.ReportDirtyClose" ProcDesc="Unormal avslutning av programmet" ListId="FR" GrantTo="public" LastUpdate="2015-06-11T13:17:07.307Z">
		<![CDATA[CREATE PROCEDURE dbo.ReportDirtyClose AS
BEGIN
  SELECT y, m, AppVer, Dirty, Total, Dirty*100/Total AS PercentDirty FROM
  (
    SELECT ServYear AS y, ServMonth AS m, AppVer,
    SUM(CASE WHEN DirtyClose = 1 OR ClosedAt IS NULL THEN 1 ELSE 0 END ) AS Dirty,
    COUNT(*) AS Total
    FROM dbo.UserLog
    WHERE AppVer LIKE '[3-9].[0-9]%'
    GROUP BY ServYear, ServMonth, AppVer
  ) a 
  ORDER BY y DESC, m DESC, AppVer DESC
END]]>
	</row>
	<row ProcId="1030" StudyName="GBD" ProcName="Comm.ReportOutboxForms" ProcDesc="Skjema som fortsatt ligger i utboksen" ListId="FR" GrantTo="public" MinVersion="514" LastUpdate="2016-02-10T12:35:25.497Z">
		<![CDATA[CREATE PROCEDURE Comm.ReportOutboxForms AS
BEGIN
  SET NOCOUNT ON;
  SELECT OutId,PersonId,DOB,Initials,EventTime,FormTitle,StatusCode,StatusText,StatusMessage,
    ExportedAt 
  FROM Comm.OutboxForm WHERE StatusCode<>1  
  ORDER BY StatusCode,OutId;
END
]]>
	</row>
	<row ProcId="1031" StudyName="GBD" ProcName="Report.DrugUseOverview" ProcDesc="Oversikt over medikamentbruk" ProcParams=":StudyId,:CenterId,:ATCLevel" ListId="FR" GrantTo="public" LastUpdate="2015-06-12T10:14:37.493Z">
		<![CDATA[CREATE PROCEDURE Report.DrugUseOverview( @StudyId INT, @CenterId INT = NULL, @ATCLevel INT = 7 ) AS
BEGIN
  SELECT DISTINCT ac.PersonId, ac.CenterId,
    SUBSTRING(dt.Atc,1,@ATCLevel) AS AtcFragment INTO #DrugUse 
  FROM dbo.DrugTreatment dt
  JOIN dbo.AllActiveCases ac ON ac.PersonId=dt.PersonId AND ac.StudyId=@StudyId
  WHERE ( dt.StopAt IS NULL ) OR ( dt.StopAt > getdate() );
   
  SELECT CenterId, CenterName, dbo.GetCaseCountByStudyCenter(@StudyId,CenterId) AS PatCount 
  INTO #tempCenter 
  FROM dbo.StudyCenter WHERE ISNULL(@CenterId,CenterId)=CenterId;

  SELECT ISNULL(k.AtcCode,'XXXXX') AS AtcCode,ISNULL(k.AtcName,'(ATC mangler)') AS AtcName, 
    c.CenterId, c.CenterName, c.PatCount, count(du.PersonId) AS UsingDrug,
    ROUND(100*CONVERT(FLOAT,count(du.PersonId))/c.PatCount,1) AS PercentUse
  INTO #ResultSet               
  FROM #tempCenter c 
    LEFT OUTER JOIN #DrugUse du ON du.CenterId=c.CenterId 
    LEFT OUTER JOIN dbo.KBATCIndex k ON k.AtcCode=du.AtcFragment
  WHERE c.PatCount > 0   
  GROUP BY k.AtcCode,k.AtcName,c.CenterId,c.CenterName,c.PatCount;
  SELECT * FROM #ResultSet WHERE UsingDrug > 1 ORDER BY PercentUse DESC;
END]]>
	</row>
	<row ProcId="1032" StudyName="NDV" ProcName="NDV.GetPatientCount" ProcDesc="Fordeling av aktive pasienter på samtykkestatus" ListId="FR" GrantTo="public" MinVersion="6302" LastUpdate="2015-11-26T00:02:54.470Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPatientCount AS
BEGIN

    SET NOCOUNT ON;

    -- Create temp table to be able to do percentages.

    SELECT DISTINCT vac.PersonId, ISNULL(ev.EnumVal,0) AS OrderNumber, ISNULL(ev.OptionText,'Samtykke er ubesvart!') AS OptionText
    INTO #temp
    FROM dbo.ViewActiveCaseListStub vac
    JOIN dbo.Study s ON ( s.StudyId = vac.StudyId ) AND ( s.StudyName IN ( 'NDV','ENDO' ) )
    LEFT JOIN dbo.GetLastEnumValues( 3389 ) ev ON ev.PersonId=vac.PersonId;

    -- Count total
    DECLARE @PatientCount FLOAT;
    SELECT @PatientCount = COUNT(PersonId) FROM #temp;

  -- Get final resultset

    SELECT OrderNumber,REPLACE( OptionText,'*', '') AS OptionText,
    COUNT(PersonId) AS PatientCount, 100 * COUNT(PersonId)/@PatientCount AS PercentOfTotal
    FROM #temp
    GROUP BY OrderNumber, OptionText
    ORDER BY OrderNumber

END]]>
	</row>
	<row ProcId="1033" StudyName="NDV" ProcName="NDV.GetPatientCountByDiabetesType" ProcDesc="Fordeling av samtykker etter type" ListId="FR" GrantTo="public" MinVersion="6302" LastUpdate="2015-11-26T00:02:55.730Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPatientCountByDiabetesType AS
BEGIN
  SELECT 
	DiaOrderNumber,REPLACE( DiaOptionText,'*', '') AS DiaOptionText, 
	SamtOrderNumber,REPLACE( SamtOptionText,'*', '') AS SamtOptionText, 
	COUNT(a.PersonId) AS PatientCount
  FROM
  (
    SELECT DISTINCT 
	  vac.PersonId, 
		ISNULL(est.EnumVal,0) AS SamtOrderNumber, ISNULL(est.OptionText, 'Samtykke er ubesvart!') AS SamtOptionText,
		ISNULL(edt.EnumVal,0) AS DiaOrderNumber, ISNULL(edt.OptionText, 'Diabetes type er ubesvart.') AS DiaOptionText
    FROM dbo.ViewActiveCaseListStub vac
	JOIN dbo.Study s ON ( s.StudyId = vac.StudyId ) AND ( s.StudyName IN ( 'NDV','ENDO' ) )
    JOIN dbo.GetLastEnumValues( 3196 ) edt ON edt.PersonId=vac.PersonId
    LEFT JOIN dbo.GetLastEnumValues( 3389 ) est ON est.PersonId=vac.PersonId
  ) a
  GROUP BY a.SamtOrderNumber, a.SamtOptionText, a.DiaOrderNumber, a.DiaOptionText 
  ORDER BY a.DiaOrderNumber,a.SamtOrderNumber
END]]>
	</row>
	<row ProcId="1034" StudyName="*" ProcName="Report.GetCommentsOnEmptyForms" ProcDesc="Tomme skjema med rapporter" ListId="FR" GrantTo="superuser" LastUpdate="2016-03-18T08:32:35.363Z">
		<![CDATA[CREATE PROCEDURE Report.GetCommentsOnEmptyForms( @StartTime DATETIME = NULL, @EndTime DATETIME = NULL ) AS
BEGIN
  SELECT @StartTime = ISNULL( @StartTime, DATEADD( DAY, -3650, GETDATE() ) )
  SELECT @EndTime = ISNULL( @EndTime,  GETDATE() )   
  SELECT TOP 200 ce.PersonId,cf.ClinFormId,cf.CreatedAt,mf.FormTitle,cf.Comment,p.Signature,ul.UserName 
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON  ce.EventId=cf.EventId
  JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId
  JOIN dbo.UserList ul ON ul.UserId  = cf.CreatedBy 
  JOIN Person p ON p.PersonId=ul.PersonId
  WHERE cf.FormComplete = 0 AND DATALENGTH(cf.Comment) > 5 AND cf.DeletedAt IS NULL
  AND cf.CreatedAt > @StartTime AND cf.CreatedAt < @EndTime
  ORDER by cf.ClinFormId DESC
END]]>
	</row>
	<row ProcId="1035" StudyName="NDV" ProcName="NDV.ReportConsentStatus" ProcDesc="Fordeling av samtykker over tid" ProcParams=":StartTime,EndTime,:PeriodType" ListId="FR" GrantTo="public" MinVersion="6310" LastUpdate="2016-03-23T13:39:17.910Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportConsentStatus ( @StartTime DATETIME = NULL, @EndTime DATETIME = NULL, @PeriodType CHAR(8) = 'MONTH' ) AS
BEGIN
  
  SET NOCOUNT ON;
  
  -- Set Default time period as two years. 
  
  SELECT @StartTime = ISNULL(@StartTime, DATEADD(YEAR, -2, GETDATE()));
  SELECT @EndTime = ISNULL(@EndTime, GETDATE());
  
  -- Create table to put the results in.
  
  CREATE TABLE #ResData (
    StartTime DATETIME NOT NULL PRIMARY KEY,
    EndTime DATETIME NOT NULL,
    Ja INT NULL,
    Nei INT NULL,
    Trukket INT,
    Ukjent INT,
    Ubesvart INT NULL
  );
  
  -- Add calculated fields to table.
  
  ALTER TABLE #ResData ADD Totalt AS (ISNULL(Ubesvart, 0) + ISNULL(Ja, 0) + ISNULL(Nei, 0) + ISNULL(Trukket, 0) + ISNULL(Ukjent, 0));
  ALTER TABLE #ResData ADD JaProsent AS 100.0 * Ja / (ISNULL(Ubesvart, 0) + ISNULL(Ja, 0) + ISNULL(Nei, 0) + ISNULL(Trukket, 0) + ISNULL(Ukjent, 0));
  ALTER TABLE #ResData ADD NeiProsent AS 100.0 * Nei / (ISNULL(Ubesvart, 0) + ISNULL(Ja, 0) + ISNULL(Nei, 0) + ISNULL(Trukket, 0) + ISNULL(Ukjent, 0));
  ALTER TABLE #ResData ADD TrukketProsent AS 100.0 * Trukket / (ISNULL(Ubesvart, 0) + ISNULL(Ja, 0) + ISNULL(Nei, 0) + ISNULL(Trukket, 0) + ISNULL(Ukjent, 0));
  ALTER TABLE #ResData ADD UkjentProsent AS 100.0 * Ukjent / (ISNULL(Ubesvart, 0) + ISNULL(Ja, 0) + ISNULL(Nei, 0) + ISNULL(Trukket, 0) + ISNULL(Ukjent, 0));
  ALTER TABLE #ResData ADD UbesvartProsent AS 100.0 * Ubesvart / (ISNULL(Ubesvart, 0) + ISNULL(Ja, 0) + ISNULL(Nei, 0) + ISNULL(Trukket, 0) + ISNULL(Ukjent, 0));
  
  -- Populate table with data from NDV.GetConsentSummary table
  
  INSERT INTO #ResData (StartTime, EndTime, Ubesvart, Ja, Nei, Trukket, Ukjent)
    SELECT ml.StartTime, ml.EndTime, (SELECT Antall
        FROM NDV.GetConsentSummaryTable(ml.StartTime, ml.EndTime)
        WHERE ShortCode = '?')
      AS Ubesvart, (SELECT Antall
        FROM NDV.GetConsentSummaryTable(ml.StartTime, ml.EndTime)
        WHERE ShortCode = 'J')
      AS Ja, (SELECT Antall
        FROM NDV.GetConsentSummaryTable(ml.StartTime, ml.EndTime)
        WHERE ShortCode = 'N')
      AS Nei, (SELECT Antall
        FROM NDV.GetConsentSummaryTable(ml.StartTime, ml.EndTime)
        WHERE ShortCode = 'T')
      AS Trukket, (SELECT Antall
        FROM NDV.GetConsentSummaryTable(ml.StartTime, ml.EndTime)
        WHERE ShortCode = 'U')
      AS Ukjent
    FROM Report.TimePeriods ml
    WHERE (ml.StartTime >= @StartTime) AND (ml.StartTime < @EndTime AND ml.PeriodType = @PeriodType)
    
  -- Return the table that is used in the report.
  
  SELECT *
  FROM #ResData
  ORDER BY StartTime DESC;
  
END]]>
	</row>
	<row ProcId="5001" StudyName="GBD" ProcName="GBD.UpdateMustScoreForAll" ProcDesc="Oppdatering av MUST for alle, trenger GBD.RuleMust på plass" ProcParams=":StudyId" ListId="UTIL" GrantTo="public" LastUpdate="2016-02-26T15:31:10.873Z">
		<![CDATA[CREATE PROCEDURE GBD.UpdateMustScoreForAll( @StudyId INT)
AS
  DECLARE @PersonId INT;
BEGIN
  SET NOCOUNT ON;
  DECLARE studcase_cursor CURSOR FOR SELECT PersonId FROM dbo.StudCase WHERE StudyId=@StudyId;
  OPEN studcase_cursor;
  FETCH NEXT FROM studcase_cursor INTO @PersonId;
  WHILE @@FETCH_STATUS = 0 
  BEGIN
    EXECUTE GBD.RuleMUST @StudyId,@PersonId;
    FETCH NEXT FROM studcase_cursor INTO @PersonId;
  END
  CLOSE studcase_cursor;
  DEALLOCATE studcase_cursor;
END]]>
	</row>
	<row ProcId="5003" StudyName="*" ProcName="dbo.UtilNegateUser" ProcDesc="Oppdatere UserId" ListId="UTIL" GrantTo="public" MinVersion="512" LastUpdate="2015-11-11T10:07:26.587Z">
		<![CDATA[CREATE PROCEDURE dbo.UtilNegateUser( @UserId INT )
AS
BEGIN
  DECLARE @TableSchema NVARCHAR(128);
  DECLARE @TableName NVARCHAR(128);
  DECLARE @ColumnName NVARCHAR(128);
  DECLARE @UserName NVARCHAR(128);
  DECLARE @NegUser int;
  DECLARE @SqlCmd varchar(512);
  SELECT @UserName=UserName FROM dbo.UserList WHERE UserId=@UserId;
  IF @UserName=USER_NAME(@UserId)
  BEGIN
    RAISERROR( 'You can not negate a valid user!', 16, 1 )
    RETURN -1;
  END;
  SELECT @NegUser = MIN( UserId ) FROM UserList;
  IF @NegUser > 0 SET @NegUser = 0;
  SET @NegUser = @NegUser - 1;    
  -- Create the negated user
  INSERT INTO dbo.UserList (UserId,PersonId,CreatedAt,CreatedBy,CenterId,ProfId,UserName,OldUserId)
    SELECT @NegUser,PersonId,CreatedAt,CreatedBy,CenterId,ProfId,UserName,UserId FROM UserList
    WHERE UserId=@UserId;
  -- Find columns to update
  DECLARE cur_columns CURSOR FOR
    SELECT t.TABLE_SCHEMA,c.TABLE_NAME,c.COLUMN_NAME
    FROM INFORMATION_SCHEMA.columns c
    JOIN INFORMATION_SCHEMA.tables t ON t.TABLE_NAME = c.TABLE_NAME AND t.TABLE_SCHEMA=c.TABLE_SCHEMA
    WHERE c.COLUMN_NAME IN(
      'CreatedBy','SignedBy','PausedBy','PulledBy','StopBy','FormOwner','UpgradedBy','UpdatedBy','StartedBy','RestartBy','ChangedBy','LockedBy', 'UserId', 'ClosedBy', 'HandledBy', 'DeletedBy', 'DisabledBy', 'PrintedBy', 'RequestedBy', 'TakenBy' )
    AND t.TABLE_NAME <>'UserList' AND t.TABLE_TYPE='BASE TABLE';
  OPEN cur_columns;
  -- Update all columns from list
  FETCH NEXT FROM cur_columns INTO @TableSchema,@TableName,@ColumnName;
  WHILE @@FETCH_STATUS = 0
  BEGIN
      SET @SqlCmd = 'UPDATE ' + @TableSchema + '.' + @TableName + ' SET ' + @ColumnName + '=' + CONVERT(VARCHAR,@NegUser) + ' WHERE ' + @ColumnName + '=' + CONVERT(Varchar,@UserId);
      EXECUTE( @SqlCmd );
    FETCH NEXT FROM cur_columns INTO @TableSchema,@TableName,@ColumnName;
  END
  CLOSE cur_columns;
  DEALLOCATE cur_columns;
  DELETE FROM dbo.UserList WHERE UserId=@UserId;
END]]>
	</row>
	<row ProcId="10001" StudyName="*" ProcName="GBD.RuleBerger" ProcDesc="Registere Bergers skala med 180 dagers intervall" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" MaxVersion="6300" LastUpdate="2016-03-19T08:40:44.957Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleBerger( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicForm @StudyId,@PersonId,'BERGER',180,2
END;]]>
	</row>
	<row ProcId="10002" StudyName="*" ProcName="dbo.RuleDrugToProblem" ProcDesc="Manglende diagnose basert på medikament som bare har én indikasj" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE dbo.RuleDrugToProblem( @StudyId INT, @PersonId INT ) AS
  DECLARE @DrugName VARCHAR(64);
  DECLARE @ATC VARCHAR(7);
  DECLARE @ListId INT;
  DECLARE @ListName VARCHAR(32);
  DECLARE @DrugProbId INT;
  DECLARE @ItemCode VARCHAR(8);
  DECLARE @ProbDesc VARCHAR(32);
  DECLARE @ProbStatus INT;
  DECLARE @AlertClass varchar(12);
  DECLARE @AlertHeader varchar(64);
  DECLARE @AlertMsg varchar(512);
  DECLARE @AlertLevel INT;
  DECLARE @AlertFacet varchar(16);
BEGIN
  /* Disable all old alerts for this rule */
  UPDATE dbo.Alert SET AlertLevel=0 WHERE StudyId=@StudyId AND PersonId=@PersonId AND AlertClass LIKE 'DrugProb#%';
  /* Create list of problem matches for the patient's' drugs */
  DECLARE alert_list CURSOR FOR
    SELECT mdp.DrugProbId,mdp.ATC,dt.DrugName,mnl.ListId,mnl.ListName,mdp.ItemCode,mdp.ProbDesc,
      dbo.GetProblemStatus(dt.PersonId,mnl.ListId,mdp.ItemCode) AS ProbStatus
    FROM dbo.DrugTreatment dt
      JOIN dbo.KBDrugToProblem mdp ON CHARINDEX(mdp.ATC,dt.ATC) = 1
      JOIN dbo.MetaNomList mnl ON mnl.ListName=mdp.ListName AND ListActive=1
    WHERE ( dt.PersonId=@PersonId ) AND (dt.StopAt IS NULL);
  /* Walk through the list, adding a rule for each one with status = 0 */
  OPEN alert_list;
  FETCH NEXT FROM alert_list INTO @DrugProbId,@ATC,@DrugName,@ListId,@ListName,@ItemCode,@ProbDesc,@ProbStatus;
  WHILE @@FETCH_STATUS = 0 BEGIN
    /* Prepare alert data */
    SET @AlertClass = 'DrugProb#' + CONVERT(VARCHAR,@DrugProbId);
    SET @AlertHeader = @ProbDesc;
    IF @ProbStatus=0 BEGIN
       SET @AlertHeader = @AlertHeader + '?';
       SET @AlertLevel = 3
       SET @AlertFacet = 'DataMissing';
    END
    ELSE BEGIN
      SET @AlertLevel = 0;
      SET @AlertFacet = 'DataFound';
    END
    SELECT @ListId = dbo.GetListId( @ListName );
    SET @AlertMsg = dbo.GetTextItem( 'DrugToProblem',@AlertFacet );
    /* Do replacements */
    IF CHARINDEX('@DrugName',@AlertMsg) > 0
      SET @AlertMsg = REPLACE( @AlertMsg,'@DrugName',@DrugName );
    IF CHARINDEX('@ProbDesc',@AlertMsg) > 0
      SET @AlertMsg = REPLACE( @AlertMsg,'@ProbDesc',@ProbDesc );
    IF CHARINDEX('@ListId',@AlertMsg) > 0
      SET @AlertMsg = REPLACE( @AlertMsg,'@ListId',@ListId );
    IF CHARINDEX('@ItemCode',@AlertMsg) > 0
      SET @AlertMsg = REPLACE( @AlertMsg,'@ItemCode',@ItemCode );
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,@AlertClass,@AlertFacet,@AlertHeader,@AlertMsg,'MY';
    FETCH NEXT FROM alert_list INTO @DrugProbId,@ATC,@DrugName,@ListId,@ListName,@ItemCode,@ProbDesc,@ProbStatus;
  END;
  CLOSE alert_list;
  DEALLOCATE alert_list;
END;]]>
	</row>
	<row ProcId="10003" StudyName="*" ProcName="dbo.RuleDrugInteractions" ProcDesc="Legemiddelinteraksjoner" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE dbo.RuleDrugInteractions ( @StudyId INT, @PersonId INT ) AS
  /* Variables for interaction result */
  DECLARE @LevelId tinyint;
  DECLARE @ATC1 varchar(7);
  DECLARE @ATC2 varchar(7);
  DECLARE @Drug1 varchar(64);
  DECLARE @Drug2 varchar(64);
  DECLARE @InfoText varchar(512);
  DECLARE @AlertLevel tinyint;
  /* Variables for message */
  DECLARE @AlertAction varchar(4);
  DECLARE @AlertClass varchar(12);
  DECLARE @AlertInfo varchar(32);
  DECLARE @AlertFacet varchar(16);
  DECLARE @AlertHeader varchar(64);
  DECLARE @IntId integer;
BEGIN

  /* Downgrade old alerts */

  UPDATE dbo.Alert SET AlertLevel=0 WHERE StudyId=@StudyId AND PersonId=@PersonId AND AlertClass LIKE 'DRUID#%';
  CREATE TABLE #ATCList (AtcFragment varchar(7) COLLATE Danish_Norwegian_CI_AS NOT NULL);

  /* Build ATC list */

  INSERT INTO #ATCList (ATCFragment) SELECT ATC FROM DrugTreatment WHERE PersonId=@PersonId AND ( ( StopAt > GetDate() OR StopAt IS NULL ) AND PauseStatus=0 )
  INSERT INTO #ATCList (ATCFragment) SELECT DISTINCT SUBSTRING(ATCFragment,1,5) FROM #ATCList;
  INSERT INTO #ATCList (ATCFragment) SELECT DISTINCT SUBSTRING(ATCFragment,1,4) FROM #ATCList;
  INSERT INTO #ATCList (ATCFragment) SELECT DISTINCT SUBSTRING(ATCFragment,1,3) FROM #ATCList
  INSERT INTO #ATCList (ATCFragment) SELECT GrpCode FROM KBMetaMember WHERE GrpMember IN ( SELECT ATCFragment FROM #ATCList);
  
  /* Find matching interactions */

  DECLARE interaction_cursor CURSOR FOR
  SELECT i.IntId,i.LevelId,i.ATC1,dt1.AtcName as Drug1,i.ATC2,dt2.AtcName as Drug2,i.InfoText
  FROM dbo.KBInteraction i
    JOIN dbo.KBAtcIndex dt1 ON i.ATC1=dt1.AtcCode
    JOIN dbo.KBAtcIndex dt2 ON i.ATC2=dt2.AtcCode
  WHERE ATC1 IN (SELECT DISTINCT ATCFragment FROM #ATCList ) AND ATC2 IN (SELECT DISTINCT ATCFragment FROM #ATCList )
  ORDER BY i.LevelId DESC; 
  
  /* Add alerts for interactions */

  OPEN interaction_cursor;
  FETCH NEXT FROM interaction_cursor INTO @IntId,@LevelId,@ATC1,@Drug1,@ATC2,@Drug2,@InfoText;
  WHILE @@FETCH_STATUS = 0 BEGIN
    SET @AlertClass='DRUID#'+CONVERT(VARCHAR,@IntId)
    SET @Alertheader=@Drug1 + ' - ' + @Drug2;
    /* Map levels and facets */
    SELECT @AlertLevel = CASE @LevelId
      WHEN 1 THEN 1
      WHEN 2 THEN 2
      WHEN 3 THEN 2
      WHEN 4 THEN 4
    END;
    SELECT @AlertInfo = CASE @LevelId
      WHEN 1 THEN 'Mulig interaksjon: '
      WHEN 2 THEN 'Ta forholdsregler: '
      WHEN 3 THEN 'Ta med 2-3 timers intervall: '
      WHEN 4 THEN 'Må ikke kombineres: '
    END
    SELECT @AlertFacet = CASE @LevelId
      WHEN 1 THEN 'RiskLow'
      WHEN 2 THEN 'RiskMedium'
      WHEN 3 THEN 'RiskMedium'
      WHEN 4 THEN 'RiskHigh'
    END
    SELECT @AlertAction = CASE @LevelId
      WHEN 1 THEN 'TFYM'
      WHEN 2 THEN 'TYM'
      WHEN 3 THEN 'TYM'
      WHEN 4 THEN 'TM'
    END
    SET @InfoText = @AlertInfo + @InfoText;
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,@AlertClass,@AlertFacet,@AlertHeader,@InfoText,@AlertAction;
    FETCH NEXT FROM interaction_cursor INTO @IntId,@LevelId,@ATC1,@Drug1,@ATC2,@Drug2,@InfoText;
  END
  CLOSE interaction_cursor
  DEALLOCATE interaction_cursor;
END;]]>
	</row>
	<row ProcId="10004" StudyName="*" ProcName="dbo.RuleGFR" ProcDesc="Lav nyrefunksjon. GRF 60,45 og 30 som grenser." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE dbo.RuleGFR( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @GFR DECIMAL(5,1);
  DECLARE @AlertLevel INT;
  DECLARE @Facet varchar(16);
  DECLARE @MsgStr varchar(512);
  DECLARE @HeadStr varchar(64);
  SET @GFR = dbo.GetMDRD( @PersonId, getdate() );
  IF ( @GFR IS NULL ) OR ( @GFR <= 0 ) BEGIN
    SET @AlertLevel = 2;
    SET @Facet = 'DataMissing'
  END
  ELSE BEGIN
    IF @GFR < 30 BEGIN
      SET @AlertLevel=3;
      SET @Facet='RiskHigh';
    END
    ELSE IF @GFR < 45 BEGIN
      SET @AlertLevel=2;
      SET @Facet='RiskMedium';
    END
    ELSE IF @GFR < 60 BEGIN
      SET @AlertLevel=1;
      SET @Facet='RiskLow';
    END
    ELSE BEGIN
      SET @AlertLevel=0;
      SET @Facet = 'DataFound';
    END;
  END;
  SET @MsgStr=dbo.GetTextItem('GFR',@Facet);
  SET @HeadStr=dbo.GetTextItem('GFR',@Facet+'.Header');
  IF CHARINDEX( '@GFR',@MsgStr ) > 1 SET @MsgStr=REPLACE(@MsgStr,'@GFR',CONVERT(VARCHAR,@GFR));
  IF CHARINDEX( '@Formula',@MsgStr) > 1 SET @MsgStr=REPLACE(@MsgStr,'@Formula','MDRD');
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'GFR',@Facet,@HeadStr,@MsgStr
END;]]>
	</row>
	<row ProcId="10005" StudyName="*" ProcName="GBD.RuleHulten" ProcDesc="Registrere Hulten med maks 90 dagers intervall" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleHulten( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicForm @StudyId,@PersonId,'HULTEN',90,2
END;]]>
	</row>
	<row ProcId="10006" StudyName="*" ProcName="GBD.RuleWarfarinAdjust" ProcDesc="På tide med Marevandosering basert på variabel WARFARIN_NEXT, so" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleWarfarinAdjust( @StudyId INT, @PersonId INT )
AS
BEGIN
  DECLARE @AlertFacet varchar(16);
  DECLARE @AlertLevel INT;
  DECLARE @NewDosingDate DateTime;
  
  /* Check for Warfarin treatment */
  
  IF NOT EXISTS ( SELECT TreatId FROM dbo.OngoingTreatment WHERE PersonId=@PersonId AND ATC='B01AA03' ) BEGIN
    SET @AlertFacet='Exclude';
    SET @AlertLevel=0;
  END
  ELSE BEGIN      
  
    /* Find next Warfarin dosing date from form data */
    
    SELECT @NewDosingDate = dbo.GetLastDTVal( @PersonId,'WARFARIN_NEXT' );
    IF @NewDosingDate IS NULL BEGIN
      SET @AlertFacet = 'Exclude';
      SET @AlertLevel = 0;
    END
    ELSE IF @NewDosingDate<GetDate() BEGIN
      SET @AlertFacet = 'DataOld';
      SET @AlertLevel = 3;
    END
    ELSE BEGIN
      SET @AlertFacet = 'DataFound';
      SET @AlertLevel = 0;
    END
  END
  EXEC dbo.AddAlertForDSSRule @StudyId,@PersonId,@AlertLevel,'WARFADJ',@AlertFacet
END;]]>
	</row>
	<row ProcId="10007" StudyName="*" ProcName="GBD.RuleWeight30Days" ProcDesc="Veiing med maks 30 dagers intervall" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleWeight30Days( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicData @StudyId,@PersonId,'WEIGHT',30,2
END]]>
	</row>
	<row ProcId="10008" StudyName="*" ProcName="GBD.RuleInfectionForm" ProcDesc="Infeksjonsregistering hvis systemisk antibiotika gitt siste 30 d" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleInfectionForm( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @LastJ01Date DateTime;
  DECLARE @LastFormDate DateTime;
  DECLARE @MsgText VARCHAR(512);
  DECLARE @FormDateText VARCHAR(24);
  DECLARE @DrugName VARCHAR(64);
  -- Find ongoing or recently started antibiotic/antiparasitic treatment
  SELECT TOP 1 @LastJ01Date=StartAt,@DrugName=DrugName FROM dbo.DrugTreatment
    WHERE ( ( ATC LIKE 'J01%' ) OR ( ATC LIKE 'P01A%' ) ) AND PersonId=@PersonId
      AND ((StartAt > getdate()-30) OR ( StopAt IS NULL ) OR ( StopAt > getdate()) ) ORDER BY StartAt DESC;
  IF @LastJ01Date IS NULL
    EXEC dbo.AddAlertForDSSRule @StudyId,@PersonId,0,'INFECTION','Exclude'
  ELSE BEGIN 
    SET @LastFormDate = dbo.GetLastSignedForm( @StudyId, @PersonId,'GBD_INFECTION' );
    IF ( @LastFormDate IS NULL ) OR ( @LastJ01Date > @LastFormDate + 1 ) BEGIN
      SET @MsgText = dbo.GetTextItem( 'INFECTION','DataMissing' );
      IF @LastFormDate IS NULL
        SET @FormDateText = '(aldri)'
      ELSE
        SET @FormDateText = dbo.LongTime( @LastFormDate );
      SET @MsgText = REPLACE( @MsgText, '@DrugDate', '<b>' + dbo.LongTime( @LastJ01Date ) + '</b>' );
      SET @MsgText = REPLACE( @MsgText, '@FormDate', '<b>' + @FormDateText +'</b>' );
      SET @MsgText = REPLACE( @MsgText, '@DrugName', '<b>' + @DrugName +'</b>' );
      EXEC dbo.AddAlertForPerson @StudyId,@PersonId,2,'INFECTION','DataMissing','Infeksjonsregistrering',@MsgText;
    END
    ELSE
      EXEC dbo.AddAlertForDSSRule @StudyId,@PersonId,0,'INFECTION','DataFound'
  END;
END;]]>
	</row>
	<row ProcId="10009" StudyName="*" ProcName="GBD.RuleLabData" ProcDesc="Eksterne labdata med maka 180 dagers intervall" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleLabData( @StudyId INT, @PersonId INT ) AS
BEGIN
  IF EXISTS( SELECT ResultId FROM dbo.LabData WHERE PersonId=@PersonId
    AND LabDate > getdate()-180 )
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,1,'LAB','DataFound','Labdata funnet',
      'Eksterne labdata er funnet siste 6 mnd'
  ELSE
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,2,'LAB','DataMissing','Labdata mangler',
      'Ingen eksterne labdata fra siste 6 mnd.  Labprøver bør tas regelmessig, bl.a. for å overvåke nyrefunksjon.';
END]]>
	</row>
	<row ProcId="10010" StudyName="*" ProcName="GBD.RuleMUST" ProcDesc="Automatisk beregning av MUST score, med tilhørende varsling ved " ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleMUST( @StudyId INT, @PersonId INT ) AS
BEGIN
  SET NOCOUNT ON;
  DECLARE @EventTime DateTime;
  DECLARE @WeightNow FLOAT;
  DECLARE @Height FLOAT;
  DECLARE @MustScore INT;
  DECLARE @MsgHeader VARCHAR(24);
  DECLARE @BMI FLOAT;
  DECLARE @AlertLevel INT;
  DECLARE @MsgText VARCHAR(512);
  DECLARE @AlertFacet VARCHAR(16);
  SET @MustScore = NULL;
  -- Get last height
  SELECT TOP 1 @Height=co.Quantity FROM dbo.ClinObservation co
  JOIN dbo.ClinEvent ce ON ce.EventId=co.EventId
  WHERE ce.PersonId=@PersonId AND co.VarName='HEIGHT' AND co.Quantity>1 ORDER BY ce.EventTime DESC;
  -- Get last weight with timestamp
  SELECT TOP 1 @WeightNow=co.Quantity,@EventTime=ce.EventTime  FROM dbo.ClinObservation co
  JOIN dbo.ClinEvent ce ON ce.EventId=co.EventId
  WHERE ce.PersonId=@PersonId AND co.VarName='WEIGHT' AND co.Quantity>1 ORDER BY ce.EventTime DESC;
  -- Calculate weight change and days before last weight/timestamp
  IF ( @Height > 1 ) AND ( @WeightNow > 1 )
  BEGIN
    SET @BMI = 10000*@WeightNow/@Height/@Height;
    SELECT ce.EventTime,@WeightNow AS WeightNow,co.Quantity as WeightThen,@Height as Height,
        100*(@WeightNow/co.Quantity-1) as PercentChange,
        CONVERT(FLOAT,@EventTime - ce.EventTime) as DaysBetween,
        co.Quantity/@Height/@Height*10000 as BMIThen
      INTO #temp
      FROM dbo.ClinEvent ce JOIN dbo.ClinObservation co on co.EventId=ce.EventId
      WHERE ce.PersonId=@PersonId AND co.VarName='WEIGHT' AND co.Quantity > 0;
    -- Remove all old data
    DELETE FROM #temp WHERE DaysBetween > 180;
    -- Return all data indication lost weight last 180 days
    IF EXISTS( SELECT EventTime FROM #temp WHERE PercentChange < -10 )
    BEGIN
      SET @MustScore = 2;
      SET @MsgText = 'Vekttap > 10% siste 180 dager (2p). ';
    END
    ELSE IF EXISTS( SELECT EventTime FROM #temp WHERE PercentChange < -5 ) BEGIN
      SET @MsgText = 'Vektendring > 5% siste 180 dager (1p). ';
      SET @MustScore = 1;
    END
    ELSE IF ( SELECT COUNT(*) FROM #temp ) < 2 BEGIN
      SET @MsgText = 'Mindre enn 2 vektregistreringer siste 180 dager (0p). ';
      SET @MustScore = 0;
    END
    ELSE
    BEGIN
      SET @MustScore = 0;
      SET @MsgText = 'Vektendring < 5% siste 180 dager (0p). ';
    END;
    IF @BMI < 18.5 BEGIN
      SET @MsgText = @MsgText + ' BMI er under 18.5 (2p). ';
      SET @MustScore = @MustScore + 2;
    END
    ELSE IF @BMI < 20 BEGIN
      SET @MsgText = @MsgText + ' BMI er under 20 (1p). ';
      SET @MustScore = @MustScore + 1;
    END
    ELSE
    BEGIN
      SET @MsgText = @MsgText + 'BMI er over 20 (' + dbo.GetShortNumber( ROUND(@BMI,1) ) + ', 0p). ';
    END
  END;
  UPDATE dbo.PersonAbstraction SET MustScore=@MustScore,BMI=@BMI,Weight=@WeightNow,Height=@Height WHERE PersonId=@PersonId;
  IF @@ROWCOUNT = 0
    INSERT INTO dbo.PersonAbstraction (PersonId,Height,Weight,MustScore,BMI) VALUES(@PersonId,@Height,@WeightNow,@MustScore,@BMI)
  IF @MustScore IS NULL
  BEGIN
    SET @MsgHeader = 'Ernæringstilstand?';
    SET @AlertFacet = 'DataMissing';
    SET @MsgText = 'Ernæringstilstand kan ikke overvåkes, fordi vekt og/eller høyde mangler. ';
    SET @AlertLevel = 1;
  END
  ELSE
  BEGIN
    IF @MustScore > 0
    BEGIN
      SET @MsgHeader = 'OBS Ernæringstilstand';
      SET @MsgText = @MsgText + 'MUST Score ' + CONVERT(VARCHAR,@MustScore) + ' eller mer. ';
    END
    ELSE
      SET @MsgHeader = 'Ernæringstilstand';
    IF @MustScore = 0 SET @AlertFacet = 'RiskLow'
    ELSE IF @MustScore=1 BEGIN
     SET @AlertFacet = 'RiskMedium';
     SET @MsgText = @MsgText + 'Observasjon. ';
    END
    ELSE
    BEGIN
      SET @AlertFacet = 'RiskHigh';
      SET @MsgText = @MsgText + 'Start behandling. ';
    END;
    SET @AlertLevel = @MustScore;
    IF @AlertLevel > 3 SET @AlertLevel = 3;
  END;
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'MUST',@AlertFacet,@MsgHeader, @MsgText,'TYM'
END]]>
	</row>
	<row ProcId="10011" StudyName="*" ProcName="dbo.RuleMetforminGFR" ProcDesc="Advarsel om metforminbruk med samtidig lav GFR, grenseverdier 60" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE dbo.RuleMetforminGFR( @StudyId INT, @PersonId INT )
AS
BEGIN
  DECLARE @CalcAt DateTime;
  DECLARE @HeaderText VARCHAR(64);
  DECLARE @MsgText VARCHAR(512);
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT;
  DECLARE @GFR INT;
  SET @CalcAt = getdate();
  IF dbo.GetDrugUse( @PersonId, 'A10BA02', @CalcAt ) = 1
  BEGIN
    SET @GFR = dbo.GetMDRD( @PersonId, @CalcAt );
    IF @GFR IS NULL
    BEGIN
      SET @HeaderText = 'Metformin + ukjent GFR'
      SET @MsgText = 'Alle som bruker metformin bør måle GFR regelmessig.';
      SET @AlertLevel= 3;
      SET @AlertFacet = 'DataMissing';
    END
    ELSE IF @GFR < 60
    BEGIN
      SET @HeaderText = 'Metformin + lav GFR';
      SET @MsgText = ( 'OBS eGFR = ' + CONVERT(VARCHAR,@GFR) + ' mL/min/1.73m2. Vurder å seponere metformin.' );
      IF @GFR < 60
      BEGIN
        SET @AlertFacet = 'RiskHigh';
        IF @GFR < 30 BEGIN
          SET @AlertLevel = 4;
          IF @GFR < 15
            SET @MsgText = @MsgText + ' Nyresykdom grad 4, betydelig nedsatt GFR. '
          ELSE
            SET @MsgText = @MsgText + ' Nyresykdom grad 5, nyresvikt. ';
        END
        ELSE BEGIN
          SET @MsgText = @MsgText + ' Nyresykdom grad 3, moderat redusert GFR. ';
          IF @GFR < 50
            SET @AlertLevel = 3
          ELSE BEGIN
            -- Mellom 50 og 60
            SET @AlertLevel = 2;
            SET @AlertFacet = 'RiskMedium'
          END
        END;
      END;
    END
    ELSE
    BEGIN
     SET @HeaderText = 'Metformin + normal GFR';
     SET @MsgText = ( 'eGFR = ' + CONVERT(VARCHAR,@GFR) + ' mL/min/1.73m2' );
     SET @AlertFacet = 'RiskLow';
     SET @AlertLevel = 0;
    END
  END
  ELSE
  BEGIN
    SET @HeaderText = 'Ikke metformin';
    SET @MsgText = 'Bruker ikke metformin, vurdering av GFR utelatt.';
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0;
  END;
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'METFORMGFR',@AlertFacet,@HeaderText,@MsgText;
END]]>
	</row>
	<row ProcId="10012" StudyName="*" ProcName="GBD.RuleBP30Days" ProcDesc="Blodtrykksmåling med maks 30 dagers intervall." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleBP30Days( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicData @StudyId, @PersonId, 'SBP_UNSPEC',30, 2
END]]>
	</row>
	<row ProcId="10013" StudyName="*" ProcName="GBD.RuleAtrialFibrillation" ProcDesc="Behandling av atrieflimmer med B01AA eller B01AC." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleAtrialFibrillation( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @HasAF INT;
  DECLARE @HeaderText VARCHAR(64);
  DECLARE @MsgText VARCHAR(512);
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT;
  SET @HasAF = dbo.GetProblemStatus( @PersonId,4, 'I48%' );
  IF @HasAF = 1
  BEGIN
    IF EXISTS( SELECT TreatId FROM dbo.OngoingTreatment 
      WHERE PersonId=@PersonId AND ATC COLLATE Latin1_General_CI_AS LIKE 'B01A[ABCEF]%' COLLATE Latin1_General_CI_AS )
    BEGIN
      SET @AlertLevel = 0;
      SET @AlertFacet = 'DrugFound';
    END  
    ELSE
    BEGIN
      SET @AlertLevel = 2;
      SET @AlertFacet = 'DrugGive';
    END
  END
  ELSE BEGIN
    SET @AlertLevel = 0;
    SET @AlertFacet = 'Exclude'
  END;
  SET @MsgText = dbo.GetTextItem( 'AFTREATED', @AlertFacet )  
  SET @HeaderText = dbo.GetTextItem( 'AFTREATED', @AlertFacet + '.Header' )  
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'AFTREATED',@AlertFacet,@HeaderText,@MsgText
END]]>
	</row>
	<row ProcId="10014" StudyName="*" ProcName="GBD.RuleReminder" ProcDesc="Påminnelse basert på eget påminnelsesskjema." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleReminder( @StudyId INT, @PersonId INT )
AS
BEGIN
  -- Reset all alerts of this class to level 0, because some forms may have been deleted
  UPDATE dbo.Alert SET AlertLevel=0 WHERE StudyId=@StudyId AND PersonId=@PersonId AND AlertClass LIKE 'CF#%';
  
  -- Find events first to get a small temp table for next join
  SELECT ce.EventId,cf.ClinFormId,ce.EventTime 
  INTO #tempEvents 
  FROM dbo.ClinEvent ce
  JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId AND cf.DeletedAt IS NULL
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId AND mf.FormName = 'ALERT'
  WHERE ce.StudyId=@StudyId AND ce.PersonId=@PersonId; 
  
  -- Get current alerts 
  SELECT @PersonId as PersonId,@StudyId AS StudyId,
    'CF#' + CONVERT(VARCHAR,te.ClinFormId) AS AlertClass,
    'Include' as AlertFacet,                                                          
    c.EnumVal as AlertLevel,
    h.TextVal as AlertHeader, 
    q.TextVal + ' ( <a href="ShowClinFormId='+CONVERT(VARCHAR,te.ClinFormId) + '">Påminnelse</a> fra ' + CONVERT(VARCHAR,te.EventTime,104 ) + ' )' as AlertMessage,
    ISNULL(NULLIF(b.TextVal,''),'TWMF') as AlertButtons, 
    d.DTVal AS HideUntil           
  INTO #tempAlerts
  FROM #tempEvents te 
    JOIN dbo.ClinObservation h on h.EventId = te.EventId AND h.VarName='AlertHeader' 
    JOIN dbo.ClinObservation c on c.EventId = te.EventId AND c.VarName='AlertLevel' 
    JOIN dbo.ClinObservation q on q.EventId = te.EventId AND q.VarName='AlertMessage'
    JOIN dbo.ClinObservation d ON d.EventId = te.EventId AND d.VarName='HideUntil'
    LEFT OUTER JOIN dbo.ClinObservation b ON b.EventId = te.EventId AND b.VarName='AlertButtons'
  WHERE c.EnumVal > 0;
    
  UPDATE dbo.Alert SET 
    AlertLevel=t.AlertLevel,AlertHeader=t.AlertHeader,
    AlertMessage=t.AlertMessage, AlertButtons=UPPER(t.AlertButtons)
  FROM #tempAlerts t 
  WHERE ( t.PersonId=Alert.PersonId AND t.StudyId=Alert.StudyId AND t.AlertClass=Alert.AlertClass )
  AND  (Alert.AlertLevel <> t.AlertLevel OR Alert.AlertMessage<>t.AlertMessage OR Alert.AlertHeader<>t.AlertHeader OR Alert.AlertButtons <> t.AlertButtons);
  
  -- Bump forward HideUntil if needed (data on form has changed)  
  UPDATE dbo.Alert SET 
    HideUntil=t.HideUntil
  FROM #tempAlerts t
  WHERE (t.PersonId=Alert.PersonId AND t.StudyId=Alert.StudyId AND t.AlertClass=Alert.AlertClass )
  AND t.HideUntil > Alert.HideUntil;
  
  -- Remove all existing alerts from temp, based on ClinFormId
  DELETE FROM #tempAlerts WHERE AlertClass IN ( SELECT AlertClass FROM dbo.Alert WHERE StudyId=@StudyId AND PersonId=@PersonId );
  
  -- Add the rest, which will be from new ClinForms
  INSERT INTO dbo.Alert ( PersonId,StudyId,AlertClass,AlertFacet,AlertLevel,AlertHeader,AlertMessage,AlertButtons,HideUntil)
  SELECT t.PersonId,t.StudyId,t.AlertClass,t.AlertFacet,t.AlertLevel,t.AlertHeader,t.AlertMessage,t.AlertButtons,t.HideUntil FROM #tempAlerts t;
  
END]]>
	</row>
	<row ProcId="10015" StudyName="*" ProcName="NDV.RuleTSH" ProcDesc="Måling av TSH med 730 dagers intervall hos type-1 diabetikere." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE NDV.RuleTSH( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @LabName VARCHAR(40);
  DECLARE @LabVal FLOAT;     
  DECLARE @LabDate DateTime;
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT; 
  IF ISNULL(dbo.GetLastEnumVal( @PersonId, 'NDV_TYPE' ),-1) <> 1
  BEGIN
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0; 
  END
  ELSE 
  BEGIN                                                         
    SELECT TOP 1 @LabName=lc.LabName,@LabDate=ld.LabDate,@LabVal=ld.NumResult
    FROM dbo.LabData ld 
    JOIN dbo.LabCode lc ON lc.LabCodeId=ld.LabCodeId 
    WHERE ( ld.PersonId=@PersonId ) AND ( ld.NumResult > 0 ) AND ( lc.VarName='S_TSH' )
    ORDER BY ld.LabDate DESC;   
    IF @LabDate IS NULL
    BEGIN
      SET @AlertFacet = 'DataMissing';
      SET @AlertLevel = 1;
    END
    ELSE IF @LabDate < getdate()-730
    BEGIN
      SET @AlertFacet = 'DataOld';
      SET @AlertLevel = 1;
    END
    ELSE
    BEGIN
      SET @AlertFacet = 'DataFound';
      SET @AlertLevel = 0;
    END
  END; 
  DECLARE @AlertHeader VARCHAR(64);
  DECLARE @AlertMessage VARCHAR(512);     
  SET @AlertHeader = dbo.GetTextItem( 'NDV.RuleTSH', @AlertFacet +'.Header' );
  SET @AlertMessage = dbo.GetTextItem( 'NDV.RuleTSH', @AlertFacet );
  IF NOT @LabDate IS NULL                        
  BEGIN
    SET @AlertMessage = REPLACE( @AlertMessage, '@LabDate', dbo.LongTime( @LabDate ) );
    SET @AlertMessage = REPLACE( @AlertMessage, '@LabValue', CONVERT(VARCHAR,@LabVal) );
    SET @AlertMessage = REPLACE( @AlertMessage, '@LabName', @LabName );
  END
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'NDVTSH',@AlertFacet,@AlertHeader,
      @AlertMessage;    
END
]]>
	</row>
	<row ProcId="10016" StudyName="*" ProcName="NDV.RuleCarbCount" ProcDesc="Opplæring i karbohydrattelling hos type-1 diabetikere." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE NDV.RuleCarbCount( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @TrainDate DateTime;
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT; 
  IF ISNULL(dbo.GetLastEnumVal( @PersonId, 'NDV_TYPE' ),-1) <> 1
  BEGIN
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0; 
  END
  ELSE BEGIN                                                         
    SELECT TOP 1 @TrainDate=DTVal FROM dbo.ClinObservation co
    JOIN dbo.ClinEvent ce ON co.EventId=ce.EventId 
    WHERE ( ce.StudyId=@StudyId ) AND ( ce.PersonId=@PersonId ) AND ( co.VarName='DIAPOL_TRAIN_CARBCOUNT' )
    ORDER BY DTVal DESC;   
    IF @TrainDate IS NULL
    BEGIN
      SET @AlertFacet = 'DataMissing';
      SET @AlertLevel = 1;
    END
    ELSE
    BEGIN
      SET @AlertFacet = 'DataFound';
      SET @AlertLevel = 0;
    END
  END; 
  DECLARE @AlertHeader VARCHAR(64);
  DECLARE @AlertMessage VARCHAR(512);     
  SET @AlertHeader = dbo.GetTextItem( 'NDV.RuleCarbCount', @AlertFacet +'.Header' );
  SET @AlertMessage = dbo.GetTextItem( 'NDV.RuleCarbCount', @AlertFacet );
  IF NOT @TrainDate IS NULL                        
  BEGIN
    SET @AlertMessage = REPLACE( @AlertMessage, '@TrainDate', dbo.LongTime( @TrainDate ) );
  END
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'CARBCOUNT',@AlertFacet,@AlertHeader, @AlertMessage;    
END]]>
	</row>
	<row ProcId="10017" StudyName="*" ProcName="NDV.RuleConsent" ProcDesc="Manglende samtykke-erklæring." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE NDV.RuleConsent( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT;
  DECLARE @NdvConsent INT;                                           
  DECLARE @StudyName VARCHAR(32);
  DECLARE @DiabetesType INT;  
  SELECT @StudyName = StudName FROM dbo.Study WHERE StudyId=@StudyId;
  SET @DiabetesType = ISNULL(dbo.GetLastEnumVal( @PersonId, 'NDV_TYPE' ), -1 );
  IF @StudyName = 'NDV' AND @DiabetesType=-1 SET @DiabetesType=0;    
  IF @DiabetesType = -1
  BEGIN
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0;
  END
  ELSE
  BEGIN
    SET @NdvConsent = dbo.GetLastEnumVal( @PersonId, 'NDV_CONSENT' );
    IF @NdvConsent IN  (1,2) 
    BEGIN
      SET @AlertFacet = 'DataFound';
      SET @AlertLevel = 0;
    END
    ELSE 
    BEGIN
      SET @AlertFacet = 'DataMissing';
      SET @AlertLevel = 3; 
    END
  END;
  EXEC dbo.AddAlertForDSSRule @StudyId,@PersonId,@AlertLevel,'NDVCONSENT',@AlertFacet;    
END]]>
	</row>
	<row ProcId="10018" StudyName="*" ProcName="GBD.RuleNutritionAction" ProcDesc="Kostsamtale gjennomført, tiltakskjema utfylt og signert hvis akt" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleNutritionAction( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @LastTiltakDate DateTime;
  DECLARE @LastInnkomstDate DateTime;
  DECLARE @KostLege INT;  
  DECLARE @AlertFacet varchar(16);
  DECLARE @AlertHdr VARCHAR(64);
  DECLARE @AlertMsg VARCHAR(512);
  DECLARE @AlertLevel INT;
  DECLARE @LastInnkomstDateStr VARCHAR(24);
  DECLARE @LastTiltakDateStr VARCHAR(24);     
  
  -- Finn eksisterende signert kostsamtale-skjema
  SET @LastInnkomstDate = dbo.GetLastSignedForm( @StudyId,@PersonId,'SAMTALE_KOST' );
  SET @LastInnkomstDateStr = CONVERT(VARCHAR,@LastInnkomstDate,104);
  SET @KostLege = ISNULL( dbo.GetLastEnumVal( @PersonId, 'KOST_Lege' ), 1 );
  IF ( @LastInnkomstDate IS NULL ) OR ( @KostLege = -1 )
  BEGIN          
    -- Finnes ikke noen signert eller skikkelig utfylt kostsamtale, varsling gult nivå, ekskluder for tiltak. 
    EXEC dbo.AddAlertForDSSRule @StudyId, @PersonId, 2, 'KostSamtale', 'DataMissing';
    EXEC dbo.AddAlertForDSSRule @StudyId, @PersonId, 0, 'KostTiltak', 'Exclude';
  END
  ELSE 
  BEGIN                      
    -- Kostsamtale er funnet, legg til i Alert på debug nivå 
    EXEC dbo.GetAlertText 'KostSamtale', 'DataFound', @AlertHdr OUT, @AlertMsg OUT; 
    SET @AlertMsg = REPLACE( @AlertMsg,'@LastInnkomstDate', @LastInnkomstDateStr );
    EXEC dbo.AddAlertForPerson @StudyId, @PersonId, 0, 'KostSamtale', 'DataFound', @AlertHdr,@AlertMsg;
    -- Nødvendig med tilsyn av lege?
    IF @KostLege = 1
    BEGIN
      -- Det skal være et signert skjema med ernæringstiltak her!
      SELECT @LastTiltakDate = dbo.GetLastSignedForm( @StudyId,@PersonId,'GbdErnaeringTiltak' );
      SET @LastTiltakDateStr = CONVERT(VARCHAR,@LastTiltakDate,104);
      IF ( @LastTiltakDate IS NULL )  
      BEGIN       
        -- Det finnes ikke noe tiltaksskjema i det hele tatt
        SET @LastTiltakDateStr = '';
        SET @AlertLevel = 3;
        SET @AlertFacet = 'DataMissing';
      END                            
      ELSE IF ( @LastTiltakDate < @LastInnkomstDate - 2 )
      BEGIN        
        -- Tiltaksskjema er mye eldre enn innkomstskjema
        SET @AlertLevel = 2;
        SET @AlertFacet = 'DataOld';
      END
      ELSE
      BEGIN
        -- Tiltaksskjema er oppdatert, alt vel.
        SET @AlertLevel = 0;
        SET @AlertFacet = 'DataFound';
      END  
    END
    ELSE
    BEGIN          
      -- Ikke nødvendig med tiltak
      SET @AlertLevel = 0;
      SET @AlertFacet = 'Exclude';
    END;
    EXEC dbo.GetAlertText 'KostTiltak', @AlertFacet, @AlertHdr OUT, @AlertMsg OUT;
    IF NOT @LastTiltakDateStr IS NULL SET @AlertMsg = REPLACE( @AlertMsg,'@LastTiltakDate', @LastTiltakDateStr );
    IF NOT @LastInnkomstDateStr IS NULL SET @AlertMsg = REPLACE( @AlertMsg,'@LastInnkomstDate', @LastInnkomstDateStr );
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'KostTiltak',@AlertFacet,@AlertHdr,@AlertMsg;
  END;
END;]]>
	</row>
	<row ProcId="10019" StudyName="*" ProcName="GBD.RuleTvangsvedtak" ProcDesc="Fornyelse av tvangsvedtak" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleTvangsvedtak( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @EventTime DateTime;
  DECLARE @StopDate DateTime;
  DECLARE @StopDateText VARCHAR(24);
  DECLARE @StopAction INT;
  DECLARE @DaysPastDue INT;    
  DECLARE @ClinFormId INT;
  DECLARE @AlertClass VARCHAR(16);                                         
  DECLARE @AlertHeader VARCHAR(64);
  DECLARE @AlertMessage VARCHAR(512);    
  DECLARE @AlertLevel INT;
  DECLARE cur_vedtak CURSOR FAST_FORWARD FOR   
    SELECT EventTime,StopDate, StopAction,DaysPastDue, ClinFormId FROM GBD.Tvangsvedtak
    WHERE StudyId=@StudyId AND PersonId=@PersonId;
  OPEN cur_vedtak;
  FETCH NEXT FROM cur_vedtak INTO @EventTime,@StopDate,@StopAction,@DaysPastDue,@ClinFormId;
  WHILE @@FETCH_STATUS = 0
  BEGIN            
    SET @AlertMessage = '<a href="SelectForm='+CONVERT(VARCHAR,@ClinFormId)+'">Tvangsvedtak</a> ' + CONVERT(VARCHAR,@EventTime,4);
    SET @AlertClass = 'TVANG#' + CONVERT(VARCHAR,@ClinFormId);
    IF @StopAction <> 1  
    BEGIN                   
      SET @AlertLevel = 0;
      SELECT @AlertHeader = 
      CASE @StopAction 
        WHEN 2 THEN 'Automatisk avslutning'
        WHEN 3 THEN 'Aktivt avsluttet'
        WHEN 4 THEN 'Fornyet vedtak'
        ELSE 'Ukjent håndtering'
      END;
      SET @AlertMessage = @AlertMessage + ' er avsluttet og det er ikke bedt om påminnelser i den forbindelse.';
    END
    ELSE        
    BEGIN
      SET @StopDateText = ISNULL(CONVERT(VARCHAR,@StopDate,104),'(uspesifisert dato)');
      IF @DaysPastDue > 0 
      BEGIN
        SET @AlertLevel = 3;
        SET @AlertHeader = 'Utgått tvangsvedtak'
        SET @AlertMessage = @AlertMessage + ' utløp ' + @StopDateText + '.  ' + 
          'Dette vedtaket er ikke eksplisitt avsluttet.  Du bør gjenåpne skjemaet og avslutte vedtaket.'; 
      END
      ELSE
      BEGIN                       
        SET @AlertLevel = 2;
        SET @AlertHeader = 'Forny tvangsvedtak';
        SET @AlertMessage = @AlertMessage + ' utløper ' + @StopDateText + '!  Du bør aktivt avslutte dette eller fornye det.';
      END
    END;    
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@ALertLevel,@AlertClass,'Include',@AlertHeader,@AlertMessage,'TWF';
    FETCH NEXT FROM cur_vedtak INTO @EventTime,@StopDate,@StopAction,@DaysPastDue,@ClinFormId;
  END;
  CLOSE cur_vedtak;
  DEALLOCATE cur_vedtak;
END]]>
	</row>
	<row ProcId="10020" StudyName="*" ProcName="NDV.RuleEyeCheck" ProcDesc="Øyeundersøkelse med maks 730 dagers intervall hos type-1 diabeti" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE NDV.RuleEyeCheck( @StudyId INT, @PersonId INT ) AS
BEGIN

  DECLARE @EyeCheckDate DateTime;
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT;
  DECLARE @DiabetesType INT;
  DECLARE @DiabetesDebut FLOAT;
  DECLARE @ThisYear FLOAT;
  DECLARE @RuleIsRelevant BIT;
  
  SET @ThisYear = DATEPART(yy,getdate());
  
  SELECT @DiabetesType = dbo.GetLastEnumVal( @PersonId, 'NDV_TYPE' );
  SELECT @DiabetesDebut = dbo.GetLastQuantity( @PersonId, 'NDV_DIAGNOSE_YYYY' );
    
  SET @RuleIsRelevant = 0;
  IF ( @DiabetesType = 1 ) AND ( @ThisYear - ISNULL(@DiabetesDebut,1900) > 5 )
    SET @RuleIsRelevant = 1;
  IF ( ISNULL(@DiabetesType,-1)  IN  (2,3,4) ) 
    SET @RuleIsRelevant = 1;
  IF @RuleIsRelevant = 0 BEGIN
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0;
  END
  ELSE
  BEGIN       
    SELECT @EyeCheckDate=dbo.GetLastDTVal( @PersonId, 'NDV_EYECHECK_DATE' );
    IF @EyeCheckDate IS NULL BEGIN
      SET @AlertFacet = 'DataMissing';
      SET @AlertLevel = 3;
    END
    ELSE IF @EyeCheckDate < getdate()-730 BEGIN
      SET @AlertFacet = 'DataOld';
      SET @AlertLevel = 2;
    END
    ELSE BEGIN
      SET @AlertFacet = 'DataFound';
      SET @AlertLevel = 0;
    END 
  END
  DECLARE @AlertHeader VARCHAR(64);
  DECLARE @AlertMessage VARCHAR(512);     
  SET @AlertHeader = dbo.GetTextItem( 'NDV.RuleEyeCheck', @AlertFacet +'.Header' );
  SET @AlertMessage = dbo.GetTextItem( 'NDV.RuleEyeCheck', @AlertFacet );
  IF NOT @EyeCheckDate IS NULL BEGIN
    SET @AlertMessage = REPLACE( @AlertMessage, '@EyeCheckDate', dbo.LongTime( @EyeCheckDate ) );
  END
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'NDVEYE',@AlertFacet,@AlertHeader, @AlertMessage;    
END]]>
	</row>
	<row ProcId="10021" StudyName="*" ProcName="NDV.RuleAutoClose" ProcDesc="Automatisk avslutning av pasienter i NOKLUS Diabetes basert på i" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE NDV.RuleAutoClose( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @DpAvsluttet INT;           
  SELECT TOP 1 @DpAvsluttet = EnumVal 
    FROM dbo.ClinObservation co 
    JOIN dbo.ClinEvent ce ON ce.EventId=co.EventId 
    WHERE ce.StudyId=@StudyId AND ce.PersonId=@PersonId AND co.VarName='DP_AVSLUTTET'
    AND co.ObsDate > getdate()-1
    ORDER BY ce.EventNum DESC;
  IF @DpAvsluttet = 1
  BEGIN
    UPDATE dbo.StudCase SET FinState=4, GroupId = NULL 
    WHERE StudyId=@StudyId AND PersonId=@PersonId;
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,1,'NDVAVSLUTT','Include','Avsluttet','Avsluttet på diabetespoliklinikken basert på informasjon fra skjema..';
  END
  ELSE      
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,0,'NDVAVSLUTT','Exclude','Fortsetter','Ikke avsluttet på diabetespoliklinikken, basert på informasjon fra skjema.';
END]]>
	</row>
	<row ProcId="10022" StudyName="*" ProcName="GBD.RuleMatkort" ProcDesc="Revisjon av matkort på dato som er angitt i forrige matkort." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleMatkort( @StudyId INT, @PersonId INT )
AS
BEGIN
  DECLARE @AlertFacet varchar(16);
  DECLARE @AlertLevel INT;
  DECLARE @RevisionDate DateTime;

  SELECT @RevisionDate = dbo.GetLastDTVal( @PersonId,'MAT_Revisjonsdato' );
  IF @RevisionDate IS NULL BEGIN
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0;
  END
  ELSE IF @RevisionDate < GETDATE() BEGIN
    SET @AlertFacet = 'DataOld';
    SET @AlertLevel = 3;
  END
  ELSE BEGIN
    SET @AlertFacet = 'DataFound';
    SET @AlertLevel = 0;
  END;
  EXEC dbo.AddAlertForDSSRule @StudyId, @PersonId, @AlertLevel, 'MATKORT', @AlertFacet;
END;]]>
	</row>
	<row ProcId="10023" StudyName="*" ProcName="GBD.RuleLMG" ProcDesc="Utfylling av legemiddelgjennomgang med 180 dagers intervall." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" LastUpdate="2016-02-26T16:50:19.133Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleLMG( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicForm @StudyId,@PersonId,'LMG',180,2
END;]]>
	</row>
</DbProcList>
