<?xml version="1.0"?>
<DbProcList>
	<row ProcId="-2" StudyName="*" ProcName="NDV.MergeHbA1cToLabdata" ProcDesc="Flytter labdata fra skjema til labtabell" ListId="UTIL" GrantTo="public" MinVersion="6401" ChkSum="675611620" LastUpdate="2018-10-08T19:17:37.580Z">
		<![CDATA[CREATE PROCEDURE NDV.MergeHbA1cToLabdata AS
BEGIN
  DECLARE @MergedName VARCHAR(32);
  DECLARE @LabCodeId INT;

  -- Make sure that we have a LabCode for the form data.
  SET @MergedName = 'B-HbA1c (skjema)';
  SELECT @LabCodeId = LabCodeId FROM dbo.LabCode WHERE LabName = @MergedName AND UnitStr = 'mmol/mol';
  IF @LabCodeId IS NULL
  BEGIN
    INSERT INTO dbo.LabCode ( LabName, UnitStr, VarName, LabClassId ) VALUES( @MergedName, 'mmol/mol', 'HBA1C_MMOL', 1058);
	SET @LabCodeId = SCOPE_IDENTITY();
  END
  ELSE  
    UPDATE dbo.LabCode SET LabClassId = 1058 WHERE LabCodeId = @LabCodeId;

  -- Merge new data from forms into labdata
  MERGE dbo.LabData AS trg 
  USING
  ( 
    SELECT ce.PersonId, ce.EventTime, cdp.Quantity 
    FROM dbo.ClinDataPoint cdp
    JOIN dbo.ClinEvent ce ON ce.EventId = cdp.EventId
    WHERE cdp.ItemId = 3018 AND Quantity > 0
  ) src
  ON trg.PersonId = src.PersonId AND trg.LabDate = src.EventTime AND trg.LabCodeId = @LabCodeId
  WHEN NOT MATCHED THEN
    INSERT ( PersonId, LabDate, LabCodeId, NumResult, UnitStr )
    VALUES ( src.PersonId, src.EventTime, @LabCodeId, src.Quantity, 'mmol/mol' )
  WHEN MATCHED THEN
    UPDATE SET NumResult = src.Quantity;
END]]>
	</row>
	<row ProcId="-1" StudyName="*" ProcName="dbo.CalculateTertial" ProcDesc="Beregner tertial" ProcParams=":SomeDate, :StartsAt,:EndsAt" ListId="UTIL" GrantTo="public" ChkSum="-689563371" LastUpdate="2017-07-07T13:58:24.410Z">
		<![CDATA[CREATE PROCEDURE dbo.CalculateTertial( @SomeDate DateTime, @StartsAt DateTime OUTPUT, @EndsAt DateTime OUTPUT )
AS
BEGIN
  DECLARE @m INTEGER;
  DECLARE @y INTEGER;
  SET @m = DATEPART( month, @SomeDate);   
  SET @y = DATEPART( year, @SomeDate );   
  IF @m < 5 SET @m=1 ELSE IF @m < 9 SET @m=5 ELSE SET @m = 9;
  SET @StartsAt = DATEADD(month,@m-1,DATEADD(year,@y-1900,0));
  SET @EndsAt = DATEADD(second,-1,DATEADD(month,4,@StartsAt));
END]]>
	</row>
	<row ProcId="1" StudyName="*" ProcName="dbo.GetCaseList" ProcDesc="Aktive pasienter" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Alle aktive personer, eventuelt avgrenset til din gruppe hvis avkrysset." ChkSum="1179438108" LastUpdate="2019-09-13T07:34:40.990Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseList( @StudyId INT ) AS
BEGIN
  SELECT vcl.PersonId, vcl.DOB, vcl.FullName, vcl.GroupName, ss.StatusText AS InfoText,
    sc.HandledBy, up.Signature AS PrimaryContactSign, up.FullName AS PrimaryContactName,
    p.GenderId, p.NationalId
  FROM dbo.StudCase sc
    JOIN dbo.ViewActiveCaseListStub vcl ON sc.PersonId = vcl.PersonId AND vcl.StudyId = sc.StudyId
    JOIN dbo.Person p ON p.PersonId = vcl.PersonId
    LEFT OUTER JOIN dbo.StudyStatus ss ON ss.StatusId = sc.FinState AND ss.StudyId = sc.StudyId
    LEFT OUTER JOIN dbo.UserList ul ON ul.UserId = sc.HandledBy
    LEFT OUTER JOIN dbo.Person up ON up.PersonId = ul.PersonId 
  WHERE sc.StudyId = @StudyId
  ORDER BY vcl.FullName;
END]]>
	</row>
	<row ProcId="2" StudyName="*" ProcName="dbo.GetCaseListUnsignedForms" ProcDesc="Arbeidsliste: Mine usignerte skjema" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Usignerte skjema som du selv har opprettet, eventuelt avgrenset til egen gruppe. Nyeste skjema er øverst." ChkSum="-477830701" LastUpdate="2019-01-22T16:56:52.203Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListUnsignedForms( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, mf.FormTitle + ', ' + dbo.LongTime( ce.EventTime) as InfoText
  FROM dbo.ViewActiveCaseListStub v
    JOIN dbo.ClinEvent ce ON ce.PersonId = v.PersonId
    JOIN dbo.ClinForm cf ON cf.EventId = ce.EventId 
      AND cf.CreatedBy = USER_ID() AND cf.SignedAt IS NULL and cf.DeletedAt IS NULL
    JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId
    WHERE v.StudyId=@StudyId
  ORDER BY ce.EventTime DESC;
END]]>
	</row>
	<row ProcId="3" StudyName="GBD.OLD" ProcName="dbo.GetCaseListUnsignedFormsByPerson" ProcDesc="Mine usignerte skjema (PersonId)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="960977114" LastUpdate="2019-09-26T16:15:34.030Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListUnsignedFormsByPerson( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, 
    mf.FormTitle + ', ' + dbo.LongTime( ce.EventTime) as InfoText,
    ulf.UserId as FormUserId,me.UserId as MyUserId
  FROM ViewActiveCaseListStub v
    JOIN dbo.ClinEvent ce ON ce.PersonId=v.PersonId
    JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId AND cf.SignedAt IS NULL and cf.DeletedAt IS NULL
    JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId    
    JOIN dbo.UserList ulf ON ulf.UserId=cf.CreatedBy
    JOIN dbo.UserList me ON me.UserId=USER_ID() AND me.PersonId=ulf.PersonId 
    WHERE v.StudyId=@StudyId
  ORDER BY ce.EventTime
END]]>
	</row>
	<row ProcId="4" StudyName="BASE" ProcName="dbo.GetCaseListNewForms" ProcDesc="Brukes av diverse andre populasoner" ProcParams=":StudyId, :DaysBack, :UserId" ListId="CASE" GrantTo="public" ChkSum="1296569740" LastUpdate="2019-09-26T16:13:35.357Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNewForms( @StudyId INT, @DaysBack FLOAT, @UserId INT = NULL ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,sg.GroupName,cf.CreatedAt,mf.FormTitle + ' / ' + dbo.ShortTime(ce.EventTime) + ' ' + ISNULL(p.Signature, '?' ) As InfoText
  FROM dbo.ViewActiveCaseListStub v
    JOIN dbo.ClinEvent ce on ce.PersonId=v.PersonId
    JOIN dbo.StudCase sc on sc.PersonId=v.PersonId AND sc.StudyId=v.StudyId
    JOIN dbo.StudyGroup sg on sg.GroupId=sc.GroupId AND sg.StudyId=v.StudyId
    JOIN dbo.ClinForm cf on cf.EventId=ce.EventId AND cf.DeletedBy IS NULL AND ( cf.CreatedBy=@UserId OR @UserId IS NULL ) 
    JOIN dbo.MetaForm mf on mf.FormId=cf.FormId
    JOIN dbo.UserList ul ON ul.UserId=cf.CreatedBy
    LEFT OUTER JOIN dbo.Person p ON p.PersonId=ul.PersonId
    WHERE ce.EventTime > getdate()-@DaysBack AND v.StudyId=@StudyId
    ORDER BY ce.EventTime DESC;
END


]]>
	</row>
	<row ProcId="5" StudyName="GBD.OLD" ProcName="dbo.GetCaseListUnwrittenRx" ProcDesc="Arbeidsliste: Utskriftskø for resepter" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-439633308" LastUpdate="2019-09-26T16:22:25.843Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListUnwrittenRx( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,convert(varchar,dp.CreatedAt,104) + ' - ' + dt.DrugName AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.DrugTreatment dt ON dt.PersonId=v.PersonId
  JOIN dbo.DrugPrescription dp ON dp.TreatId=dt.TreatId
  WHERE v.StudyId=@StudyId AND dp.PrintedAt IS NULL AND dp.DeletedAt IS NULL
  ORDER BY dp.CreatedAt DESC
END]]>
	</row>
	<row ProcId="6" StudyName="*" ProcName="dbo.GetCaseListNews" ProcDesc="Aktivitet: Alle skjema siste døgn" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Alle skjema som er opprettet siste 24 timer, uansett bruker, eventuelt avgrenset til egen gruppe." ChkSum="92001375" LastUpdate="2019-01-22T16:57:12.813Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNews( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListNewForms @StudyId,1;
END]]>
	</row>
	<row ProcId="7" StudyName="*" ProcName="dbo.GetCaseListMyWeek" ProcDesc="Aktivitet: Mine skjema siste 7 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Skjema du selv har opprettet i perioden." ChkSum="-94577140" LastUpdate="2019-05-22T14:19:23.723Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListMyWeek( @StudyId INT ) AS
BEGIN
  DECLARE @UserId INT;
  SET @UserId = USER_ID();
  EXEC dbo.GetCaseListNewForms @StudyId,7,@UserId;
END]]>
	</row>
	<row ProcId="8" StudyName="*" ProcName="dbo.GetCaseListMyMonth" ProcDesc="Aktivitet: Mine skjema siste 30 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Skjema du selv har opprettet i perioden." ChkSum="-1011638926" LastUpdate="2019-05-22T14:19:28.277Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListMyMonth( @StudyId INT ) AS
BEGIN
  DECLARE @UserId INT;
  SET @UserId = USER_ID();
  EXEC dbo.GetCaseListNewForms @StudyId,30,@UserId;
END]]>
	</row>
	<row ProcId="9" StudyName="*" ProcName="dbo.GetCaseListMyYear" ProcDesc="Aktivitet: Mine skjema siste 365 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Skjema du selv har opprettet i perioden." ChkSum="-84205965" LastUpdate="2019-05-22T14:19:35.760Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListMyYear( @StudyId INT ) AS
BEGIN
  DECLARE @UserId INT;
  SET @UserId = USER_ID();
  EXEC dbo.GetCaseListNewForms @StudyId,365,@UserId;
END]]>
	</row>
	<row ProcId="10" StudyName="*" ProcName="dbo.GetCaseListNoForm" ProcDesc="Admin: Aktive uten skjema" ProcParams=":StudyId" ListId="CASE" GrantTo="Superuser" HelpText="Alle som er registrert i protokollen, men der det ennå ikke er opprettet noe skjema.  Se også #23." ChkSum="601483689" LastUpdate="2019-08-21T09:57:42.177Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNoForm( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,'Opprettet ' + dbo.ShortTime( sc.CreatedAt ) as InfoText
  FROM ViewActiveCaseListStub v
  JOIN StudCase sc ON sc.PersonId=v.PersonId AND sc.StudyId=v.StudyId
  WHERE v.StudyId=@StudyId 
  AND NOT EXISTS ( SELECT ce.EventId FROM ClinEvent ce WHERE ce.PersonId=v.PersonId and ce.StudyId=v.StudyId );
END]]>
	</row>
	<row ProcId="11" StudyName="*" ProcName="dbo.GetCaseListInactive" ProcDesc="Personer: Status er inaktiv" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Alle som er tilknyttet ditt sted, men har en status som er markert som &quot;Inaktiv&quot;.&#xA;Normalt vil tilknytningen fjernes når en inaktiv status velges." ChkSum="-879879616" LastUpdate="2019-01-22T11:35:05.870Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListInactive( @StudyId INT ) AS
BEGIN
  SELECT vcl.PersonId, vcl.DOB, vcl.FullName, sg.GroupName, ss.StatusText AS InfoText
  FROM dbo.ViewCaseListStub vcl
    JOIN dbo.StudCase sc ON sc.PersonId = vcl.PersonId AND sc.StudyId = @StudyId
    JOIN dbo.StudyStatus ss on ss.StatusId = sc.FinState AND ss.StudyId = sc.StudyId
    LEFT OUTER JOIN dbo.StudyGroup sg ON sg.GroupId = sc.GroupId AND sg.StudyId = sc.StudyId
  WHERE ( ss.StatusActive = 0 ) OR ( ss.StatusActive IS NULL );
END]]>
	</row>
	<row ProcId="12" StudyName="*" ProcName="dbo.GetCaseListMyRelations" ProcDesc="Personer: Mine aktive relasjoner" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Alle aktive personer som du har en aktiv relasjon til, eventuelt avgrenset til gruppe." ChkSum="404686831" LastUpdate="2019-01-22T16:45:04.557Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListMyRelations( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, r.RelName AS InfoText, p.NationalId
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.Person p ON p.PersonId=v.PersonId     
  JOIN dbo.ClinRelation cr ON cr.PersonId = v.PersonId AND cr.UserId=USER_ID()
  JOIN dbo.UserList ul ON ul.UserId = cr.UserId
  JOIN dbo.MetaRelation r ON r.RelId=cr.RelId
  WHERE v.StudyId = @StudyId AND cr.ExpiresAt > GETDATE() 
  ORDER BY v.FullName;
END]]>
	</row>
	<row ProcId="13" StudyName="*" ProcName="dbo.GetCaseListAlert" ProcDesc="Varslinger: Alle aktive varslinger / påminnelser" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Leder, Avdelingsleder, Superuser" HelpText="Påminnelsene oppdateres når en journal åpnes. Listen kan derfor endre seg når du går inn på en person." ChkSum="-1392707553" LastUpdate="2019-01-22T16:32:22.033Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListAlert( @StudyId INT ) AS
BEGIN
  SELECT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName, l.LevelDesc + ': ' + a.AlertHeader AS InfoText
  FROM ViewActiveCaseListStub vcl 
    JOIN dbo.Alert a ON a.PersonId=vcl.PersonId AND ( a.StudyId=vcl.StudyId or a.StudyId IS NULL ) 
    JOIN MetaAlertLevel l ON (l.AlertLevel=a.AlertLevel)
  WHERE ( vcl.StudyId=@StudyId) AND ( a.AlertLevel > 1 ) AND ( a.HideUntil IS NULL or a.HideUntil<=GetDate())
  ORDER BY a.AlertLevel DESC,vcl.PersonId
END]]>
	</row>
	<row ProcId="14" StudyName="*" ProcName="dbo.GetCaseListTest" ProcDesc="Personer: Alle testpersoner" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6045" HelpText="Alle personer som er eksplisitt markert som testpersoner, uavhengig av lokalisasjon og gruppe. Vil også markere kjente KITH &quot;testaktører&quot; med et slikt flagg. " ChkSum="-1497578748" LastUpdate="2019-01-22T17:05:50.863Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListTest( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  UPDATE dbo.Person SET TestCase = 1 WHERE NationalId IN 
  ( '15076500565','21016400952','12057900499','13116900216','14019800513',
    '70019950032','05073500186','70019950032','02039000183','08077000292',
    '15040650560','21030550231','12050050295','02027311027','24019494930' );
  SELECT p.PersonId, p.DOB, p.ReverseName AS FullName, 'Test' AS GroupName, p.GenderId, p.NationalId,
    'Testperson' AS InfoText
  FROM dbo.Person p
  WHERE p.TestCase = 1
  ORDER BY p.FullName;
END;]]>
	</row>
	<row ProcId="15" StudyName="*" ProcName="dbo.GetCaseListNewsweek" ProcDesc="Aktivitet: Alle skjema siste 7 døgn" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Alle skjema som er opprettet siste 7 døgn, uansett bruker. &#xA;Avgrenset til egen gruppe hvis avkrysset." ChkSum="1810845320" LastUpdate="2019-01-22T10:47:08.507Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNewsweek( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListNewForms @StudyId,7;
END]]>
	</row>
	<row ProcId="18" StudyName="*" ProcName="dbo.GetCaseListNewsMonth" ProcDesc="Aktivitet: Alle skjema siste 30 døgn" ProcParams=":StudyId" ListId="CASE" GrantTo="Administrator" HelpText="Alle skjema som er opprettet siste 30 døgn, uansett bruker. &#xA;Avgrenset til egen gruppe hvis avkrysset." ChkSum="-1503753898" LastUpdate="2019-01-22T16:39:12.753Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNewsMonth( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListNewForms @StudyId,30;
END]]>
	</row>
	<row ProcId="19" StudyName="DEPRECATED" ProcName="dbo.GetCaseListDuplicates" ProcDesc="Admin: Potensielle duplikater" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Lister opp pasienter som har matcher på fødselsdato, etternavn og kjønn." ChkSum="-1367212005" LastUpdate="2019-01-22T16:38:11.917Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListDuplicates( @StudyId INT ) AS
BEGIN
  SELECT p1.PersonId, p1.DOB, p1.ReverseName AS FullName, 'Obs' AS GroupName,
  CONVERT( VARCHAR, p2.PersonId ) + ' ' + p2.ReverseName AS InfoText 
  FROM dbo.Person p1 
  JOIN dbo.Person p2 ON p2.DOB = p1.DOB 
  WHERE ( p1.PersonId <> p2.PersonId AND p1.GenderId = p2.GenderId )
  AND ( LTRIM( RTRIM( p1.LstName ) ) = LTRIM( RTRIM( p2.LstName ) ) )
  ORDER BY p1.DOB;
END]]>
	</row>
	<row ProcId="20" StudyName="DEPRECATED" ProcName="dbo.GetCaseList" ProcDesc="Duplikat" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Denne er her bare som en placeholder, siden rader i denne tabellen  ikke slettes av FastTrakUpdate." ChkSum="992022801" LastUpdate="2019-09-26T16:30:30.547Z">
		<![CDATA[]]>
	</row>
	<row ProcId="21" StudyName="BASE" ProcName="dbo.GetCaseListNoRecentForm" ProcDesc="Personer: Aktive uten skjema" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1214181741" LastUpdate="2019-01-03T08:58:37.013Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNoRecentForm( @StudyId INT, @IgnoreDays FLOAT = 365 ) AS
BEGIN
  DECLARE @IgnoreAfter DateTime;
  SET @IgnoreAfter = getdate() - @IgnoreDays;
  -- Find everybody with a form
  SELECT v.PersonId,max(ce.EventTime) AS LastEvent
  INTO #tempWithForm
    FROM ViewActiveCaseListStub v
    JOIN ClinEvent ce ON ce.PersonId=v.PersonId
    JOIN ClinForm cf ON cf.EventId=ce.EventId AND cf.DeletedAt IS NULL
  GROUP BY v.PersonId;
  --  Select result, removing the forms newer than @IgnoreDays
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,t2.LastEvent,
  'Siste skjema: ' + ISNULL(CONVERT(VARCHAR,t2.LastEvent,104), 'Aldri') AS InfoText
  FROM ViewActiveCaseListStub v
  LEFT OUTER JOIN #tempWithForm t2 ON v.PersonId=t2.PersonId
  WHERE (t2.LastEvent < @IgnoreAfter ) OR ( t2.LastEvent IS NULL )
  ORDER BY t2.LastEvent
END]]>
	</row>
	<row ProcId="22" StudyName="BASE" ProcName="dbo.GetActiveSingleVar" ProcDesc="Utvalg på variabel og verdi" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18214" HelpText="Brukes av andre populasjoner, ikke til frittstående bruk." ChkSum="-125695773" LastUpdate="2019-01-22T16:16:45.060Z">
		<![CDATA[CREATE PROCEDURE dbo.GetActiveSingleVar( @StudyId INT, @ItemId INT, @EnumVal INT ) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, v.StatusText AS InfoText, v.GenderId
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastEnumValuesTable( @ItemId, NULL ) ev ON ev.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND ev.EnumVal = @EnumVal
  ORDER BY v.FullName;
END]]>
	</row>
	<row ProcId="23" StudyName="*" ProcName="dbo.GetAndRemoveStudyCasesWithoutForms" ProcDesc="Admin: Fjern alle uten skjema" ProcParams=":StudyId" ListId="CASE" GrantTo="Administrator" HelpText="Fjerner personer fra protokollen hvis de ikke finnes noen aktive skjema. Personen fjernes ikke fra databasen, og ingen andre data slettes. Se også #10." ChkSum="1806241158" LastUpdate="2019-12-16T13:28:42.983Z">
		<![CDATA[CREATE PROCEDURE dbo.GetAndRemoveStudyCasesWithoutForms( @StudyId INT ) AS
BEGIN
  SELECT sc.StudCaseId, sc.PersonId, COUNT( EventId ) AS Antall
  INTO #temp
  FROM dbo.StudCase sc 
  LEFT JOIN dbo.ClinEvent ce ON sc.StudyId = ce.StudyId AND sc.PersonId = ce.PersonId
  WHERE sc.StudyId = @StudyId
  GROUP BY sc.StudCaseId, sc.PersonId
  HAVING COUNT( EventId ) = 0;
  DELETE FROM dbo.StudCaseLog WHERE StudCaseId IN ( SELECT StudCaseId FROM #temp );
  DELETE FROM dbo.StudCase WHERE StudCaseId IN ( SELECT StudCaseId FROM #temp );
  -- Return the list of removed patients.
  SELECT p.PersonId, p.DOB, p.FullName, 'Slettet' AS GroupName, 
    'Hadde ingen skjema' AS InfoText
  FROM #temp t 
  JOIN dbo.Person p ON p.PersonId = t.PersonId;
END]]>
	</row>
	<row ProcId="24" StudyName="BASE" ProcName="dbo.GetActiveDoubleVar" ProcDesc="Utvalg på to variabler med verdi" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18214" HelpText="Brukes av andre populasjoner, ikke til frittstående bruk." ChkSum="-844023783" LastUpdate="2019-01-22T16:16:37.030Z">
		<![CDATA[CREATE PROCEDURE dbo.GetActiveDoubleVar( @StudyId INT, @ItemId1 INT, @EnumVal1 INT, @ItemId2 INT, @EnumVal2 INT ) AS
BEGIN
  SELECT v.*, v.StatusText AS InfoText  
  FROM dbo.ViewActiveCaseListStub v 
  JOIN dbo.GetLastEnumValuesTable( @ItemId1, NULL ) ev1 ON ev1.PersonId = v.PersonId
  JOIN dbo.GetLastEnumValuesTable( @ItemId2, NULL ) ev2 ON ev2.PersonId = v.PersonId
  WHERE ( v.StudyId = @StudyId ) AND ( ev1.EnumVal = @EnumVal1 ) AND ( ev2.EnumVal = @EnumVal2 )
  ORDER BY v.FullName;
END;
]]>
	</row>
	<row ProcId="25" StudyName="*" ProcName="dbo.GetCaseListByNumber" ProcDesc="Personer: Alle etter løpenummer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Viser alle personer knyttet til ditt sted uansett gruppe og gruppens status.&#xA;Sortert etter løpenummer, og uavhengig av avkrysning på egen gruppe." ChkSum="22402388" LastUpdate="2019-01-22T11:00:06.050Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListByNumber( @StudyId INT ) AS
BEGIN
  SELECT vcl.PersonId, vcl.DOB, vcl.FullName, vcl.GroupName, ss.StatusText AS InfoText,
    sc.HandledBy, up.Signature AS PrimaryContactSign, up.FullName AS PrimaryContactName,
    p.GenderId
  FROM dbo.StudCase sc
    JOIN dbo.ViewCaseListStub vcl ON sc.PersonId = vcl.PersonId AND vcl.StudyId = sc.StudyId
    JOIN dbo.Person p ON p.PersonId = vcl.PersonId
    LEFT OUTER JOIN dbo.StudyStatus ss ON ss.StatusId = sc.FinState AND ss.StudyId = sc.StudyId
    LEFT OUTER JOIN dbo.UserList ul ON ul.UserId = sc.HandledBy
    LEFT OUTER JOIN dbo.Person up ON up.PersonId = ul.PersonId 
  WHERE sc.StudyId=@StudyId
  ORDER BY vcl.PersonId;
END]]>
	</row>
	<row ProcId="26" StudyName="*" ProcName="dbo.GetActiveCasesWithoutId" ProcDesc="Personer: Aktive uten gyldig personnummer" ProcParams=":StudyId" ListId="CASE" GrantTo="Superuser" HelpText="Det gjøres ingen validering av personnummeret i spørringen, bare en enkel sjekk på om det finnnes et personnummer på 11 tegn." ChkSum="-908732375" LastUpdate="2019-08-21T09:57:42.177Z">
		<![CDATA[CREATE PROCEDURE dbo.GetActiveCasesWithoutId ( @StudyId INT ) AS
BEGIN
  SELECT v.*, 'Personnr: ' + ISNULL( p.NationalId, '(tomt)' ) AS InfoText 
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.Person p ON p.PersonId = v.PersonId 
  WHERE DATALENGTH( ISNULL( p.NationalId, '' ) ) <> 11;
END]]>
	</row>
	<row ProcId="27" StudyName="*" ProcName="dbo.GetGaseListInactiveGroup" ProcDesc="Personer: Alle i inaktiv gruppe" ProcParams=":StudyId" ListId="CASE" GrantTo="Superuser, Gruppeleder" HelpText="Alle som er tilknyttet ditt sted, men er i en gruppe som er markert som &quot;Inaktiv&quot;. " ChkSum="-565082706" LastUpdate="2019-08-21T09:57:42.177Z">
		<![CDATA[CREATE PROCEDURE dbo.GetGaseListInactiveGroup( @StudyId INT ) AS
BEGIN
  SELECT vcl.PersonId, vcl.DOB, vcl.FullName, sg.GroupName, ss.StatusText as InfoText
  FROM dbo.ViewCaseListStub vcl
    JOIN dbo.StudCase sc ON sc.PersonId=vcl.PersonId and sc.StudyId=@StudyId
    JOIN dbo.StudyGroup sg on sg.GroupId=sc.GroupId and sg.StudyId=sc.StudyId
    JOIN dbo.StudyStatus ss on ss.StatusId=sc.FinState and ss.StudyId=sc.StudyId
  WHERE (sg.GroupActive=0 );
END]]>
	</row>
	<row ProcId="28" StudyName="BASE" ProcName="dbo.GetCaseListLastForm" ProcDesc="Personer: Aktive med skjemadato" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" HelpText="Brukes av andre populasjoner, ikke til frittstående bruk." ChkSum="1024320528" LastUpdate="2019-12-02T11:47:08.120Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListLastForm( @StudyId INT, @FormName VARCHAR(24), @IgnoreDays FLOAT = 0 ) AS
BEGIN
  DECLARE @IgnoreFormsAfter DateTime;
  SET @IgnoreFormsAfter = GETDATE() - @IgnoreDays;
  SELECT v.*, 
      'Utfylt: ' + ISNULL(CONVERT(VARCHAR,forms.LastFormDate,104), 'Aldri') AS InfoText 
    FROM dbo.ViewActiveCaseListStub v
    LEFT JOIN
    (
      SELECT ce.PersonId, MAX(ce.EventTime) AS LastFormDate
      FROM dbo.ClinEvent ce
      JOIN dbo.ClinForm cf ON cf.EventId = ce.EventId AND cf.DeletedAt IS NULL
      JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId AND mf.FormName = @FormName
      GROUP BY ce.PersonId 
    ) forms ON forms.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND ( ( forms.LastFormDate <= @IgnoreFormsAfter ) OR ( forms.LastFormDate IS NULL ) )
  ORDER BY forms.LastFormDate;
END;
]]>
	</row>
	<row ProcId="29" StudyName="BASE" ProcName="dbo.GetCaseListGlobalByStatusId" ProcDesc="Utvalg basert på statuskode" ProcParams=":StudyId, :StatusId" ListId="CASE" GrantTo="public" MinVersion="6000" HelpText="Brukes av andre populasjoner, ikke til frittstående bruk." ChkSum="-152399334" LastUpdate="2019-01-22T16:16:24.200Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListGlobalByStatusId( @StudyId INT, @StatusId INT ) AS
BEGIN
  SELECT 
    p.PersonId, p.DOB, 
    CASE p.GenderId WHEN 1 THEN 'Mann, Avidentifisert' WHEN 2 THEN 'Kvinne, Avidentifisert' END AS FullName,
    ss.StatusText AS GroupName, p.GenderId, c.CenterName AS InfoText
  FROM dbo.StudCase sc 
  JOIN dbo.StudyStatus ss ON ss.StudyId=sc.StudyId and ss.StatusId = sc.StatusId
  JOIN dbo.StudyGroup sg ON sg.StudyId = sc.StudyId and sg.GroupId = sc.GroupId
  JOIN dbo.Person p ON p.PersonId = sc.PersonId
  JOIN dbo.StudyCenter c ON c.CenterId = sg.CenterId
  WHERE sc.StudyId=@StudyId AND ss.StatusId = @StatusId;
END;]]>
	</row>
	<row ProcId="30" StudyName="*" ProcName="Report.GetAllActiveCases" ProcDesc="QuickStat: Alle aktive uansett lokalisasjon" ProcParams=":StudyId" ListId="CASE" GrantTo="QuickStat" HelpText="Populasjonen er går på tvers av alle arbeidssteder og skal være sterkt tilgangsbegrenset." ChkSum="-1991929121" LastUpdate="2019-01-31T14:53:06.493Z">
		<![CDATA[CREATE PROCEDURE Report.GetAllActiveCases( @StudyId INT ) AS
BEGIN
  SELECT 
    p.PersonId, p.DOB, p.FullName, sg.GroupName, ss.StatusText AS InfoText, 
    p.GenderId, p.NationalId 
  FROM dbo.Person p
  JOIN dbo.StudCase sc ON sc.PersonId = p.PersonId
  JOIN dbo.StudyGroup sg ON sg.StudyId = sc.StudyId AND sg.GroupId = sc.GroupId AND sg.GroupActive = 1
  JOIN dbo.StudyStatus ss ON ss.StudyId = sc.StudyId AND ss.StatusId = sc.FinState AND ss.StatusActive = 1
  JOIN dbo.Study s ON s.StudyId = sc.StudyId 
  WHERE s.StudyId = @StudyId;
END]]>
	</row>
	<row ProcId="31" StudyName="BASE" ProcName="dbo.GetFormClassInPeriod" ProcDesc="Utvalg på utfylt skjemaklasse i gitt periode.  Brukes ikke direk" ProcParams=":StudyId, :FormName, :StartDate, :StopDate" ListId="CASE" GrantTo="public" ChkSum="-1460235488" LastUpdate="2019-01-03T13:30:32.340Z">
		<![CDATA[CREATE PROCEDURE dbo.GetFormClassInPeriod( @StudyId INT, @FormName VARCHAR(24),  @StartDate DateTime, @StopDate DateTime ) AS
BEGIN
   SELECT 
     v.PersonId, v.DOB, v.FullName, v.GroupName, 'n = ' + CONVERT(VARCHAR,agg.Antall) AS InfoText 
  FROM 
    (
      SELECT ce.PersonId,COUNT(*) as Antall 
      FROM dbo.ClinEvent ce
      JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId AND cf.DeletedAt IS NULL
      JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
      WHERE mf.FormName = @FormName
      AND ce.EventTime BETWEEN @StartDate AND @StopDate
      GROUP BY ce.PersonId
     ) agg
  JOIN dbo.ViewCaseListStub v ON agg.PersonId=v.PersonId
  WHERE v.StudyId=@StudyId;
END]]>
	</row>
	<row ProcId="40" StudyName="BASE" ProcName="dbo.GetCaseListDrug" ProcDesc="Medikamentbruk: Enkeltpreparat" ProcParams=":StudyId, :ATC" ListId="CASE" GrantTo="Administrator" HelpText="Brukes som grunnlag for en rekke andre populasjoner" ChkSum="-1052143955" LastUpdate="2019-05-13T11:58:09.817Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListDrug( @StudyId INT, @ATC VARCHAR(7) ) AS
BEGIN
  SELECT vcl.PersonId, vcl.DOB, vcl.FullName, vcl.GenderId, vcl.GroupName, COUNT( dt.TreatId ) AS TreatCount,
  CAST(' ' AS VARCHAR(256) ) AS InfoText
  INTO #tempList
  FROM dbo.OngoingTreatment dt
    JOIN dbo.ViewActiveCaseListStub vcl 
      ON vcl.PersonId = dt.PersonId AND vcl.StudyId = @StudyId
  WHERE dt.ATC COLLATE Latin1_General_CI_AI LIKE @ATC COLLATE Latin1_General_CI_AI
  GROUP BY vcl.PersonId, vcl.DOB, vcl.FullName, vcl.GenderId, vcl.GroupName;

  UPDATE #tempList SET InfoText = ( SELECT TOP 1 ISNULL(RTRIM(mt.TreatDesc),'?') + ': ' + ISNULL(DrugName,'?') + ' - ' + ISNULL(StartReason,'?')
    FROM dbo.OnGoingTreatment ot 
    JOIN dbo.MetaTreatType mt ON mt.TreatType=ot.TreatType
    WHERE PersonId=#tempList.PersonId AND ATC COLLATE Latin1_General_CI_AI LIKE @ATC COLLATE Latin1_General_CI_AI ORDER BY mt.TreatType DESC );
  UPDATE #tempList SET InfoText = InfoText + ' (pluss ett annet prep)'
    WHERE TreatCount = 2;
  UPDATE #tempList SET InfoText = InfoText + ' (pluss ' + CONVERT(VARCHAR,TreatCount-1) + ' andre prep)'
    WHERE TreatCount > 2;
  SELECT PersonId, DOB, FullName, GroupName, GenderId, InfoText
    FROM #TempList ORDER By FullName;
END;]]>
	</row>
	<row ProcId="41" StudyName="BASE" ProcName="dbo.GetCaseListDrugCombo" ProcDesc="Medikamentbruk: Kombinasjoner" ProcParams=":StudyId, :ATC1, :ATC2" ListId="CASE" GrantTo="Administrator" MinVersion="18000" ChkSum="-1676308513" LastUpdate="2019-01-31T11:51:49.283Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListDrugCombo( @StudyId INT, @ATC1 VARCHAR(7), @ATC2 VARCHAR(7) ) AS
BEGIN
  SELECT vcl.*, 
    d1.DrugName + ' - ' + d2.DrugName AS InfoText
  FROM dbo.ViewActiveCaseListStub vcl
    JOIN dbo.OngoingTreatment d1 ON d1.PersonId = vcl.PersonId AND d1.ATC LIKE @ATC1
    JOIN dbo.OngoingTreatment d2 ON d2.PersonId = vcl.PersonId AND d2.ATC LIKE @ATC2
  WHERE vcl.StudyId = @StudyId  
  ORDER BY FullName;
END;

]]>
	</row>
	<row ProcId="50" StudyName="BASE" ProcName="dbo.GetCaseListProblem" ProcDesc="Utvalg basert på diagnose" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-24279895" LastUpdate="2019-01-03T08:58:43.483Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProblem( @StudyId INT, @ProbCode VARCHAR(8) ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,i.ItemCode + ' ' + i.ItemName AS InfoText
  FROM ViewActiveCaseListStub v
  LEFT OUTER JOIN dbo.ClinProblem cp ON cp.PersonId=v.PersonId AND v.StudyId=@StudyId
  JOIN dbo.MetaNomListItem li ON li.ListItem=cp.ListItem
  JOIN dbo.MetaNomItem i on i.ItemId=li.ItemId
  WHERE ( i.ItemCode LIKE @ProbCode )
  ORDER BY GroupName
END]]>
	</row>
	<row ProcId="60" StudyName="BASE" ProcName="dbo.GetCaseListByFormName" ProcDesc="Utvalg basert på skjemanavn" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1655765272" LastUpdate="2013-06-12T09:34:18.823Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListByFormName ( @StudyId INT, @FormName VARCHAR(32) )
AS
BEGIN
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,
    'Siste: ' + CONVERT(VARCHAR,max(ce.EventTime),104) as InfoText
  FROM ViewCaseListStub p
  JOIN ClinEvent ce ON ce.PersonId=p.PersonId
  JOIN ClinForm cf ON cf.EventId=ce.EventId
  JOIN MetaForm mf ON mf.FormId=cf.FormId
  WHERE ( mf.FormName=@FormName ) AND ( cf.DeletedAt IS NULL ) AND ( p.StudyId=@StudyId )
  GROUP BY p.PersonId,p.DOB,p.FullName,p.GroupName
  ORDER BY p.FullName
END]]>
	</row>
	<row ProcId="61" StudyName="BASE" ProcName="PROM.GetCaseListMyPendingProms" ProcDesc="Brukerens utfylte PROM-skjema" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6631" ChkSum="1516358664" LastUpdate="2019-01-03T08:58:44.653Z">
		<![CDATA[CREATE PROCEDURE PROM.GetCaseListMyPendingProms( @StudyId INT ) AS
BEGIN
  SET LANGUAGE 'Norwegian';
  SELECT v.*, mf.FormTitle + ', frist: ' + CONVERT(VARCHAR,fo.ExpiryDate,104) AS InfoText
  FROM PROM.FormOrder fo
  JOIN dbo.MetaForm mf ON mf.FormId=fo.FormId
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = fo.PersonId AND StudyId = @StudyId
  WHERE fo.ClinFormId IS NULL AND fo.CreatedBy = USER_ID()
  ORDER BY fo.CreatedAt DESC;
END]]>
	</row>
	<row ProcId="62" StudyName="BASE" ProcName="PROM.GetCaseListMyCompletedProms" ProcDesc="Brukerens nedlastede PROM-skjema" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6631" ChkSum="-703374748" LastUpdate="2019-01-03T08:58:51.327Z">
		<![CDATA[CREATE PROCEDURE PROM.GetCaseListMyCompletedProms( @StudyId INT ) AS
BEGIN
  SET LANGUAGE 'Norwegian';
  SELECT v.*, 
    mf.FormTitle + ', ' + CONVERT(VARCHAR,cf.FormComplete) + '% komplett, utfylt ' + CONVERT(VARCHAR,EventTime,104) + '.' AS InfoText 
  FROM PROM.FormOrder fo
  JOIN dbo.MetaForm mf ON mf.FormId=fo.FormId
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = fo.PersonId AND StudyId = @StudyId
  JOIN dbo.ClinForm cf ON cf.ClinFormId = fo.ClinFormId
  JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
  WHERE fo.CreatedBy = USER_ID()
  ORDER BY fo.CreatedAt DESC;
END]]>
	</row>
	<row ProcId="63" StudyName="BASE" ProcName="dbo.GetCaseListGroupId" ProcDesc="Utvalg basert på gruppe-id" ProcParams=":StudyId, :GroupId" ListId="CASE" GrantTo="public" MinVersion="18214" HelpText="Muliggjør utrekk på GruppeId, men kun lokalt.  Fordel om gruppene standardiseres." ChkSum="1914880429" LastUpdate="2018-09-04T07:50:56.130Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListGroupId( @StudyId INT, @GroupId INT ) AS
BEGIN
  SELECT *, StatusText AS InfoText 
  FROM dbo.ViewCaseListStub WHERE StudyId = @StudyId AND GroupId = @GroupId;
END]]>
	</row>
	<row ProcId="101" StudyName="GBD" ProcName="dbo.GetCaseListFocused" ProcDesc="Overvåket status" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="756359421" LastUpdate="2019-11-15T12:26:12.987Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListFocused( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,p.CAVE as InfoText
  FROM ViewActiveCaseListStub v
    JOIN dbo.StudCase sc ON sc.PersonId=v.PersonId AND sc.StudyId=v.StudyId
    JOIN dbo.Person p ON  p.PersonId=v.PersonId
  WHERE v.StudyId=@StudyId AND sc.FinState = 2;
END]]>
	</row>
	<row ProcId="102" StudyName="GBD" ProcName="dbo.GetCaseListNextINR" ProcDesc="Marevandosering" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Sykepleier, Vernepleier" InfoCaption="Neste dosering" ChkSum="-1890421244" LastUpdate="2019-11-15T12:26:22.657Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNextINR( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, 
      'Neste dosering ' + CONVERT( VARCHAR, MAX( cdp.DTVal ), 104 ) AS InfoText
  FROM dbo.ClinDataPoint cdp 
  JOIN dbo.ClinEvent ce ON ce.EventId = cdp.EventId 
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = ce.PersonId
  JOIN dbo.OngoingTreatment dt ON dt.PersonId = v.PersonId AND dt.ATC = 'B01AA03'
  WHERE v.StudyId = @StudyId AND cdp.ItemId = 3999  
  GROUP BY v.PersonId, v.DOB, v.FullName, v.GroupName
  ORDER BY MAX( cdp.DTVal );
END]]>
	</row>
	<row ProcId="103" StudyName="GBD" ProcName="dbo.GetCaseListH03AA" ProcDesc="Medikamentbruk: Thyroideasubstitusjon (H03AA)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="-1016460257" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListH03AA( @StudyId INT ) AS
BEGIN 
  EXEC dbo.GetCaseListDrug @StudyId,'H03AA%'
END]]>
	</row>
	<row ProcId="104" StudyName="GBD" ProcName="dbo.GetCaseListC01AA" ProcDesc="Medikamentbruk: Digitalis (C01AA)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="-35313676" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListC01AA( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'C01AA%'
END]]>
	</row>
	<row ProcId="105" StudyName="GBD" ProcName="dbo.GetCaseListC09" ProcDesc="Medikamentbruk: ACEI/A2B (C09)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="840460276" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListC09( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'C09%'
END]]>
	</row>
	<row ProcId="106" StudyName="GBD" ProcName="dbo.GetCaseListJ01" ProcDesc="Medikamentbruk: Antibiotika (J01)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" InfoCaption="Antibiotikum og indikasjon" ChkSum="-1309691825" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListJ01( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'J01%'
END]]>
	</row>
	<row ProcId="107" StudyName="GBD" ProcName="dbo.GetCaseListN06A" ProcDesc="Medikamentbruk: Antidepressiva (N06A)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="519500723" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN06A( @StudyId INT ) AS  
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N06A%'
END]]>
	</row>
	<row ProcId="108" StudyName="GBD" ProcName="dbo.GetCaseListA10" ProcDesc="Medikamentbruk: Antidiabetika (A10)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" ChkSum="1950146639" LastUpdate="2019-08-21T09:57:42.210Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListA10( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'A10%'
END]]>
	</row>
	<row ProcId="109" StudyName="GBD" ProcName="dbo.GetCaseListN03" ProcDesc="Medikamentbruk: Antiepileptika (N03)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="166174112" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN03( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N03%'
END]]>
	</row>
	<row ProcId="110" StudyName="GBD" ProcName="dbo.GetCaseListN04BA" ProcDesc="Medikamentbruk: Antiparkinson-midler (N04BA)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="-1569500859" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN04BA( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N04BA%'
END]]>
	</row>
	<row ProcId="111" StudyName="GBD" ProcName="dbo.GetCaseListN05B" ProcDesc="Medikamentbruk: Benzodiazepiner (N05B)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="-1349147010" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN05B( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N05B%'
END]]>
	</row>
	<row ProcId="112" StudyName="GBD" ProcName="dbo.GetCaseListN06D" ProcDesc="Medikamentbruk: Demensmedisin (N06D)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="1246619806" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN06D( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N06D%'
END]]>
	</row>
	<row ProcId="113" StudyName="GBD" ProcName="dbo.GetCaseListB01AA03" ProcDesc="Medikamentbruk: Marevan (B01AA03)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" ChkSum="1769457662" LastUpdate="2019-08-21T09:57:42.210Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListB01AA03( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'B01AA03'
END]]>
	</row>
	<row ProcId="114" StudyName="GBD" ProcName="dbo.GetCaseListN05A" ProcDesc="Medikamentbruk: Nevroleptika (N05A)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="714737112" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN05A( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N05A%'
END]]>
	</row>
	<row ProcId="115" StudyName="GBD" ProcName="dbo.GetCaseListNSAID" ProcDesc="Medikamentbruk: NSAID (M01A)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="-981284505" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNSAID( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'M01A%'
END]]>
	</row>
	<row ProcId="116" StudyName="GBD" ProcName="dbo.GetCaseListN02A" ProcDesc="Medikamentbruk: Opioider (N02A)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="-1179152950" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN02A( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N02A%'
END]]>
	</row>
	<row ProcId="117" StudyName="GBD" ProcName="dbo.GetCaseListProblemE10" ProcDesc="Diagnose: Diabetes Mellitus Type-1" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" ChkSum="-397370059" LastUpdate="2019-08-21T09:57:42.210Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProblemE10( @StudyId INT ) AS
BEGIN 
  EXECUTE dbo.GetCaseListProblem @StudyId,'E10%'
END]]>
	</row>
	<row ProcId="118" StudyName="GBD" ProcName="dbo.GetCaseListProblemE11" ProcDesc="Diagnose: Diabetes Mellitus Type-2" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" ChkSum="1997740395" LastUpdate="2019-08-21T09:57:42.210Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProblemE11( @StudyId INT ) AS 
BEGIN
 EXECUTE dbo.GetCaseListProblem @StudyId,'E11%'
END]]>
	</row>
	<row ProcId="119" StudyName="GBD" ProcName="dbo.GetCaseListWeightMissing" ProcDesc="Ernæring: Ikke veid siste måned" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1818014525" LastUpdate="2019-01-12T07:16:55.323Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListWeightMissing( @StudyId INT ) AS
BEGIN
  -- TODO: Make into single call.
  -- Get list of patients with last weight date
  SELECT vcl.PersonId, MAX(ce.EventTime) AS LastWeightDate
  INTO #weightDate FROM dbo.ViewActiveCaseListStub vcl
    LEFT OUTER JOIN dbo.ClinEvent ce ON ce.PersonId = vcl.PersonId
    LEFT OUTER JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId = 3224
  WHERE vcl.StudyId = @StudyId AND ISNULL(cdp.Quantity,0) > 0
  GROUP BY vcl.PersonId;
  -- Select the list
  SELECT vcl.PersonId, vcl.DOB, vcl.FullName, vcl.GroupName, ISNULL(dbo.LongTime(wd.LastWeightDate), 'Ingen vekt registrert!' ) AS InfoText
    FROM dbo.ViewActiveCaseListStub vcl
    JOIN #weightDate wd ON wd.PersonId = vcl.PersonId
  WHERE ( vcl.StudyId = @StudyId ) AND ( GETDATE() - wd.LastWeightDate > 30 OR wd.LastWeightDate IS NULL )
  ORDER BY wd.LastWeightDate;
END]]>
	</row>
	<row ProcId="120" StudyName="GBD.OLD" ProcName="GBD.GetCaseListMust" ProcDesc="Ernæring: MUST score" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MaxVersion="20000" ChkSum="986247987" LastUpdate="2019-11-08T08:25:38.347Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListMUST (@StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  EXEC GBD.UpdateMustScoreForAll @StudyId;
  SELECT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName, l.LevelDesc + ': ' + a.AlertHeader AS InfoText
  FROM dbo.Alert a
    JOIN dbo.ViewActiveCaseListStub vcl ON vcl.PersonId=a.PersonId
    JOIN dbo.MetaAlertLevel l ON (l.AlertLevel=a.AlertLevel)
  WHERE ( a.StudyId=@StudyId) AND ( AlertClass='MUST' ) ORDER BY a.AlertLevel DESC,vcl.PersonId
END]]>
	</row>
	<row ProcId="121" StudyName="GBD" ProcName="dbo.GetCaseListDruidHigh" ProcDesc="Interaksjoner: DRUID Rødt nivå" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="-1419276968" LastUpdate="2019-01-17T15:16:35.467Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListDruidHigh( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListDruidLevel @StudyId,4
END]]>
	</row>
	<row ProcId="122" StudyName="GBD" ProcName="dbo.GetCaseListDruidMedium" ProcDesc="Interaksjoner: DRUID Rødt og gult nivå" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="42200200" LastUpdate="2019-01-17T15:16:40.763Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListDruidMedium( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListDruidLevel @StudyId,2
END]]>
	</row>
	<row ProcId="123" StudyName="GBD" ProcName="dbo.GetCaseListAntiHTLowBP" ProcDesc="Forsiktighetsregler: Antihypertensiva og BT &lt; 120" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="560780830" LastUpdate="2019-01-17T15:16:54.717Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListAntiHTLowBP (@StudyId INT) AS
BEGIN
	SET NOCOUNT ON;
	SELECT DISTINCT a.PersonId, a.DOB, a.FullName, a.GroupName, 'Sys BT = ' + CONVERT(VARCHAR, CONVERT(INT, a.Quantity)) + ', ' + dt.DrugName AS InfoText
	FROM (SELECT ce.PersonId, vacls.DOB, vacls.FullName, vacls.GroupName, cdp.Quantity, vacls.StudyId, RANK() OVER (PARTITION BY ce.PersonId, ce.StudyId ORDER BY ce.EventTime DESC) AS rnk
		FROM dbo.ClinEvent ce
		JOIN dbo.ViewActiveCaseListStub vacls
			ON vacls.PersonId = ce.PersonId
		JOIN dbo.ClinDataPoint cdp
			ON cdp.EventId = ce.EventId AND cdp.ItemId = 3556) a
	JOIN dbo.DrugTreatment dt ON dt.PersonId = a.PersonId AND (dt.ATC LIKE 'C07%' OR dt.ATC LIKE 'C09%' OR dt.ATC LIKE 'C08%' OR dt.ATC LIKE 'C02%' OR dt.ATC LIKE 'C03%') AND (dt.StopAt IS NULL OR dt.StopAt > GETDATE())
	WHERE a.rnk = 1 AND a.Quantity < 120 AND a.StudyId = @StudyId
	ORDER BY FullName
END]]>
	</row>
	<row ProcId="124" StudyName="GBD" ProcName="dbo.GetCaseListN04BAN05A" ProcDesc="Kontraindikasjoner: Antiparkinson + nevroleptika" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="-403173962" LastUpdate="2019-01-17T15:17:00.827Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN04BAN05A( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListDrugCombo @StudyId,'N05A%','N04BA%'
END]]>
	</row>
	<row ProcId="125" StudyName="GBD" ProcName="dbo.GetCaseListAF" ProcDesc="Underbehandling: Atrieflimmer m/ behandling" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="1765283898" LastUpdate="2019-01-17T15:17:23.230Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListAF( @StudyId INT ) AS
BEGIN
  -- TODO: Make more effective by using GetLastEnumValTable( 4227 )
  SELECT DISTINCT v.PersonId, v.DOB, v.FullName, v.GroupName,
    ISNULL(ISNULL(dt1.DrugName,ISNULL(dt2.DrugName,ISNULL(dt3.DrugName,dt4.DrugName))),'Ubehandlet') AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  LEFT OUTER JOIN dbo.DrugTreatment dt1 ON dt1.PersonId=v.PersonId AND dt1.ATC = 'B01AA03' AND dt1.StopAt IS NULL
  LEFT OUTER JOIN dbo.DrugTreatment dt2 ON dt2.PersonId=v.PersonId AND dt2.ATC LIKE 'B01AE%' AND dt2.StopAt IS NULL
  LEFT OUTER JOIN dbo.DrugTreatment dt3 ON dt3.PersonId=v.PersonId AND dt3.ATC LIKE 'B01AF%' AND dt3.StopAt IS NULL
  LEFT OUTER JOIN dbo.DrugTreatment dt4 ON dt4.PersonId=v.PersonId AND dt4.ATC LIKE 'B01AC%' AND dt4.StopAt IS NULL
  LEFT OUTER JOIN dbo.ClinProblem cp ON cp.PersonId = v.PersonId
  LEFT OUTER JOIN dbo.ClinEvent ce ON ce.StudyId = v.StudyId AND ce.PersonId = v.PersonId
  LEFT OUTER JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId = 4227 AND cdp.Quantity = 1
  JOIN dbo.MetaNomListItem li ON li.ListItem = cp.ListItem
  JOIN dbo.MetaNomItem i ON i.ItemId=li.ItemId AND i.ItemCode like 'I48%'
  WHERE v.StudyId = @StudyId
  ORDER BY v.GroupName, v.FullName; 
END]]>
	</row>
	<row ProcId="126" StudyName="GBD" ProcName="dbo.GetCaseListC09LowGFR" ProcDesc="Forsiktighetsregler: Bruker ACEI/A2-blokker med GFR &lt; 60" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="1425570124" LastUpdate="2019-01-17T15:17:29.250Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListC09LowGFR( @StudyId INT ) AS
BEGIN
  DECLARE @CalcDate DateTime;
  SET NOCOUNT ON;
  SET @CalcDate = getdate();
  SELECT DISTINCT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName,
    'GFR = ' + CONVERT(VARCHAR,dbo.GetMDRD(vcl.PersonId,@CalcDate)) +
    ', ' + dt.DrugName AS InfoText
  FROM dbo.ViewActiveCaseListStub vcl
    JOIN dbo.DrugTreatment dt on dt.PersonId=vcl.PersonId
      and ( dt.ATC like 'C09%' ) and ( StopAt IS NULL OR StopAt>getdate())
  WHERE vcl.StudyId=@StudyId AND dbo.GetMDRD(vcl.PersonId,@CalcDate) < 60
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="127" StudyName="GBD" ProcName="dbo.GetCaseListMetforminGFR" ProcDesc="Forsiktighetsregler: Metformin og GFR verdi" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="1431724148" LastUpdate="2019-01-17T15:17:38.390Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListMetforminGFR( @StudyId INT ) AS
BEGIN
  DECLARE @CalcAt DateTime;
  SET @CalcAt = getdate();
  SELECT DISTINCT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName,dbo.GetMDRD( vcl.PersonId,@CalcAt ) AS GFR,
  '....................................................................' as InfoText
  INTO #temp FROM dbo.OngoingTreatment dt
    JOIN ViewActiveCaseListStub vcl ON vcl.PersonId=dt.PersonId AND vcl.StudyId=@StudyId
    JOIN dbo.OngoingTreatment d on d.PersonId=vcl.PersonId and d.ATC like 'A10BA02';
  UPDATE #temp SET InfoText = ( 'eGFR = ' + CONVERT(VARCHAR,GFR) + ' mL/min/1.73m2' ) WHERE NOT GFR IS NULL;
  UPDATE #temp SET InfoText = ( 'OBS eGFR = ' + CONVERT(VARCHAR,GFR) + ' mL/min/1.73m2. Vurder å seponere metformin.' ) WHERE GFR<60;
  UPDATE #temp SET InfoText = ( 'eGFR > 80' ) WHERE GFR > 80;
  UPDATE #temp SET InfoText = ( 'Oppdatert S-Kreatinin mangler!' ),GFR=-1 WHERE GFR IS NULL;
  SELECT Personid,DOB,FullName,GroupName,InfoText FROM #temp order by GFR;
END]]>
	</row>
	<row ProcId="128" StudyName="GBD" ProcName="dbo.GetCaseListProBNP" ProcDesc="Underbehandling: ProBNP &gt; 180 uten ACEI/A2RB" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6009" ChkSum="-450831065" LastUpdate="2019-01-12T07:09:43.470Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProBNP (@StudyId INT) AS
BEGIN
  SET NOCOUNT ON;
  SELECT v.*, a.LabDate, a.NumResult, a.ResultId,
    'ProBNP = ' + CONVERT(VARCHAR, a.NumResult) + ' den ' + CONVERT(VARCHAR, a.LabDate, 104) + '.' AS InfoText
  FROM (SELECT PersonId, LabDate, NumResult, ResultId, RANK() OVER (PARTITION BY PersonId ORDER BY LabDate DESC) AS OrderNo
    FROM dbo.LabData ld
    JOIN dbo.LabCode lc
      ON lc.LabCodeId = ld.LabCodeId
    WHERE lc.LabClassId = 140 ) a
  JOIN dbo.ViewActiveCaseListStub v ON v.StudyId = @StudyId AND v.PersonId = a.PersonId
  WHERE a.OrderNo = 1  AND a.NumResult > 180
  AND NOT v.PersonId IN ( SELECT PersonId FROM dbo.OngoingTreatment ot WHERE ot.ATC LIKE 'C09%' )
  ORDER BY a.NumResult DESC
END

]]>
	</row>
	<row ProcId="129" StudyName="GBD" ProcName="dbo.GetCaseListWarfarinNSAID" ProcDesc="Kontraindikasjoner: Warfarin/DOAK + NSAIDs" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="-1128278496" LastUpdate="2019-01-17T15:17:54.420Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListWarfarinNSAID( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId,p.DOB, p.FullName, p.GroupName, p.GenderId, dt1.DrugName + ' - ' + dt2.DrugName AS InfoText
  FROM dbo.OngoingTreatment dt1 
  JOIN dbo.OngoingTreatment dt2 ON dt1.PersonId=dt2.PersonId AND dt1.TreatId <> dt2.TreatId
  JOIN dbo.ViewActiveCaseListStub p ON p.PersonId = dt1.PersonId
  WHERE ( dt1.ATC LIKE 'B01AA%' OR dt1.ATC LIKE 'B01AF%' ) AND dt2.ATC LIKE 'M01A%'
  ORDER BY p.FullName
END]]>
	</row>
	<row ProcId="130" StudyName="GBD.Deprecated" ProcName="dbo.GetCaseListProblemI48" ProcDesc="Diagnose: Atrieflimmer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1880984570" LastUpdate="2019-01-12T07:09:37.220Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProblemI48( @StudyId INT ) AS 
BEGIN
  EXECUTE dbo.GetCaseListProblem @StudyId,'I48%'
END]]>
	</row>
	<row ProcId="131" StudyName="GBD.OLD" ProcName="GBD.GetCaseListLastBerger" ProcDesc="Prosess: Siste Berger" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1353445125" LastUpdate="2019-12-02T18:50:46.863Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListLastBerger( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId, 'BERGER'
END
]]>
	</row>
	<row ProcId="132" StudyName="GBD" ProcName="GBD.GetCaseListLastHulten" ProcDesc="Prosess: Siste Hulten" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="988735161" LastUpdate="2019-12-02T18:47:03.610Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListLastHulten( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId, 'HULTEN'
END
]]>
	</row>
	<row ProcId="133" StudyName="GBD" ProcName="dbo.GetCaseListOldLab" ProcDesc="Prosess: Siste labdata (eksterne)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege" ChkSum="1863622911" LastUpdate="2019-01-17T15:04:52.480Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListOldLab( @StudyId INT ) AS
BEGIN
  /* Get list of last lab dates */
  SELECT PersonId,Max(LabDate) AS LabDate
  INTO #tempLab FROM LabData GROUP BY PersonId;
  /* Select the list */
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,dbo.LongTime(tl.LabDate) AS InfoText
  FROM ViewActiveCaseListStub p
    JOIN #tempLab tl ON tl.PersonId=p.PersonId
  WHERE p.StudyId=@StudyId
  ORDER BY tl.LabDate
END]]>
	</row>
	<row ProcId="134" StudyName="GBD" ProcName="GBD.GetCaseListLastMMSE" ProcDesc="Prosess: Siste MMSE-NR3" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1815953492" LastUpdate="2017-10-20T01:51:05.097Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListLastMMSE( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListLastForm @StudyId, 'MMSE_NR3'
END]]>
	</row>
	<row ProcId="136" StudyName="GBD" ProcName="dbo.GetCaseListC07" ProcDesc="Medikamentbruk: Betablokker (C07)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="1130619632" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListC07( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'C07%'
END]]>
	</row>
	<row ProcId="137" StudyName="GBD" ProcName="dbo.GetCaseListC08" ProcDesc="Medikamentbruk: Kalsiumantagonister (C08)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="-753816519" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListC08( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'C08%'
END]]>
	</row>
	<row ProcId="138" StudyName="GBD" ProcName="dbo.GetCaseListN02BE" ProcDesc="Medikamentbruk: Paracetamol (N02BE)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="-255626699" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN02BE( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'N02BE%'
END]]>
	</row>
	<row ProcId="139" StudyName="GBD" ProcName="dbo.GetCaseListC03" ProcDesc="Medikamentbruk: Diuretika (C03)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="1212193343" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListC03( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'C03%'
END]]>
	</row>
	<row ProcId="140" StudyName="GBD" ProcName="dbo.GetCaseListProBNPgt223" ProcDesc="Forskning: ProBNP &gt; 223" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege" MinVersion="6009" ChkSum="133067250" LastUpdate="2019-01-17T15:24:51.827Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProBNPgt223 (@StudyId INT) AS
BEGIN
  SET NOCOUNT ON;
  SELECT v.*, a.LabDate, a.NumResult, a.ResultId,
    'ProBNP = ' + CONVERT(VARCHAR, a.NumResult) + ' den ' + CONVERT(VARCHAR, a.LabDate, 104) + '.' AS InfoText
  FROM (SELECT PersonId, LabDate, NumResult, ResultId, RANK() OVER (PARTITION BY PersonId ORDER BY LabDate DESC) AS OrderNo
    FROM dbo.LabData ld
    JOIN dbo.LabCode lc
      ON lc.LabCodeId = ld.LabCodeId
    WHERE lc.LabClassId = 140 AND ld.NumResult > 223 ) a
  JOIN dbo.ViewActiveCaseListStub v ON v.StudyId = @StudyId AND v.PersonId = a.PersonId
  WHERE a.OrderNo = 1
  ORDER BY a.NumResult DESC
END]]>
	</row>
	<row ProcId="141" StudyName="GBD" ProcName="GBD.GetCaseListTvangsvedtak" ProcDesc="Tvang: Aktive vedtak" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Sykepleier, Vernepleier, Gruppeleder" MinVersion="515" ChkSum="680260103" LastUpdate="2019-11-26T18:02:01.243Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListTvangsvedtak( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,
    'Vedtak ' + CONVERT(VARCHAR,tv.EventTime,4) + ' gyldig til ' + CONVERT(VARCHAR,tv.StopDate,4) AS InfoText
  FROM dbo.ViewActiveCaseListStub p
  JOIN GBD.Tvangsvedtak tv ON tv.StudyId=p.StudyId AND tv.PersonId=p.PersonId AND tv.StudyId=@StudyId
  WHERE tv.StopDate >= getdate();
END]]>
	</row>
	<row ProcId="142" StudyName="GBD" ProcName="GBD.GetCaseListNoMMSELastYear" ProcDesc="Prosess: Ikke MMSE-NR3 siste år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1680558064" LastUpdate="2017-10-20T01:51:42.513Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNoMMSELastYear( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId, 'MMSE_NR3',365
END]]>
	</row>
	<row ProcId="143" StudyName="GBD.OLD" ProcName="GBD.GetCaseListNoBergerSixMonths" ProcDesc="Prosess: Ikke Berger siste 6 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MaxVersion="6300" ChkSum="-803443408" LastUpdate="2019-12-02T18:52:55.830Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNoBergerSixMonths( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId,'BERGER',180
END]]>
	</row>
	<row ProcId="144" StudyName="GBD" ProcName="GBD.GetCaseListNoHulten3Months" ProcDesc="Prosess: Ikke Hulten siste 3 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-339871573" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNoHulten3Months( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId,'HULTEN',90
END]]>
	</row>
	<row ProcId="145" StudyName="GBD" ProcName="GBD.GetCaseListNoECG6Months" ProcDesc="Prosess: Ikke EKG siste 6 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Sykepleier, Vernepleier, Gruppeleder" ChkSum="-534396093" LastUpdate="2019-01-17T15:25:31.200Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNoECG6Months( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId,'GBD_EKG',180
END]]>
	</row>
	<row ProcId="146" StudyName="GBD" ProcName="dbo.GetCaseListBPMissing" ProcDesc="Prosess: Ikke BT siste 60 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="660255814" LastUpdate="2019-01-12T07:27:05.810Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListBPMissing( @StudyId INT, @DaysBack FLOAT = 60 ) AS
BEGIN
  -- Get BP for active cases
  SELECT v.PersonId, MAX(ce.EventTime) AS BPDate 
  INTO #tempTable 
  FROM dbo.ViewActiveCaseListStub v
    JOIN dbo.ClinEvent ce ON ce.PersonId = v.PersonId
    JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId
    WHERE v.StudyId = @StudyId AND cdp.ItemId IN ( 3556, 3146, 3230 ) AND cdp.Quantity > 0
    GROUP BY v.PersonId;
  -- Join with active cases
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, 
    'Siste BT: ' + ISNULL( dbo.LongTime(t.BPDate), 'Aldri') AS InfoText
    FROM dbo.ViewActiveCaseListStub v
    LEFT OUTER JOIN #tempTable t ON t.PersonId = v.PersonId AND v.StudyId = @StudyId
  WHERE ( BPDate < GETDATE() - @DaysBack ) OR ( BPDate IS NULL )
  ORDER BY BPDate;
END]]>
	</row>
	<row ProcId="147" StudyName="GBD" ProcName="dbo.GetCaseListLastDocForm" ProcDesc="Prosess: Ikke legekontakt siste 90 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Sykepleier, Vernepleier, Gruppeleder" ChkSum="-1333194178" LastUpdate="2019-01-17T15:25:45.263Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListLastDocForm( @StudyId INT, @IgnoreDays FLOAT = 90 ) AS
BEGIN
  DECLARE @IgnoreAfter DateTime;
  SET @IgnoreAfter = getdate() - @IgnoreDays;
  -- Find everybody with a form
  SELECT v.PersonId,max(ce.EventTime) AS LastEvent
  INTO #tempWithForm
    FROM ViewActiveCaseListStub v
    JOIN ClinEvent ce ON ce.PersonId=v.PersonId
    JOIN ClinForm cf ON cf.EventId=ce.EventId
    JOIN UserList ul ON ul.UserId=cf.CreatedBy
    JOIN MetaProfession mp ON mp.ProfId=ul.ProfId
  WHERE mp.ProfType='LE'
  GROUP BY v.PersonId;
  --  Select result, removing the forms newer than @IgnoreDays
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,t2.LastEvent,
  'Legetilsyn: ' + ISNULL(CONVERT(VARCHAR,t2.LastEvent,104), 'Aldri') AS InfoText
  FROM ViewActiveCaseListStub v
  LEFT OUTER JOIN #tempWithForm t2 ON v.PersonId=t2.PersonId
  WHERE (t2.LastEvent < @IgnoreAfter ) OR ( t2.LastEvent IS NULL )
  ORDER BY t2.LastEvent
END]]>
	</row>
	<row ProcId="148" StudyName="GBD" ProcName="dbo.GetCaseListN05B" ProcDesc="Medikamentbruk: Anxiolytika (N05B)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="1785476119" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN05B( @StudyId INT ) AS
BEGIN 
  EXEC dbo.GetCaseListDrug @StudyId,'N05B%'
END]]>
	</row>
	<row ProcId="149" StudyName="GBD" ProcName="dbo.GetCaseListN05C" ProcDesc="Medikamentbruk: Hypnotika (N05C)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="-989048285" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN05C( @StudyId INT ) AS
BEGIN 
  EXEC dbo.GetCaseListDrug @StudyId,'N05C%'
END]]>
	</row>
	<row ProcId="150" StudyName="GBD" ProcName="dbo.GetCaseListNoBloodTest" ProcDesc="Prosess: Ingen labdata siste 6 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege" ChkSum="1491610661" LastUpdate="2019-01-17T15:05:02.450Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListNoBloodTest( @StudyId INT, @DaysBack FLOAT = 180 ) AS
BEGIN
  -- Get BP for active cases
  SELECT v.PersonId,max(ld.LabDate) AS LabDate INTO #tempTable FROM ViewActiveCaseListStub v
    JOIN LabData ld ON ld.PersonId=v.PersonId
    WHERE ld.NumResult > 0
    GROUP BY v.PersonId;
  -- Join with active cases
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName, 'Siste blodprøver: ' + ISNULL( dbo.LongTime(t.LabDate), 'Aldri') AS InfoText
    FROM dbo.ViewActiveCaseListStub v
    LEFT OUTER JOIN #tempTable t ON t.PersonId=v.PersonId AND v.StudyId=@StudyId
  WHERE ( LabDate < getdate()-@DaysBack ) OR ( LabDate IS NULL )
  ORDER BY LabDate;
END]]>
	</row>
	<row ProcId="151" StudyName="GBD" ProcName="GBD.GetCaseListAnticholinergic" ProcDesc="Forsiktighetsregler: Antikolinergika og demens" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" MinVersion="6408" ChkSum="1079891649" LastUpdate="2019-01-17T15:18:03.513Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAnticholinergic( @StudyId INT ) AS 
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, ot.DrugName, ac.AlertLevel,
   'Nivå ' + CONVERT(VARCHAR,AlertLevel) + ': (' + 
    ot.DrugName + COALESCE( ') ' + dd.ItemCode + ' ' + dd.ItemName, ') ikke demens.' ) AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.OngoingTreatment ot ON ot.PersonId=v.PersonId
  JOIN dbo.KBAnticholinDrug ac ON ac.ATC=ot.ATC
  LEFT JOIN Diagnose.Dementia dd ON dd.PersonId=v.PersonId
  WHERE ac.AlertLevel IN ('A','B')
  ORDER BY ac.AlertLevel, FullName;
END]]>
	</row>
	<row ProcId="152" StudyName="GBD" ProcName="GBD.GetCaseListOppholdstype" ProcDesc="Personer: Oppholdstype" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1374418984" LastUpdate="2019-12-17T19:00:49.813Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListOppholdstype( @StudyId INT ) AS
BEGIN
  SELECT v.*, v.StatusText AS InfoText, p.BestId
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.Person p ON p.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId
  ORDER BY v.FullName;
END]]>
	</row>
	<row ProcId="153" StudyName="GBD" ProcName="dbo.GetCaseListA10A" ProcDesc="Medikamentbruk: Insulin (A10A)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" ChkSum="-866523225" LastUpdate="2019-08-21T09:57:42.210Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListA10A( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'A10A%'
END]]>
	</row>
	<row ProcId="154" StudyName="GBD.BASE" ProcName="GBD.GetCaseListAvvikMine" ProcDesc="Avvik: Alle mine avvik" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1604697408" LastUpdate="2019-01-12T07:30:21.630Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAvvikMine( @StudyId INT, @StartAt DateTime, @StopAt DateTime ) AS
BEGIN
  SELECT ce.PersonId, p.DOB, p.ReverseName AS FullName, sg.GroupName, p.GenderId, p.NationalId,
    'Opprettet: ' + dbo.ShortTime( ce.EventTime ) + ', ' + ISNULL(mia.OptionText,'Registrert*') AS InfoText 
  FROM dbo.ClinForm cf
  JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId
  JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
  JOIN dbo.Person p ON p.PersonId=ce.PersonId
  JOIN dbo.StudyGroup sg ON ( sg.StudyId=ce.StudyId ) AND ( sg.GroupId=ce.GroupId ) AND ( sg.GroupActive = 1 )
  LEFT OUTER JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId = 8512
  LEFT OUTER JOIN dbo.MetaItemAnswer mia ON mia.ItemId = cdp.ItemId AND mia.OrderNumber = cdp.EnumVal
  LEFT OUTER JOIN dbo.StudyUser su ON su.UserId=USER_ID() AND su.StudyId = ce.StudyId
  WHERE ( mf.FormName='GbdAvvik' ) AND ( cf.DeletedAt IS NULL )
  AND ( ce.StudyId=@StudyId ) AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  AND ( ( su.GroupId=ce.GroupId ) OR ( su.UserId IS NULL ) OR ( su.GroupId IS NULL ) OR ( su.ShowMyGroup = 0 ) )
  AND ( cf.CreatedBy=USER_ID() )
  ORDER BY ce.EventTime DESC;
END]]>
	</row>
	<row ProcId="155" StudyName="GBD" ProcName="GBD.GetCaseListDiedHere" ProcDesc="Dødsfall: Skjemastatus &quot;Ved dødsfallet&quot;" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Gruppeleder" MinVersion="6614" ChkSum="1182610382" LastUpdate="2019-06-14T08:29:29.913Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListDiedHere( @StudyId INT ) AS
BEGIN
  DECLARE @FormId INT
  SELECT @FormId = MAX(FormId) from dbo.MetaForm where FormName = 'LS3'
  SELECT vcldh.PersonId, DOB, FullName, StudyId, GroupName, vcldh.DeathRegisteredAt, 
    InfoText = 
      CASE 
        WHEN ft.CreatedAt IS NULL THEN 'Livets siste dager: Mangler!' 
      ELSE  
        CASE 
          WHEN ft.SignedAt IS NULL THEN 'Livets siste dager: Påbegynt...' 
          ELSE 'Livets siste dager: Signert.' 
        END
      END 
  FROM GBD.ViewCaseListDiedHere AS vcldh 
  LEFT JOIN dbo.GetLastFormTable( @FormId, NULL ) ft ON ft.PersonId = vcldh.PersonId
END]]>
	</row>
	<row ProcId="156" StudyName="GBD" ProcName="dbo.GetCaseListDiabetes" ProcDesc="Diagnose: Diabetes" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" ChkSum="-662863030" LastUpdate="2019-08-21T09:57:42.210Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListDiabetes( @StudyId INT ) AS
BEGIN 
  EXECUTE dbo.GetCaseListProblem @StudyId,'E1[014]%'
END]]>
	</row>
	<row ProcId="157" StudyName="GBD.BASE" ProcName="GBD.GetCaseListAvvikOpen" ProcDesc="Avvik: Alle åpne avvik" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="434008872" LastUpdate="2019-01-12T07:43:28.553Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAvvikOpen( @StudyId INT, @StartAt DateTime, @StopAt DateTime ) AS
BEGIN
  SELECT ce.PersonId, p.DOB, p.ReverseName AS FullName, sg.GroupName, p.GenderId, p.NationalId,
    'Opprettet: ' + dbo.ShortTime( ce.EventTime ) + ', ' + ISNULL(mia.OptionText,'Registrert*') AS InfoText 
  FROM dbo.ClinForm cf
  JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId
  JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
  JOIN dbo.Person p ON p.PersonId = ce.PersonId      
  JOIN dbo.UserList ul ON ul.UserId=USER_ID()
  JOIN dbo.StudyGroup sg ON ( sg.StudyId=ce.StudyId ) AND ( sg.GroupId=ce.GroupId ) AND ( sg.GroupActive = 1 ) AND ( sg.CenterId=ul.CenterId )
  LEFT OUTER JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId = 8512
  LEFT OUTER JOIN dbo.MetaItemAnswer mia ON mia.ItemId = cdp.ItemId AND mia.OrderNumber = cdp.EnumVal
  LEFT OUTER JOIN dbo.StudyUser su ON su.UserId=USER_ID() AND su.StudyId=ce.StudyId
  WHERE ( mf.FormName='GbdAvvik' ) AND ( ISNULL(cdp.EnumVal,-1) <> 3 ) AND ( cf.DeletedAt IS NULL )
  AND ( ce.StudyId=@StudyId ) AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  AND ( ( su.GroupId=ce.GroupId ) OR ( su.UserId IS NULL ) OR ( su.GroupId IS NULL ) OR ( su.ShowMyGroup = 0 ) )
  ORDER BY ce.EventTime DESC
END]]>
	</row>
	<row ProcId="158" StudyName="GBD" ProcName="GBD.GetCaseListAvvikOpenThisTertial" ProcDesc="Avvik: Åpne avvik dette tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Gruppeleder" ChkSum="1568424382" LastUpdate="2019-01-17T15:27:17.797Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAvvikOpenThisTertial( @StudyId INT ) AS
BEGIN
  DECLARE @StartAt DateTime;
  DECLARE @StopAt DateTime; 
  DECLARE @KeyDate DateTime;
  SET @KeyDate = GETDATE();
  EXEC dbo.CalculateTertial @KeyDate, @StartAt OUTPUT, @StopAt OUTPUT;
  EXEC GBD.GetCaseListAvvikOpen @StudyId, @StartAt, @StopAt; 
END
]]>
	</row>
	<row ProcId="159" StudyName="GBD" ProcName="GBD.GetCaseListAvvikOpenLastTertial" ProcDesc="Avvik: Åpne avvik forrige tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Gruppeleder" ChkSum="94675336" LastUpdate="2019-01-17T15:27:31.547Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAvvikOpenLastTertial( @StudyId INT ) AS
BEGIN
  DECLARE @StartAt DateTime;
  DECLARE @StopAt DateTime; 
  DECLARE @KeyDate DateTime;
  SET @KeyDate = DATEADD( MONTH, -4, GETDATE() );
  EXEC dbo.CalculateTertial @KeyDate, @StartAt OUTPUT, @StopAt OUTPUT;
  EXEC GBD.GetCaseListAvvikOpen @StudyId, @StartAt, @StopAt; 
END]]>
	</row>
	<row ProcId="160" StudyName="GBD" ProcName="GBD.GetCaseListAvvikMineThisTertial" ProcDesc="Avvik: Mine avvik dette tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="498416262" LastUpdate="2014-06-06T11:48:46.693Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAvvikMineThisTertial( @StudyId INT ) AS
BEGIN
  DECLARE @StartAt DateTime;
  DECLARE @StopAt DateTime; 
  DECLARE @KeyDate DateTime;
  SET @KeyDate = GETDATE();
  EXEC dbo.CalculateTertial @KeyDate, @StartAt OUTPUT, @StopAt OUTPUT;
  EXEC GBD.GetCaseListAvvikMine @StudyId, @StartAt, @StopAt; 
END
]]>
	</row>
	<row ProcId="161" StudyName="GBD" ProcName="GBD.GetCaseListAvvikMineLastTertial" ProcDesc="Avvik: Mine avvik forrige tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1298744134" LastUpdate="2014-06-06T11:48:48.553Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListAvvikMineLastTertial( @StudyId INT ) AS
BEGIN
  DECLARE @StartAt DateTime;
  DECLARE @StopAt DateTime; 
  DECLARE @KeyDate DateTime;
  SET @KeyDate = DATEADD( MONTH, -4, GETDATE() );
  EXEC dbo.CalculateTertial @KeyDate, @StartAt OUTPUT, @StopAt OUTPUT;
  EXEC GBD.GetCaseListAvvikMine @StudyId, @StartAt, @StopAt; 
END]]>
	</row>
	<row ProcId="162" StudyName="GBD" ProcName="GBD.GetCaseListUnsignedInfectionForms" ProcDesc="Infeksjoner: Usignerte infeksjonsregistreringer" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Sykepleier, Vernepleier, Gruppeleder" MinVersion="18000" HelpText="Usignerte infeksjonsregistrering bør følges opp regelmessig for å registrere utfall av infeksjon." ChkSum="1753742654" LastUpdate="2019-12-16T13:29:36.920Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListUnsignedInfectionForms( @StudyId INT ) AS
BEGIN
  SELECT 
    p.PersonId, p.DOB, p.FullName, sg.GroupName, mf.FormTitle + ', ' + dbo.LongTime(ce.EventTime) AS InfoText,
    p.GenderId, p.NationalId
  FROM dbo.ClinForm cf
    JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
    JOIN dbo.StudyGroup sg ON sg.GroupId = ce.GroupId AND sg.StudyId = @StudyId
    JOIN dbo.UserList ul ON ul.CenterId = sg.CenterId AND ul.UserId = USER_ID()
    JOIN dbo.Person p ON p.PersonId = ce.PersonId
    JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId AND mf.FormName = 'GBD_INFECTION'
    LEFT OUTER JOIN dbo.StudyUser su ON su.UserId = USER_ID() AND su.StudyId = sg.StudyId
  WHERE ( cf.SignedAt IS NULL ) AND ( cf.DeletedAt IS NULL ) AND ( DATEDIFF(d, ce.EventTime, GETDATE()) <= 180 )
    AND ( ( su.GroupId=sg.GroupId ) OR ( su.UserId IS NULL ) OR ( su.GroupId IS NULL ) OR ( su.ShowMyGroup = 0 ) )
  ORDER BY ce.EventTime;
END
]]>
	</row>
	<row ProcId="163" StudyName="GBD" ProcName="GBD.GetCaseListNorGEP" ProcDesc="NorGEP: Anbefalinger fra NorGEP" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt" MinVersion="512" ChkSum="665967728" LastUpdate="2019-01-17T15:14:01.683Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNorGEP( @StudyId INT ) AS
BEGIN
 
  SELECT DISTINCT dt.PersonId,p.DOB,p.FullName,a.GroupName,dt.DrugName + ': ' + ng.Warning + ' (NorGEP ' + CONVERT(VARCHAR,ng.Id) + ')' AS InfoText,ng.Id  
  FROM DrugTreatment dt JOIN KB.NorGEP ng ON dt.ATC=ng.ATC 
    JOIN ViewActiveCaseListStub a ON a.PersonId=dt.PersonId AND StudyId=@StudyId
    JOIN Person p ON p.PersonId=a.PersonId   
  WHERE  ( ( dt.StopAt IS NULL ) OR ( dt.StopAt > getdate() ) ) 
    AND ( ( ng.MaxDose IS NULL ) OR ( ng.MaxDose < dt.Dose24HDD ) OR ( dt.Dose24hDD IS NULL ) )
    AND ( ( p.DOB < getdate()-365.25*AgeLow ) AND ( p.DOB > getdate()-365.24*AgeHigh ) )                                                                 

  UNION
  
  SELECT PersonId,DOB,FullName,GroupName, AlertHeader + ': ' + Warning + ' (NorGEP ' + CONVERT(VARCHAR,NgId) + ')' AS InfoText, ngId
  FROM KB.ViewNorGEPInteractions WHERE StudyId=@StudyId
  
  UNION
  
  SELECT a.PersonId, a.DOB, a.FullName, a.GroupName, n.Warning + '(NorGEP 36, n=' + CONVERT(VARCHAR,v.DrugCount) + ')' as InfoText,36 as Id FROM KB.ViewNorGEPPoly v 
  JOIN ViewActiveCaseListStub a ON a.PersonId=v.PersonId AND a.StudyId=@StudyId    
  JOIN KB.NorGEP n ON n.Id=36
  
  ORDER BY ng.Id
  
END]]>
	</row>
	<row ProcId="164" StudyName="GBD" ProcName="GBD.GetCaseListProblemI50" ProcDesc="Diagnose: Hjertesvikt" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="1560529986" LastUpdate="2019-01-17T15:18:31.763Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListProblemI50( @StudyId INT ) AS
BEGIN 
  EXECUTE dbo.GetCaseListProblem @StudyId,'I50%'
END]]>
	</row>
	<row ProcId="165" StudyName="GBD" ProcName="dbo.GetCaseListB01AF" ProcDesc="Medikamentbruk: DOAK (B01AF)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="1383864522" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListB01AF( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'B01AF%'
END]]>
	</row>
	<row ProcId="166" StudyName="GBD" ProcName="GBD.GetCaseListFormVaccine" ProcDesc="Prosess: Vaksinering" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Sykepleier, Vernepleier, Gruppeleder" MinVersion="6630" HelpText="Aktive pasienter ved institusjonen/avdelingen som har skjema av typen &quot;Vaksine&quot;, med opplysninger om og dato for siste vaksinering." CompatibilityLevel="100" ChkSum="-1460229987" LastUpdate="2019-12-16T14:11:17.037Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListFormVaccine( @StudyId INT ) AS
BEGIN
  SELECT v.*,
    CONCAT(
    CASE
      WHEN cdp1.ItemId IS NOT NULL AND cdp2.ItemId IS NOT NULL 
        THEN REPLACE(cdp1.ItemId, 7051, 'Pneumokokkvaksine og ') + REPLACE(cdp2.ItemId, 7052, 'influensavaksine ')
      WHEN cdp1.ItemId IS NOT NULL 
        THEN REPLACE(cdp1.ItemId, 7051, 'Pneumokokkvaksine ')
      WHEN cdp2.ItemId IS NOT NULL THEN REPLACE(cdp2.ItemId, 7052, 'Influensavaksine ')
    END, 'gitt ' + CONVERT(VARCHAR, frm.EventTime, 104), '.' ) AS InfoText
  FROM dbo.GetLastFormTableByName('GbdVaksine', GETDATE() + 1) frm
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = frm.PersonId
  LEFT JOIN dbo.ClinDataPoint cdp1 ON cdp1.EventId = frm.EventId AND cdp1.ItemId = 7051 AND cdp1.EnumVal = 1
  LEFT JOIN dbo.ClinDataPoint cdp2 ON cdp2.EventId = frm.EventId AND cdp2.ItemId = 7052 AND cdp2.EnumVal = 1
  WHERE v.StudyId = @StudyId;
END]]>
	</row>
	<row ProcId="167" StudyName="GBD" ProcName="dbo.GetCaseListProBNPgt1522" ProcDesc="Forskning: ProBNP &gt; 1522 ng/L (noen gang)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege" MinVersion="18001" HelpText="Rapporten brukes til forskning/statistikk for å identifisere pasienter med hjertesvikt." ChkSum="-171799795" LastUpdate="2019-01-17T15:06:55.030Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProBNPgt1522( @StudyId INT ) AS
BEGIN
    SELECT v.*, a.LabDate, a.NumResult, a.ResultId,
        'ProBNP = ' + CONVERT(VARCHAR, a.NumResult) + ' den ' + CONVERT(VARCHAR, a.LabDate, 104) + '.' AS InfoText
    FROM (SELECT PersonId, LabDate, NumResult, ResultId, RANK() OVER (PARTITION BY PersonId ORDER BY LabDate DESC) AS OrderNo
        FROM dbo.LabData ld
        JOIN dbo.LabCode lc
                ON lc.LabCodeId = ld.LabCodeId
        WHERE lc.LabClassId = 575
        AND ld.NumResult > 1522) a
    JOIN dbo.ViewActiveCaseListStub v ON v.StudyId = @StudyId AND v.PersonId = a.PersonId
    WHERE a.OrderNo = 1
    ORDER BY a.NumResult DESC;
END]]>
	</row>
	<row ProcId="168" StudyName="GBD" ProcName="dbo.GetCaseListProBNPgt1522Untreated" ProcDesc="Underbehandling: Siste ProBNP &gt; 1522 ng/L  uten ACEI/A2RB" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" MinVersion="18001" HelpText="Dette er en operativ rapport for å finne pasienter med hjertesvikt som ikke har adekvat behandling." ChkSum="438718305" LastUpdate="2019-01-17T15:18:52.793Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListProBNPgt1522Untreated( @StudyId INT ) AS
BEGIN
    SELECT v.*, a.LabDate, a.NumResult, a.ResultId,
        'ProBNP = ' + CONVERT(VARCHAR, a.NumResult) + ' den ' + CONVERT(VARCHAR, a.LabDate, 104) + '.' AS InfoText
    FROM (SELECT PersonId, LabDate, NumResult, ResultId, RANK() OVER (PARTITION BY PersonId ORDER BY LabDate DESC) AS OrderNo
        FROM dbo.LabData ld
        JOIN dbo.LabCode lc
                ON lc.LabCodeId = ld.LabCodeId
        WHERE lc.LabClassId = 575) a
    JOIN dbo.ViewActiveCaseListStub v ON v.StudyId = @StudyId AND v.PersonId = a.PersonId
    WHERE a.OrderNo = 1 AND a.NumResult > 1522
    AND NOT v.PersonId IN (SELECT PersonId
        FROM dbo.OngoingTreatment ot
        WHERE ot.ATC LIKE 'C09%')
    ORDER BY a.NumResult DESC;
END]]>
	</row>
	<row ProcId="169" StudyName="GBD" ProcName="GBD.GetCaseListFlackerKiely" ProcDesc="Prosess: Flacker-Kiely utfylt" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Sykepleier, Vernepleier, Gruppeleder" MinVersion="6000" ChkSum="-750234064" LastUpdate="2019-01-17T15:26:09.310Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListFlackerKiely( @StudyId INT ) AS 
BEGIN
  -- Using StatusText AS GroupName on purpose
  SELECT v.PersonId, v.DOB, v.FullName, v.StudyId, ss.StatusText AS GroupName, v.GenderId,
      'Utfylt: ' + CONVERT(VARCHAR,forms.LastFormDate,104) AS InfoText 
    FROM dbo.ViewActiveCaseListStub v
    JOIN
    (
      SELECT ce.PersonId, MAX(ce.EventTime) AS LastFormDate
      FROM dbo.ClinEvent ce
      JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId
      JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId AND mf.FormName='FLACKER_KIELY'
      GROUP BY ce.PersonId 
    ) forms ON forms.PersonId = v.PersonId
  JOIN dbo.StudCase sc ON sc.StudyId = v.StudyId AND sc.PersonId = v.PersonId
  JOIN dbo.StudyStatus ss ON ss.StudyId = sc.StudyId AND ss.StatusId = sc.StatusId  
  WHERE v.StudyId = @StudyId
  ORDER BY forms.LastFormDate;
END;]]>
	</row>
	<row ProcId="170" StudyName="GBD" ProcName="GBD.GetCaseListFlackerKielyPending" ProcDesc="Prosess: Ikke Flacker-Kiely siste 6 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Sykepleier, Vernepleier, Gruppeleder" MinVersion="6000" ChkSum="-334050951" LastUpdate="2019-08-06T10:01:06.510Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListFlackerKielyPending( @StudyId INT ) AS 
BEGIN
  DECLARE @IgnoreFormsAfter DateTime;
  SET @IgnoreFormsAfter = GETDATE() - 180;
  -- Using StatusText AS GroupName on purpose
  SELECT v.PersonId, v.DOB, v.FullName, v.StudyId, ss.StatusText AS GroupName, v.GenderId,
      'Utfylt: ' + ISNULL(CONVERT(VARCHAR,forms.LastFormDate,104), 'Aldri') AS InfoText 
    FROM dbo.ViewActiveCaseListStub v
    LEFT JOIN
    (
      SELECT ce.PersonId, MAX(ce.EventTime) AS LastFormDate
      FROM dbo.ClinEvent ce
      JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId
      JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId AND mf.FormName='FLACKER_KIELY'
      GROUP BY ce.PersonId 
    ) forms ON forms.PersonId = v.PersonId
  JOIN dbo.StudCase sc ON sc.StudyId = v.StudyId AND sc.PersonId = v.PersonId
  JOIN dbo.StudyStatus ss ON ss.StudyId = sc.StudyId AND ss.StatusId = sc.StatusId  
  WHERE v.StudyId = @StudyId AND ( ( forms.LastFormDate <= @IgnoreFormsAfter ) OR ( forms.LastFormDate IS NULL ) )
  ORDER BY forms.LastFormDate;
END;]]>
	</row>
	<row ProcId="171" StudyName="GBD" ProcName="GBD.GetCaseListFormAvvikThisTertile" ProcDesc="Avvik: Alle avvik dette tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Gruppeleder" MinVersion="18020" ChkSum="-250260846" LastUpdate="2019-01-17T15:27:41.717Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListFormAvvikThisTertile (@StudyId INT) AS
BEGIN
    DECLARE @KeyDate DATETIME = GETDATE();
    DECLARE @StartsAt DATETIME;
    DECLARE @EndsAt DATETIME;
    EXEC dbo.CalculateTertial @KeyDate, @StartsAt OUTPUT, @EndsAt OUTPUT;

    SELECT ce.PersonId, p.FullName, p.DOB, sg.GroupName,
        'Opprettet: ' + CONVERT( VARCHAR, ce.EventTime, 104 ) + ', Status: ' + mia.OptionText AS InfoText
    FROM dbo.ClinForm cf 
    JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId AND mf.FormName = 'GbdAvvik'
    JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
    JOIN dbo.Person p ON p.PersonId = ce.PersonId
    JOIN dbo.UserList ul ON ul.UserId = USER_ID()
    JOIN dbo.StudyGroup sg ON ( sg.StudyId = ce.StudyId ) AND ( sg.GroupId = ce.GroupId ) AND ( sg.GroupActive = 1 ) AND ( sg.CenterId=ul.CenterId )
    LEFT JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId = 8512
    LEFT JOIN dbo.MetaItemAnswer mia ON mia.OrderNumber = cdp.EnumVal AND mia.ItemId = cdp.ItemId
    LEFT OUTER JOIN dbo.StudyUser su ON su.UserId = USER_ID() AND su.StudyId=ce.StudyId
    WHERE (ce.EventTime BETWEEN @StartsAt AND @EndsAt)
    AND ( ce.StudyId = @StudyId ) AND (( su.GroupId = ce.GroupId ) OR (su.UserId IS NULL) OR (su.GroupId IS NULL) OR (su.ShowMyGroup = 0));
END;
]]>
	</row>
	<row ProcId="172" StudyName="GBD" ProcName="GBD.GetCaseListFormAvvikLastTertile" ProcDesc="Avvik: Alle avvik forrige tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Gruppeleder" MinVersion="18020" ChkSum="1388985760" LastUpdate="2019-01-17T15:27:49.483Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListFormAvvikLastTertile (@StudyId INT) AS
BEGIN
    DECLARE @KeyDate DATETIME = DATEADD(MONTH, -4, GETDATE());
    DECLARE @StartsAt DATETIME;
    DECLARE @EndsAt DATETIME;
    EXEC dbo.CalculateTertial @KeyDate, @StartsAt OUTPUT, @EndsAt OUTPUT;

    SELECT ce.PersonId, p.FullName, p.DOB, sg.GroupName,
        'Opprettet: ' + CONVERT( VARCHAR, ce.EventTime, 104 ) + ', Status: ' + mia.OptionText AS InfoText
    FROM dbo.ClinForm cf 
    JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId AND mf.FormName = 'GbdAvvik'
    JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
    JOIN dbo.Person p ON p.PersonId = ce.PersonId
    JOIN dbo.UserList ul ON ul.UserId = USER_ID()
    JOIN dbo.StudyGroup sg ON ( sg.StudyId = ce.StudyId ) AND ( sg.GroupId = ce.GroupId ) AND ( sg.GroupActive = 1 ) AND ( sg.CenterId=ul.CenterId )
    LEFT JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId = 8512
    LEFT JOIN dbo.MetaItemAnswer mia ON mia.OrderNumber = cdp.EnumVal AND mia.ItemId = cdp.ItemId
    LEFT OUTER JOIN dbo.StudyUser su ON su.UserId = USER_ID() AND su.StudyId=ce.StudyId
    WHERE (ce.EventTime BETWEEN @StartsAt AND @EndsAt)
    AND ( ce.StudyId = @StudyId ) AND (( su.GroupId = ce.GroupId ) OR (su.UserId IS NULL) OR (su.GroupId IS NULL) OR (su.ShowMyGroup = 0));
END;]]>
	</row>
	<row ProcId="173" StudyName="GBD" ProcName="GBD.GetCaseListFormBeslutninger" ProcDesc="Beslutninger: Siste beslutninger" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Sykepleier, Vernepleier, Gruppeleder" MinVersion="18020" ChkSum="503681760" LastUpdate="2019-12-16T13:25:42.513Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListFormBeslutninger (@StudyId INT) AS
BEGIN
  SELECT v.*, 
    v.StatusText + '. Dato: ' + dbo.ShortTime( frm.EventTime) AS InfoText
  FROM dbo.GetLastFormTableByName( 'GBD_BESLUTNINGER', GETDATE() + 1 ) frm
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = frm.PersonId
  WHERE v.StudyId = @StudyId;
END]]>
	</row>
	<row ProcId="174" StudyName="GBD" ProcName="GBD.GetCaseListNoFormBeslutninger" ProcDesc="Beslutninger: Uten beslutninger" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Sykepleier, Vernepleier, Gruppeleder" MinVersion="18020" ChkSum="-608786643" LastUpdate="2019-01-17T15:26:36.263Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNoFormBeslutninger (@StudyId INT) AS
BEGIN
    EXEC dbo.GetCaseListLastForm @StudyId, 'GBD_BESLUTNINGER', 36500;
END;]]>
	</row>
	<row ProcId="175" StudyName="GBD" ProcName="GBD.GetCaseListDrugCount" ProcDesc="Medikamentbruk: Antall faste medisiner" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" MinVersion="6000" ChkSum="-1468662748" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListDrugCount( @StudyId INT ) AS
BEGIN
SELECT *, 'Fast ' + CONVERT(VARCHAR,FastAntall) + ', behov ' + CONVERT(VARCHAR,BehovAntall) + '.' AS InfoText  
FROM 
(
  SELECT v.*, ISNULL(agg_behov.n_behov,0) AS BehovAntall, ISNULL(agg_fast.n_fast,0) AS FastAntall
  FROM dbo.ViewActiveCaseListStub v      
  LEFT OUTER JOIN   
  (
    SELECT PersonId, COUNT(*) AS n_behov
    FROM dbo.OngoingTreatment
    WHERE TreatType = 'B'
    GROUP BY PersonId
  ) agg_behov ON agg_behov.PersonId = v.PersonId
  LEFT OUTER JOIN 
  (
    SELECT PersonId, COUNT(*) AS n_fast
    FROM dbo.OngoingTreatment
    WHERE TreatType IN ('F','U')
    GROUP BY PersonId
  ) agg_fast ON agg_fast.PersonId = v.PersonId
  WHERE v.StudyId=@StudyId
) population
ORDER BY FastAntall DESC, BehovAntall DESC;
END;]]>
	</row>
	<row ProcId="176" StudyName="GBD" ProcName="GBD.GetCaseListGlobalLongTerm" ProcDesc="Forskning: B12-behandling Jenny A" ProcParams=":StudyId" ListId="CASE" GrantTo="QuickStat" MinVersion="6000" ChkSum="609444180" LastUpdate="2018-03-27T12:17:45.450Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListGlobalLongterm( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListGlobalByStatusId @StudyId, 7;
END;]]>
	</row>
	<row ProcId="177" StudyName="GBD" ProcName="dbo.GetCaseListN05AexLowDoseH04" ProcDesc="Medikamentbruk: Antipsykotika (N05A) unntatt lavdose N05AH04" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" ChkSum="43709328" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListN05AexLowDoseH04( @StudyId INT ) AS
BEGIN
  SET LANGUAGE Norwegian;
  SELECT v.PersonId, v.DOB, v.FullName, v.GenderId, v.GroupName,
  DrugName + ' ' + ISNULL(FORMAT( agg.Dose24hDD, 'N'  ),'?') + '/24h (' + ATC + ')' AS  InfoText
  FROM 
  (
    SELECT *, RANK() OVER ( PARTITION BY PersonId ORDER BY TreatId DESC ) AS ReverseOrderNo
    FROM
    ( 
      SELECT PersonId, TreatId, ATC, DrugName, ot1.Dose24hDD FROM OngoingTreatment ot1 
      WHERE ATC  LIKE 'N05A%' AND TreatType = 'F'
      EXCEPT 
      SELECT PersonId, TreatId, ATC, DrugName, ot2.Dose24hDD FROM OngoingTreatment ot2
      WHERE ATC = 'N05AH04' AND ot2.Dose24hDD < 100
    ) ot
  ) agg
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = agg.PersonId
  WHERE  agg.ReverseOrderNo = 1
  ORDER BY v.FullName;
END;]]>
	</row>
	<row ProcId="178" StudyName="GBD" ProcName="GBD.GetCaseListMultidose" ProcDesc="Medikamentbruk: Multidose" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" MinVersion="19008" HelpText="Pasienter som har medisiner registrert  med doseringstype multidose." ChkSum="1072523864" LastUpdate="2019-08-21T09:57:42.210Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListMultidose (@StudyId INT) AS
BEGIN
	SELECT v.PersonId, v.DOB, v.FullName, v.GenderId, v.GroupName, CONCAT('Antall multidosemedikamenter: ', t.Total) AS InfoText
	FROM (SELECT ot.PersonId, COUNT(ot.PackType) AS Total
		FROM dbo.OngoingTreatment ot
		WHERE ot.PackType = 'M'
		GROUP BY ot.PersonId) t
	JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = t.PersonId AND v.StudyId = @StudyId
	ORDER BY v.PersonId;
END;]]>
	</row>
	<row ProcId="179" StudyName="GBD" ProcName="dbo.GetCaseListUnsignedLabdata" ProcDesc="Personer: Usignerte labdata" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19008" ChkSum="-520799930" LastUpdate="2019-09-12T09:10:06.060Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListUnsignedLabdata( @StudyId INT ) AS
BEGIN
    SELECT v.*, FORMAT( unsigned.Antall, 'Har # usignerte prøvesvar') AS InfoText
    FROM dbo.ViewActiveCaseListStub v
    JOIN (
        SELECT PersonId, COUNT(*) AS Antall
        FROM dbo.LabData
        WHERE SignedBy IS NULL
        GROUP BY PersonId
    ) unsigned ON unsigned.PersonId = v.PersonId
	WHERE v.StudyId = @StudyId
    ORDER BY unsigned.Antall DESC, v.FullName;
END;]]>
	</row>
	<row ProcId="180" StudyName="GBD" ProcName="GBD.GetCaseListDrugStoppedLastMonth" ProcDesc="Medikamentbruk: Seponert siste måned" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" MinVersion="19004" ChkSum="-423104865" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListDrugStoppedLastMonth ( @StudyId INT ) AS
BEGIN
    SELECT v.*, dt.StopAuthorizedByName, CONCAT( dt.DrugName, ' avsluttet av ', p.FullName, ' ', CONVERT( VARCHAR, dt.StopAt, 104 ) ) AS InfoText
    FROM dbo.ViewActiveCaseListStub v
    JOIN dbo.DrugTreatment dt ON dt.PersonId = v.PersonId AND dt.StopAt IS NOT NULL
    JOIN dbo.UserList ul ON ul.UserId = dt.StopBy
    JOIN dbo.Person p ON p.PersonId = ul.PersonId
    WHERE ( DATEDIFF( DAY, dt.StopAt, GETDATE() ) <= 30 )
	AND ( v.StudyId = @StudyId )
	ORDER BY dt.StopAt DESC;
END;]]>
	</row>
	<row ProcId="181" StudyName="GBD" ProcName="GBD.GetCaseListLegevisitt" ProcDesc="Legevurdering: Til legevisitt" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Sykepleier, Vernepleier, Gruppeleder" MinVersion="19008" HelpText="Rapporten viser alle pasienter som har et skjema av type «Til legevurdering» hvor lege ikke har gitt tilbakemelding, uavhengig av hastegrad. " ChkSum="1520826624" LastUpdate="2019-09-04T12:56:15.200Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListLegevisitt ( @StudyId INT ) AS
BEGIN
    SELECT v.*, cdp1.EnumVal, mia1.OrderNumber, CONCAT( 'Hastegrad: ', ISNULL( mia2.OptionText, '(ubesvart)'), ', Skjemadato: ', FORMAT(cf.CreatedAt, 'dd.MM.yyyy')) AS InfoText
    FROM dbo.ViewActiveCaseListStub v
    JOIN dbo.ClinEvent ce ON ce.PersonId = v.PersonId
    JOIN dbo.ClinForm cf ON cf.EventId = ce.EventId AND cf.DeletedAt IS NULL
    JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId AND mf.FormName = 'GBD_Legevurdering'
    LEFT JOIN dbo.ClinDataPoint cdp1 ON cdp1.EventId = ce.EventId AND cdp1.ItemId = 2533 
    LEFT JOIN dbo.MetaItemAnswer mia1 ON mia1.ItemId = cdp1.ItemId AND mia1.OrderNumber = cdp1.EnumVal
    LEFT JOIN dbo.ClinDataPoint cdp2 ON cdp2.EventId = ce.EventId AND cdp2.ItemId = 2537 
    LEFT JOIN dbo.MetaItemAnswer mia2 ON mia2.ItemId = cdp2.ItemId AND mia2.OrderNumber = cdp2.EnumVal
    WHERE v.StudyId = @StudyId
    AND ISNULL( cdp1.EnumVal, -1 ) IN ( -1, 3 )
    ORDER BY v.PersonId;
END;]]>
	</row>
	<row ProcId="182" StudyName="GBD" ProcName="GBD.GetCaseListSnarligLegevurdering" ProcDesc="Legevurdering: Til snarlig legevurdering" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Sykepleier, Vernepleier, Gruppeleder" MinVersion="19008" HelpText="Rapporten viser alle pasienter som har et skjema av type «Til legevurdering» med hastegrad «Neste gang lege er tilgjengelig ved sykehjemmet» eller høyere hvor lege ikke har gitt tilbakemelding. " ChkSum="-1324503076" LastUpdate="2019-09-05T08:52:57.713Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListSnarligLegevurdering (@StudyId INT) AS
BEGIN
    SELECT v.*, cdp2.EnumVal, cdp1.EnumVal AS HasteGradEnumVal, mia2.OptionText, CONCAT('Hastegrad: ', ISNULL(mia1.OptionText, '(ubesvart)'), ', Skjemadato: ', FORMAT(cf.CreatedAt, 'dd.MM.yyyy')) AS InfoText
    FROM dbo.ViewActiveCaseListStub v
    JOIN dbo.ClinEvent ce ON ce.PersonId = v.PersonId
    JOIN dbo.ClinForm cf ON cf.EventId = ce.EventId AND cf.DeletedAt IS NULL
    JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId AND mf.FormName = 'GBD_Legevurdering'
    JOIN dbo.ClinDataPoint cdp1 ON cdp1.EventId = ce.EventId AND cdp1.ItemId = 2537
    JOIN dbo.MetaItemAnswer mia1 ON mia1.ItemId = cdp1.ItemId AND mia1.OrderNumber = cdp1.EnumVal
    LEFT JOIN dbo.ClinDataPoint cdp2 ON cdp2.EventId = ce.EventId AND cdp2.ItemId = 2533
    LEFT JOIN dbo.MetaItemAnswer mia2 ON mia2.ItemId = cdp2.ItemId AND mia2.OrderNumber = cdp2.EnumVal
    WHERE v.StudyId = @StudyId
    AND ISNULL(cdp2.EnumVal, -1) IN (-1, 3)
    AND cdp1.EnumVal IN (2, 3)
    ORDER BY v.PersonId;
END;]]>
	</row>
	<row ProcId="183" StudyName="GBD" ProcName="GBD.GetCaseListSykehjemslegevakt" ProcDesc="Legevurdering: Legevurdering haster (sykehjemslegevakt)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege" MinVersion="19008" HelpText="Rapporten viser alle pasienter uansett institusjon som har et skjema av type «Til legevurdering» med hastegrad «I løpet av dagen (evt. ved sykehjemslegevakt)» hvor lege ikke har gitt tilbakemelding. " ChkSum="-1054821134" LastUpdate="2019-09-04T12:58:24.497Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListSykehjemslegevakt (@StudyId INT) AS
BEGIN
    SELECT p.PersonId, p.DOB, p.ReverseName AS FullName, p.GenderId, sg.GroupName, ss.StatusText, cdpt2.EnumVal, cdp1.EnumVal, CONCAT('Institusjon: ', sct.CenterName, ', Skjemadato: ', FORMAT(cf.CreatedAt, 'dd.MM.yyyy')) AS InfoText
    FROM dbo.Person p
    JOIN dbo.StudCase sc ON sc.PersonId = p.PersonId AND sc.StudyId = @StudyId
    JOIN dbo.StudyStatus ss ON ss.StudyId = sc.StudyId AND ss.StatusId = sc.FinState AND ss.StatusActive = 1
    JOIN dbo.StudyGroup sg ON sg.StudyId = sc.StudyId AND sg.GroupId = sc.GroupId AND sg.GroupActive = 1
    JOIN dbo.StudyCenter sct ON sct.CenterId = sg.CenterId
    JOIN dbo.ClinEvent ce ON ce.PersonId = p.PersonId AND ce.StudyId = @StudyId
    JOIN dbo.ClinForm cf ON cf.EventId = ce.EventId AND cf.DeletedAt IS NULL
    JOIN dbo.MetaForm mf ON mf.FormName = 'GBD_Legevurdering'
    JOIN dbo.ClinDataPoint cdp1 ON cdp1.EventId = ce.EventId AND cdp1.ItemId = 2537
    JOIN dbo.MetaItemAnswer mia1 ON mia1.ItemId = cdp1.ItemId AND mia1.OrderNumber = cdp1.EnumVal
    LEFT JOIN dbo.ClinDataPoint cdpt2 ON cdpt2.EventId = ce.EventId AND cdpt2.ItemId = 2533
    LEFT JOIN dbo.MetaItemAnswer mia2 ON mia2.ItemId = cdpt2.ItemId AND mia2.OrderNumber = cdpt2.EnumVal
    WHERE ISNULL(cdpt2.EnumVal, -1) IN (-1, 3)
    AND cdp1.EnumVal = 3
    ORDER BY p.PersonId;
END;]]>
	</row>
	<row ProcId="184" StudyName="GBD" ProcName="dbo.GetCaseListGlobalDeceased" ProcDesc="Forskning: Alle døde beboere" ProcParams=":StudyId" ListId="CASE" GrantTo="QuickStat" MinVersion="18000" HelpText="Alle personer som har registrert dødsdato.  Dette oppdateres normalt fra folkeregisteret." ChkSum="1492561728" LastUpdate="2019-12-16T13:30:11.453Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListGlobalDeceased( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId, p.DOB,
    p.ReverseName AS FullName,
    -- CASE p.GenderId WHEN 1 THEN 'Mann, Avidentifisert' WHEN 2 THEN 'Kvinne, Avidentifisert' END AS FullName,  
    p.GenderId, ss.StatusText AS GroupName
  FROM dbo.Person p 
  JOIN dbo.StudCase sc ON sc.PersonId = p.PersonId AND sc.StudyId = @StudyId
  JOIN dbo.StudyStatus ss ON ss.StudyId=sc.StudyId and ss.StatusId = sc.StatusId
  WHERE NOT p.DeceasedDate IS NULL;
END;]]>
	</row>
	<row ProcId="185" StudyName="GBD" ProcName="GBD.GetCaseListA10BK" ProcDesc="Medikamentbruk: SGLT2-hemmere (A10BK)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Gruppeleder" MinVersion="19000" ChkSum="22490846" LastUpdate="2019-08-21T09:57:42.193Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListA10BK ( @StudyId INT) AS
BEGIN
 EXEC dbo.GetCaseListDrug @StudyId,'A10BK%'
END]]>
	</row>
	<row ProcId="186" StudyName="GBD" ProcName="GBD.GetCaseListStratify" ProcDesc="Prosess: Stratify utfylt" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18000" HelpText="Alle aktive pasienter med utfylt Stratify-skjema." CompatibilityLevel="130" ChkSum="-550110912" LastUpdate="2019-08-21T07:58:08.507Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListStratify( @StudyId INT ) AS
BEGIN
  SELECT v.*,
    CONCAT('Status: ', v.StatusText, '. Utfylt: ', CONVERT(VARCHAR, LastSignedStratify.EventTime, 104), '. Stratify-skår ', 
      StratifyScore.EnumVal, ', ', LOWER(StratifyScore.OptionText), '.')
    AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastEnumValuesTable(9257, NULL) StratifyScore ON v.PersonId = StratifyScore.PersonId
  JOIN dbo.GetLastSignedFormList(@StudyId, 'STRATIFY') LastSignedStratify ON LastSignedStratify.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId
  ORDER BY v.FullName;
END
]]>
	</row>
	<row ProcId="187" StudyName="GBD" ProcName="GBD.GetCaseListLongTermNoStratify6Months" ProcDesc="Prosess: Ikke Stratify siste 6 mnd (langtid)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19011" HelpText="Alle langtidspasienter som ikke har utfylt Stratify-skjema siste 6 måneder." ChkSum="1617993240" LastUpdate="2019-08-21T07:59:03.520Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListLongTermNoStratify6Months( @StudyId INT ) AS
BEGIN
  SELECT v.*, LastSignedStratify.EventTime AS StratifyDate,
    'Utfylt: ' + ISNULL(CONVERT(VARCHAR, LastSignedStratify.EventTime, 104), 'Aldri') AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.StudyStatus ss ON v.StudyId = ss.StudyId AND v.StatusId = ss.StatusId 
  LEFT JOIN dbo.GetLastEnumValuesTable(121, NULL) StayType ON v.PersonId = StayType.PersonId
  LEFT JOIN dbo.GetLastSignedFormList (@StudyId, 'STRATIFY') LastSignedStratify ON LastSignedStratify.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND (LastSignedStratify.EventTime IS NULL OR DATEDIFF(DD, LastSignedStratify.EventTime, GETDATE()) > 183 )
    AND (ss.LongTerm = 1 OR (ss.LongTerm IS NULL AND StayType.EnumVal = 5 )) -- sjekk for langtid
  ORDER BY v.FullName;
END
]]>
	</row>
	<row ProcId="188" StudyName="GBD" ProcName="GBD.GetCaseListShortTermNoStratify" ProcDesc="Prosess: Ikke Stratify (korttid)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19011" HelpText="Alle korttidspasienter som ikke har utfylt Stratify-skjema under dette oppholdet." ChkSum="-688146149" LastUpdate="2019-08-21T08:00:06.020Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListShortTermNoStratify( @StudyId INT ) AS
BEGIN
  SELECT v.*, Arrival.DTVal AS GBD_INN, LastSignedStratify.EventTime AS StratifyDate, 'Utfylt: ' + ISNULL(CONVERT(VARCHAR, LastSignedStratify.EventTime, 104), 'Aldri') AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.StudyStatus ss ON v.StatusId = ss.StatusId AND v.StudyId = ss.StudyId
  LEFT JOIN dbo.GetLastEnumValuesTable(121, NULL) StayType ON v.PersonId = StayType.PersonId
  LEFT JOIN dbo.GetLastDateTable(4085, NULL) Arrival ON Arrival.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastSignedFormList(@StudyId, 'STRATIFY') LastSignedStratify ON LastSignedStratify.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND
    (LastSignedStratify.EventTime IS NULL OR Arrival.DTVal > LastSignedStratify.EventTime) -- sjekk om GBD_inn > StratifyDate
    AND (ss.LongTerm = 0 OR (ss.LongTerm IS NULL AND StayType.EnumVal <> 5)) -- sjekk for korttid
  ORDER BY v.FullName;
END
]]>
	</row>
	<row ProcId="189" StudyName="GBD" ProcName="GBD.GetCaseListInnkomstsamtaleLangtid" ProcDesc="Prosess: Innkomstsamtale utfylt (langtid)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19011" HelpText="Alle langtidspasienter med utfylt skjema for innkomstsamtale." ChkSum="-1165060102" LastUpdate="2019-08-22T13:03:55.337Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListInnkomstsamtaleLangtid ( @StudyId INT ) AS
BEGIN
  SELECT v.*, CONCAT('Skjemadato: ', CONVERT(VARCHAR, InnkomstsamtaleLangtid.EventTime, 104)) AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.StudyStatus ss ON v.StudyId = ss.StudyId AND v.StatusId = ss.StatusId 
  JOIN dbo.GetLastSignedFormList(@StudyId, 'GBD_INN_LANGTID') InnkomstsamtaleLangtid on InnkomstsamtaleLangtid.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastEnumValuesTable(121, NULL) StayType ON v.PersonId = StayType.PersonId
  WHERE v.StudyId = @StudyId
    AND (ss.LongTerm = 1 OR (ss.LongTerm IS NULL AND StayType.EnumVal = 5 )) -- sjekk for langtid
  ORDER BY v.FullName;
END]]>
	</row>
	<row ProcId="190" StudyName="GBD" ProcName="GBD.GetCaseListInnkomstsamtaleKorttid" ProcDesc="Prosess: Innkomstsamtale utfylt (korttid)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19011" HelpText="Alle korttidspasienter med utfylt skjema for innkomstsamtale." ChkSum="718294341" LastUpdate="2019-08-22T13:05:03.430Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListInnkomstsamtaleKorttid ( @StudyId INT ) AS
BEGIN
  SELECT v.*, CONCAT('Skjemadato: ', CONVERT(VARCHAR, InnkomstsamtaleKorttid.EventTime, 104)) AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.StudyStatus ss ON v.StudyId = ss.StudyId AND v.StatusId = ss.StatusId 
  JOIN dbo.GetLastSignedFormList(@StudyId, 'GBD_INN_KORTTID') InnkomstsamtaleKorttid on InnkomstsamtaleKorttid.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastEnumValuesTable(121, NULL) StayType ON v.PersonId = StayType.PersonId
  WHERE v.StudyId = @StudyId
    AND (ss.LongTerm = 0 OR (ss.LongTerm IS NULL AND StayType.EnumVal <> 5)) -- sjekk for korttid
  ORDER BY v.FullName;
END
]]>
	</row>
	<row ProcId="191" StudyName="GBD" ProcName="GBD.GetCaseListNoInnkomstsamtaleLangtid" ProcDesc="Prosess: Ikke innkomstsamtale (langtid)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19011" HelpText="Alle langtidspasienter som ikke har utfylt skjema for innkomstsamtale." ChkSum="422938121" LastUpdate="2019-09-05T13:59:20.893Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNoInnkomstsamtaleLangtid ( @StudyId INT ) AS
BEGIN
  SELECT v.*, CONCAT('Status: ', v.StatusText) AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.StudyStatus ss ON v.StudyId = ss.StudyId AND v.StatusId = ss.StatusId 
  LEFT JOIN dbo.GetLastEnumValuesTable(121, NULL) StayType ON v.PersonId = StayType.PersonId
  LEFT JOIN dbo.GetLastSignedFormList(@StudyId, 'GBD_INN_LANGTID') InnkomstsamtaleLangtid on InnkomstsamtaleLangtid.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND InnkomstsamtaleLangtid.EventTime IS NULL
    AND (ss.LongTerm = 1 OR (ss.LongTerm IS NULL AND StayType.EnumVal = 5 )) -- sjekk for langtid
  ORDER BY v.FullName;
END
]]>
	</row>
	<row ProcId="192" StudyName="GBD" ProcName="GBD.GetCaseListKostsamtale" ProcDesc="Prosess: Kostsamtale ved innkomst" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18000" HelpText="Alle aktive pasienter med utfylt skjema for kostsamtale ved innkomst." ChkSum="1977263986" LastUpdate="2019-08-22T13:09:07.947Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListKostsamtale ( @StudyId INT ) AS
BEGIN
  SELECT v.*, CONCAT('Status: ', v.StatusText, '. Skjemadato: ', CONVERT(VARCHAR, Kostsamtale.EventTime, 104)) AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastSignedFormList(@StudyId, 'SAMTALE_KOST') Kostsamtale on Kostsamtale.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId
  ORDER BY v.FullName;
END
]]>
	</row>
	<row ProcId="193" StudyName="GBD" ProcName="GBD.GetCaseListFalltiltak" ProcDesc="Prosess: Høy fallrisiko og tiltaksplan for fallforebygging" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19000" HelpText="Siste tiltaksplan for fallforebygging for pasienter med høy risiko for fall ifølge utfylt skjema «Fallrisiko - Stratify» (skår 2 eller høyere)." ChkSum="-1069299812" LastUpdate="2019-10-03T13:42:34.620Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListFalltiltak ( @StudyId INT ) AS
BEGIN
SELECT v.*, Tiltaksplan.CreatedAt AS TiltaksplanOppretta,
    CONCAT('Stratify-skår ', StratifyScore.EnumVal, '. Tiltaksplan ', ISNULL( CONVERT(VARCHAR, Tiltaksplan.EventTime, 104) + '. ' +
    ISNULL('Evalueres ' + CONVERT(VARCHAR, Evalueringsdato.DTVal, 104) + '.', 'Evalueringsdato ikke utfylt.'), 'aldri utfylt.')) AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastEnumValuesTable(9257, NULL) StratifyScore ON v.PersonId = StratifyScore.PersonId
  LEFT JOIN dbo.GetLastFormTableByName ('GBD_FALL_TILTAK', NULL) Tiltaksplan ON Tiltaksplan.PersonId = v.PersonId
  LEFT JOIN dbo.ClinDataPoint Evalueringsdato ON Evalueringsdato.EventId = Tiltaksplan.EventId AND Evalueringsdato.ItemId = 10168
  WHERE v.StudyId = @StudyId AND StratifyScore.EnumVal >= 2 
  ORDER BY CASE WHEN Tiltaksplan.CreatedAt IS NULL THEN 1 ELSE 0 END, ISNULL(Evalueringsdato.DTVal, Tiltaksplan.CreatedAt); 
END
]]>
	</row>
	<row ProcId="194" StudyName="LANGTID" ProcName="GBD.GetCaseListFalltiltak" ProcDesc="Prosess: Høy fallrisiko og tiltaksplan for fallforebygging" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19000" HelpText="Siste tiltaksplan for fallforebygging for pasienter med høy risiko for fall ifølge utfylt skjema «Fallrisiko - Stratify» (skår 2 eller høyere)." ChkSum="897240470" LastUpdate="2019-09-12T09:12:52.360Z">
		<![CDATA[]]>
	</row>
	<row ProcId="195" StudyName="GBD" ProcName="GBD.GetCaseListNoNEWS230Days" ProcDesc="Prosess: Ikke NEWS2 siste mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19000" HelpText="Alle aktive pasienter som ikke har utfylt NEWS2-skjema siste måned." ChkSum="1541169874" LastUpdate="2019-12-03T08:10:16.903Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListNoNEWS230Days( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListLastForm @StudyId, 'NEWS2', 30;
END]]>
	</row>
	<row ProcId="196" StudyName="GBD" ProcName="GBD.GetCaseListLastNEWS2" ProcDesc="Prosess: Siste NEWS2" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19000" HelpText="Alle aktive pasienter med dato for siste utfylling av NEWS2-skjema." ChkSum="-808670667" LastUpdate="2019-12-03T08:10:11.327Z">
		<![CDATA[CREATE PROCEDURE GBD.GetCaseListLastNEWS2( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListLastForm @StudyId, 'NEWS2';
END]]>
	</row>
	<row ProcId="201" StudyName="NDV.BASE" ProcName="NDV.GetPumpWithHighHbA1c" ProcDesc="Utvalg av Type-1 m/pumpe basert på alder og HbA1c-verdier" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1281890130" LastUpdate="2018-10-03T14:50:45.213Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPumpWithHighHbA1c( @StudyId INT, @AgeMin FLOAT, @AgeMax FLOAT, @HbA1cCutoff FLOAT ) AS
BEGIN
  -- Create temporary table
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,dbo.GetLastLab(PersonId,'HBA1C_MMOL') AS HbA1c INTO #temp
  FROM NDV.Type1InsulinPump p WHERE p.Age >= @AgeMin AND p.Age < @AgeMax;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'HbA1c = ' + SUBSTRING(CONVERT(VARCHAR,HbA1c),1,4) AS InfoText 
  FROM #temp WHERE HbA1c >= @HbA1cCutoff
  ORDER BY HbA1c DESC;
END]]>
	</row>
	<row ProcId="202" StudyName="NDV.BASE" ProcName="NDV.GetType2WithHighBP" ProcDesc="Utvalg av Type-2 etter blodtrykk" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1472451260" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithHighBP( @StudyId INT, @SysBpCutoff FLOAT ) AS
BEGIN
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastQuantity(PersonId,'SYSBP') AS SysBP INTO #temp
  FROM NDV.Type2;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'SysBT = ' + CONVERT(VARCHAR,SysBP) as InfoText 
  FROM #temp WHERE SysBP >= @SysBPCutoff
  ORDER BY SysBP DESC
END]]>
	</row>
	<row ProcId="203" StudyName="NDV.BASE" ProcName="NDV.GetType2WithHighLDL" ProcDesc="Utvalg av Type-2 etter LDL" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-2141518612" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithHighLDL( @StudyId INT, @LDLCutoff FLOAT, @MinAge INT = 18 ) AS
BEGIN
  DECLARE @LastDOB DateTime;
  SET @LastDOB = DATEADD( year, -@MinAge,getdate() )
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastLab(PersonId,'LDL') AS LDL INTO #temp
  FROM NDV.Type2 WHERE DOB <= @LastDOB;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'LDL = ' + CONVERT(VARCHAR,LDL) as InfoText 
  FROM #temp WHERE LDL >= @LDLCutoff
  ORDER BY LDL DESC
END]]>
	</row>
	<row ProcId="204" StudyName="NDV.BASE" ProcName="NDV.GetType1WithHighLDL" ProcDesc="Utvalg av Type-1 etter LDL" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="612304032" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType1WithHighLDL( @StudyId INT, @LDLCutoff FLOAT, @MinAge INT = 18 ) AS
BEGIN
  DECLARE @LastDOB DateTime;
  SET @LastDOB = DATEADD( year, -@MinAge,getdate() )
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastLab(PersonId,'LDL') AS LDL INTO #temp
  FROM NDV.Type1 WHERE DOB <= @LastDOB;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'LDL = ' + CONVERT(VARCHAR,LDL) as InfoText 
  FROM #temp WHERE LDL >= @LDLCutoff
  ORDER BY LDL DESC
END]]>
	</row>
	<row ProcId="205" StudyName="NDV.BASE" ProcName="NDV.GetActiveWIthHighUACR" ProcDesc="Utvalg etter U-ACR verdi" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1631047789" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetActiveWithHighUACR( @StudyId INT, @UACRCutoff FLOAT ) AS
BEGIN
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastLab(PersonId,'UACR') AS UACR INTO #temp
  FROM NDV.AllActive;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'UACR = ' + CONVERT(VARCHAR,UACR) as InfoText 
  FROM #temp WHERE UACR >= @UACRCutoff
  ORDER BY UACR DESC
END

]]>
	</row>
	<row ProcId="206" StudyName="NDV.BASE" ProcName="NDV.GetIncretinUsersWithHighHbA1c" ProcDesc="Utvalg av inkretinbrukere etter HbA1c" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-529283509" LastUpdate="2018-10-03T14:53:41.010Z">
		<![CDATA[CREATE PROCEDURE NDV.GetIncretinUsersWithHighHbA1c( @StudyId INT, @AgeMin FLOAT, @AgeMax FLOAT, @HbA1cCutoff FLOAT ) AS
BEGIN
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastLab(PersonId,'HBA1C_MMOL') AS HbA1c 
  INTO #temp
  FROM NDV.IncretinUsers WHERE ( Age >= @AgeMin ) AND ( Age < @AgeMax );
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'HbA1c = ' + SUBSTRING(CONVERT(VARCHAR,HbA1c),1,4) AS InfoText 
  FROM #temp WHERE HbA1c >= @HbA1cCutoff
  ORDER BY HbA1c DESC;
END]]>
	</row>
	<row ProcId="207" StudyName="NDV.BASE" ProcName="NDV.GetNonPumpWithHighHbA1c" ProcDesc="Utvalg av Type-1 u/pumpe basert på alder og HbA1c-verdier" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-226769231" LastUpdate="2018-10-03T14:54:03.763Z">
		<![CDATA[CREATE PROCEDURE NDV.GetNonPumpWithHighHbA1c( @StudyId INT, @AgeMin FLOAT, @AgeMax FLOAT, @HbA1cCutoff FLOAT ) AS
BEGIN
  -- Create temporary table
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,dbo.GetLastLab(PersonId,'HBA1C_MMOL') AS HbA1c INTO #temp
  FROM NDV.Type1NotInsulinPump p WHERE p.Age >= @AgeMin AND p.Age < @AgeMax;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,'HbA1c = ' + SUBSTRING(CONVERT(VARCHAR,HbA1c),1,4) AS InfoText 
  FROM #temp WHERE HbA1c >= @HbA1cCutoff
  ORDER BY HbA1c DESC;
END]]>
	</row>
	<row ProcId="209" StudyName="*" ProcName="dbo.GetCaseListA10BX" ProcDesc="Medikamentbruk: Andre midler mot diabetes (A10BX)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" ChkSum="-2088497447" LastUpdate="2019-08-21T09:57:42.223Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListA10BX( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'A10BX%'
END]]>
	</row>
	<row ProcId="210" StudyName="*" ProcName="dbo.GetCaseListA10BH" ProcDesc="Medikamentbruk: DPP-4 hemmere (A10BH)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" ChkSum="246512046" LastUpdate="2019-08-21T09:57:42.223Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListA10BH( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListDrug @StudyId,'A10BH%'
END]]>
	</row>
	<row ProcId="211" StudyName="NDV.BASE" ProcName="NDV.GetLongDuration" ProcDesc="Diabetes etter varighet" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1751232111" LastUpdate="2019-01-03T08:59:22.580Z">
		<![CDATA[CREATE PROCEDURE NDV.GetLongDuration( @StudyId INT, @YearCount INT ) AS
BEGIN 

  DECLARE @FirstDob DateTime;
  SET @FirstDob = DATEADD( yyyy, -@YearCount, getdate() );
  SELECT p.PersonId,dbo.GetLastQuantity( p.PersonId, 'NDV_DIAGNOSE_YYYY') AS NDV_DIAGNOSE_YYYY
  INTO #temp1
  FROM Person p JOIN StudCase sc ON sc.PersonId=p.PersonId 
  WHERE ( sc.StudyId=@StudyId ) AND (p.DOB < @FirstDob);
  
  --- Calculate duration
  SELECT PersonId,NDV_DIAGNOSE_YYYY, CONVERT(INT,DATEPART(YYYY,getdate())-t1.NDV_DIAGNOSE_YYYY) AS DiabetesDuration
  INTO #temp2 
  FROM #temp1 t1
  WHERE DATEPART(YYYY,getdate())-NDV_DIAGNOSE_YYYY >= @YearCount;
  
  SELECT v.*, t2.DiabetesDuration,
  'Varighet ' + CONVERT(VARCHAR,t2.DiabetesDuration) + ' år' AS InfoText
  FROM #temp2 t2 JOIN dbo.ViewActiveCaseListStub v ON v.PersonId=t2.PersonId
  WHERE t2.DiabetesDuration >= @YearCount AND v.StudyId=@StudyId
  ORDER BY t2.DiabetesDuration DESC END]]>
	</row>
	<row ProcId="212" StudyName="NDV.BASE" ProcName="NDV.GetPregnantByYear" ProcDesc="Gravide: Utvalg på år" ProcParams=":StudyId,:Year" ListId="CASE" GrantTo="public" ChkSum="222983202" LastUpdate="2015-09-25T07:11:42.220Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPregnantByYear( @StudyId INT, @Year INT )
AS
BEGIN
  SELECT ce.PersonId,COUNT(*) as Antall 
  INTO #temp FROM dbo.ClinEvent ce
  JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId AND cf.DeletedAt IS NULL
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  WHERE mf.FormName = 'DIAPOL_GRAVIDE'
  AND DATEPART(yy,ce.EventTime) = @Year
  GROUP BY ce.PersonId;
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, REPLACE(ISNULL(mia.OptionText, 'Uspesifisert'),'.','') + '; ' + CONVERT(VARCHAR,t.Antall) + ' kontroller ' + CONVERT(VARCHAR,@Year) + '.' AS InfoText
  FROM dbo.ViewCaseListStub v 
  JOIN #temp t ON t.PersonId=v.PersonId
  LEFT JOIN dbo.MetaItemAnswer mia ON mia.ItemId = 3196 AND mia.OrderNumber = dbo.GetLastEnumValInThePast( v.PersonId, 'NDV_TYPE', CONVERT(VARCHAR(10), CAST(@Year+1 as VARCHAR)+'-01-01'))
  WHERE v.StudyId=@StudyId;
END]]>
	</row>
	<row ProcId="213" StudyName="NDV.BASE" ProcName="NDV.GetPregnantByType" ProcDesc="Gravide: Utvalg på type" ProcParams=":StudyId,:DiaType" ListId="CASE" GrantTo="public" MinVersion="6000" ChkSum="-799534398" LastUpdate="2015-04-10T14:32:27.947Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPregnantByType( @StudyId INT, @DiaType INT = NULL ) AS
BEGIN
 SELECT PersonId, DOB, ReverseName AS FullName, GenderId, GroupName, NationalId, EventTime, InfoText =

   CASE DiaType 
     WHEN 1 THEN 'Type 1'
     WHEN 2 THEN 'Type 2'
     WHEN 5 THEN 'Svangerskapsdiabetes'
     ELSE 'Andre typer' 
   END

  FROM (

  SELECT 
    sc.PersonId, p.DOB, p.FullName, p.ReverseName, p.GenderId, p.NationalId, 
    sg.CenterId, sg.GroupId, sg.GroupName, 
    sc.StudyId, sc.FinState,
    cdp.EnumVal AS DiaType, ce.EventTime, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime ) AS OrderNo 
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) 
  JOIN dbo.ClinDatapoint cdp ON cdp.EventId=ce.EventId AND cdp.ItemId=3196
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  JOIN dbo.StudCase sc ON ( sc.StudyId = ce.StudyId ) AND ( sc.PersonId = ce.PersonId ) 
  JOIN dbo.Person p ON ( p.PersonId=sc.PersonId ) 
  JOIN dbo.StudyGroup sg ON ( sg.StudyId = ce.StudyId ) AND ( sg.GroupId = ce.GroupId ) 
  JOIN dbo.UserList my ON ( my.UserId = USER_ID() ) 
  WHERE ( cf.DeletedAt IS NULL )
    AND ( mf.FormName='DIAPOL_GRAVIDE' )
    AND ( sg.CenterId=my.CenterId ) 

    ) a

WHERE a.OrderNo = 1 AND ( ( a.DiaType=@DiaType ) OR ( @DiaType IS NULL ) )
ORDER BY ReverseName
END]]>
	</row>
	<row ProcId="214" StudyName="NDV" ProcName="NDV.GetAnnualControls" ProcDesc="Årskontroller: Årskontroller i valgfri periode" ProcParams=":StudyId, :StartDate,:StopDate" ListId="CASE" GrantTo="public" MinVersion="6000" InfoCaption="Dato for årskontroll" HelpText="Populasjonen viser alle pasienter der det er opprettet et årskontroll-skjema i en gitt periode. Det tas ikke hensyn til graden av utfylling." ChkSum="-52507873" LastUpdate="2019-02-19T10:55:32.533Z">
		<![CDATA[CREATE PROCEDURE NDV.GetAnnualControls( @StudyId INT, @StartDate DateTime, @StopDate DateTime ) AS
BEGIN
  SELECT p.PersonId, p.DOB, p.ReverseName AS FullName, 'Type ' + mia.ShortCode AS GroupName, 'Uansett status' AS StatusText, 
    p.GenderId, p.NationalId, a.DiabetesType, 'Kontroll ' + dbo.LongTime( a.LastVisit ) AS InfoText
  FROM 
  (
    SELECT ce.PersonId, MIN(cdp.EnumVal) AS DiabetesType, MAX(ce.EventTime) AS LastVisit, COUNT(*) AS VisitCount
    FROM dbo.ClinForm cf 
      JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
      JOIN dbo.StudyGroup sg ON sg.StudyId = ce.StudyId and sg.GroupId=ce.GroupId
      JOIN dbo.StudyCenter c ON c.CenterId = sg.CenterId
      JOIN dbo.UserList ul ON ul.UserId=USER_ID() AND ul.CenterId=sg.CenterId
      JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId=3196
      JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
    WHERE ( cf.DeletedAt IS NULL AND mf.FormName = 'DIAPOL_YEAR' ) AND ( ce.EventTime >= @StartDate ) AND ( ce.EventTime < @StopDate )
    GROUP BY ce.PersonId,cdp.EnumVal
  ) a
  JOIN dbo.Person p ON p.PersonId=a.PersonId
  JOIN dbo.MetaItemAnswer mia on mia.ItemId=3196 AND mia.OrderNumber=a.DiabetesType
  ORDER BY a.LastVisit DESC
END]]>
	</row>
	<row ProcId="251" StudyName="NDV" ProcName="dbo.GetCaseListPump" ProcDesc="Behandling: Insulinpumpe" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Alle aktive pasienter som bruker insulinpumpe." ChkSum="170512469" LastUpdate="2019-05-15T12:01:34.777Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListPump( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,dbo.GetLastTextVal( v.PersonId, 'INSPUMP_NAVN') AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  WHERE v.StudyId=@StudyId AND dbo.GetLastEnumVal( v.PersonId, 'NDV_INSULIN_DEVICE') = 2
END]]>
	</row>
	<row ProcId="252" StudyName="NDV" ProcName="NDV.GetPumpAge21To25HbA1cAbove9" ProcDesc="Type 1 m/pumpe: Alder 21-25, HbA1c &gt;= 75 (9%)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1538203066" LastUpdate="2018-10-03T15:20:10.450Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPumpAge21To25Hba1cAbove9( @StudyId INT ) AS
BEGIN 
  EXECUTE NDV.GetPumpWithHighHbA1c @StudyId,21,26,75
END]]>
	</row>
	<row ProcId="253" StudyName="NDV" ProcName="NDV.GetPumpAge26To99HbA1cAbove9" ProcDesc="Type 1 m/pumpe: Alder 26+, HbA1c &gt;= 75 (9%)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="432326290" LastUpdate="2018-10-03T15:20:53.450Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPumpAge26To99Hba1cAbove9( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetPumpWithHighHbA1c @StudyId,26,99,75
END]]>
	</row>
	<row ProcId="254" StudyName="NDV" ProcName="NDV.GetPumpHbA1cAbove7" ProcDesc="Type 1 m/pumpe: HbA1c &gt; 53 (7%)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1034862001" LastUpdate="2018-10-03T15:22:06.260Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPumpHbA1cAbove7( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetPumpWithHighHbA1c @StudyId,0,99,53.1
END]]>
	</row>
	<row ProcId="255" StudyName="NDV" ProcName="NDV.GetNonPumpAge21To25HbA1cAbove9" ProcDesc="Type 1 u/pumpe: Alder 21-25, HbA1c &gt;= 75 (9%)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1980740275" LastUpdate="2018-10-03T15:24:43.460Z">
		<![CDATA[CREATE PROCEDURE NDV.GetNonPumpAge21To25HbA1cAbove9( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetNonPumpWithHighHbA1c @StudyId,21,26,75;
END]]>
	</row>
	<row ProcId="256" StudyName="NDV" ProcName="NDV.GetNonPumpAge26To99HbA1cAbove9" ProcDesc="Type 1 u/pumpe: Alder 26+, HbA1c &gt;= 75 (9%)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1566787472" LastUpdate="2018-10-03T15:24:36.013Z">
		<![CDATA[CREATE PROCEDURE NDV.GetNonPumpAge26To99HbA1cAbove9( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetNonPumpWithHighHbA1c @StudyId,26,99,75;
END]]>
	</row>
	<row ProcId="257" StudyName="NDV" ProcName="NDV.GetNonPumpHbA1cAbove7" ProcDesc="Type 1 u/pumpe: HbA1c &gt; 53 (7%)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="123012614" LastUpdate="2018-10-03T15:23:33.733Z">
		<![CDATA[CREATE PROCEDURE NDV.GetNonPumpHbA1cAbove7( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetNonPumpWithHighHbA1c @StudyId,0,99,53.1
END]]>
	</row>
	<row ProcId="258" StudyName="NDV" ProcName="NDV.GetActiveWithEyecheck" ProcDesc="Prosess: Siste hos øyelege" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="470408971" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetActiveWithEyecheck( @StudyId INT ) AS
BEGIN
  -- Create temporary table
  SELECT PersonId,DOB,FullName,GroupName,dbo.GetLastDTVal(PersonId,'NDV_EYECHECK_DATE') AS NDV_EYECHECK_DATE INTO #temp 
  FROM NDV.AllActive;
  UPDATE #temp SET NDV_EYECHECK_DATE = NULL WHERE NDV_EYECHECK_DATE < DOB;
  -- Read data
  SELECT PersonId,DOB,FullName,GroupName,ISNULL(CONVERT(VARCHAR,NDV_EYECHECK_DATE,104),'Ukjent') as InfoText 
  FROM #temp 
  ORDER BY NDV_EYECHECK_DATE
END
]]>
	</row>
	<row ProcId="259" StudyName="NDV" ProcName="dbo.GetCaseListEventCount" ProcDesc="Prosess: Dokumentasjonsfrekvens" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1071124837" LastUpdate="2019-01-12T07:08:09.690Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListEventCount( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId,p.DOB,p.FullName,
    min(ce.EventTime) as FirstEvent,max(ce.EventTime) as LastEvent, count(*) as EventCount,
    CONVERT(FLOAT,1) as DaysElapsed, CONVERT(FLOAT,1) as EventsPerDay
  INTO #tempList
    FROM dbo.ViewActiveCaseListStub p
    JOIN dbo.ClinEvent ce on ce.PersonId=p.PersonId
  WHERE p.StudyId=@StudyId AND ce.EventTime > getdate()-180
  GROUP BY p.PersonId,p.DOB,p.FullName;
  
  UPDATE #tempList SET DaysElapsed = CONVERT(FLOAT,LastEvent)-CONVERT(FLOAT,FirstEvent)+1.0;
  UPDATE #tempList SET EventsPerDay = CONVERT(FLOAT,EventCount ) / DaysElapsed;
  SELECT vcl.PersonId,vcl.DOB,vcl.FullName,vcl.GroupName,
    'E=' +
    CONVERT(VARCHAR,EventCount) +
    ' D=' +
    CONVERT(VARCHAR,DaysElapsed) +
    ' E/D=' +
    CONVERT(VARCHAR,EventsPerDay) AS InfoText
  FROM #tempList vcl
  WHERE StudyId=@StudyId AND DaysElapsed > 30
  ORDER BY EventsPerDay 
END]]>
	</row>
	<row ProcId="260" StudyName="NDV" ProcName="NDV.GetPumpAge0To21HbA1cAbove9" ProcDesc="Type 1 m/pumpe:Alder &lt; 21, HbA1c &gt;= 75 (9%)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="936658535" LastUpdate="2018-10-03T15:24:28.703Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPumpAge0To21Hba1cAbove9( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetPumpWithHighHbA1c @StudyId,0,21,75;
END]]>
	</row>
	<row ProcId="261" StudyName="NDV" ProcName="NDV.GetNonPumpAge0To21HbA1cAbove9" ProcDesc="Type 1 u/pumpe: Alder &lt; 21, HbA1c &gt;= 75 (9%)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1371894644" LastUpdate="2018-10-03T15:24:23.140Z">
		<![CDATA[CREATE PROCEDURE NDV.GetNonPumpAge0To21HbA1cAbove9( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetNonPumpWithHighHbA1c @StudyId,0,21,75;
END]]>
	</row>
	<row ProcId="262" StudyName="NDV" ProcName="NDV.GetType2WithBPAbove135" ProcDesc="Type 2: Blodtrykk &gt; 135" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1763936317" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithBPAbove135( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetType2WithHighBP @StudyId,135.1
END]]>
	</row>
	<row ProcId="263" StudyName="NDV" ProcName="NDV.GetType2WithLDLAbove35" ProcDesc="Type 2: LDL &gt; 3.5" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="2140899521" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithLDLAbove35( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetType2WithHighLDL @StudyId,3.51
END]]>
	</row>
	<row ProcId="265" StudyName="NDV" ProcName="NDV.GetType2WIthLDLAbove25" ProcDesc="Type 2: LDL &gt; 2.5" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1706100916" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithLDLAbove25( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetType2WithHighLDL @StudyId,2.51
END]]>
	</row>
	<row ProcId="266" StudyName="NDV" ProcName="NDV.GetIncretinUsersWithHba1c" ProcDesc="Inkretinbrukere: Etter fallende HbA1c-verdier" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="219669085" LastUpdate="2018-10-03T16:00:05.190Z">
		<![CDATA[CREATE PROCEDURE NDV.GetIncretinUsersWithHbA1c ( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetIncretinUsersWithHighHbA1c @StudyId,0,99,1;
END]]>
	</row>
	<row ProcId="267" StudyName="NDV" ProcName="NDV.GetActiveWithUACRAbove3" ProcDesc="Komplikasjoner: U-ACR &gt; 3" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="2002490644" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetActiveWithUACRAbove3( @StudyId INT ) AS
BEGIN 
  EXECUTE NDV.GetActiveWithHighUACR @StudyId,3.01
END]]>
	</row>
	<row ProcId="268" StudyName="NDV" ProcName="NDV.GetType2WithLDLAbove35Age40" ProcDesc="Type 2: LDL &gt; 3.5, Alder &gt;= 40" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1080893204" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithLDLAbove35Age40( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetType2WithHighLDL @StudyId,3.51,40
END]]>
	</row>
	<row ProcId="269" StudyName="NDV" ProcName="NDV.GetType1WithLDLAbove35Age40" ProcDesc="Type 1: LDL &gt; 3.5, Alder &gt;= 40" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="21830774" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType1WithLDLAbove35Age40( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetType1WithHighLDL @StudyId,3.51,40
END]]>
	</row>
	<row ProcId="270" StudyName="NDV" ProcName="dbo.GetCaseListHbA1c9Plus" ProcDesc="Behandling: HbA1c &gt; 75 (9%)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1330759298" LastUpdate="2019-01-03T08:59:23.993Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListHbA1c9Plus( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,
    dbo.GetLastValue( v.PersonId, 'HBA1C_MMOL') AS HbA1c,
    dbo.GetLastEnumVal( v.PersonId, 'NDV_TYPE') AS DiaType
  INTO #TempTable 
  FROM dbo.ViewActiveCaseListStub v
  WHERE v.StudyId=@StudyId;
  SELECT PersonId,DOB,FullName,GroupName,
  ISNULL('Type-' +
    SUBSTRING(CONVERT( VARCHAR,DiaType),1,1),'Uspes') + ', HbA1c: ' +
    SUBSTRING(CONVERT(VARCHAR,ROUND(HbA1c,1)),1,4) AS InfoText
  FROM #TempTable WHERE HBA1C >= 75 ORDER BY HbA1c DESC;
END]]>
	</row>
	<row ProcId="271" StudyName="NDV" ProcName="NDV.GetCaseListType2WithCHD" ProcDesc="Studier: Leader, koronarsyke &gt; 50 år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="490" HelpText="Marso SP, et al. &quot;Liraglutide and cardiovascular outcomes in type 2 diabetes&quot;. The New England Journal of Medicine. 2016. 375(4):311-322" ChkSum="-1795621767" LastUpdate="2019-02-19T11:02:38.433Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListType2WithCHD( @StudyId INT ) AS
BEGIN  
  SELECT PersonId,DOB,FullName,GroupName,'Koronarsyk siden ' + 
  ISNULL(SUBSTRING(CONVERT(VARCHAR,dbo.GetLastQuantity( PersonId, 'NDV_CHD_DEBUT' )),1,4),'?') as InfoText 
  FROM NDV.Type2 WHERE ( Age >= 50 ) AND ( dbo.GetLastEnumVal( PersonId, 'NDV_CHD' ) = 1 ) 
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="272" StudyName="NDV" ProcName="NDV.GetType2WithHypertension" ProcDesc="Studier: Leader, hypertensjon &gt; 60 år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="490" HelpText="Marso SP, et al. &quot;Liraglutide and cardiovascular outcomes in type 2 diabetes&quot;. The New England Journal of Medicine. 2016. 375(4):311-322" ChkSum="-1065039510" LastUpdate="2019-02-19T11:02:43.957Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithHypertension( @StudyId INT, @MinAge FLOAT = 60.0 ) AS
BEGIN
  SELECT *,
    CONVERT( INT, dbo.GetLastQuantity( PersonId,'SYSBP')) AS SYSBP,
    CONVERT( INT,dbo.GetLastQuantity( PersonId,'DIABP')) AS DIABP,
    CONVERT( INT, dbo.GetLastQuantity( PersonId,'NDV_BPDRUGS')) AS BPDRUGS 
  INTO #temp
  FROM NDV.Type2  
  WHERE Age > @MinAge;
  SELECT PersonId,DOB,FullName,GroupName, 
    'Siste BT ' + ISNULL(CONVERT(VARCHAR,SYSBP),'?') + '/' + ISNULL(CONVERT(VARCHAR,DIABP),'?') +', bruker ' + ISNULL(CONVERT(VARCHAR,BPDRUGS),'?') + ' preparater.' as InfoText
  FROM #temp WHERE ( SYSBP > 140 ) OR ( BPDRUGS > 1 ) ORDER BY FullName;
END

]]>
	</row>
	<row ProcId="273" StudyName="NDV" ProcName="NDV.GetCaseListNoForm15Months" ProcDesc="Prosess: Aktive uten skjema siste 15 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1760825328" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListNoForm15Months ( @StudyId INT ) AS
BEGIN 
  EXEC GetCaseListNoRecentForm @StudyId,456;
END]]>
	</row>
	<row ProcId="274" StudyName="NDV" ProcName="NDV.GetType1WithHbA1c" ProcDesc="Type 1: Sortert etter fallende HbA1c" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6320" ChkSum="1500546894" LastUpdate="2018-10-03T16:01:02.380Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType1WithHbA1c( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,
    COALESCE(ld.LabName + ' = ' + CONVERT(VARCHAR,ld.NumResult ) +' (' +
    CONVERT(VARCHAR,DATEPART(YYYY,ld.LabDate)) + ')','(ikke målt)') AS InfoText
  FROM NDV.Type1 p
  LEFT JOIN dbo.GetLastLabDataTable( 1058, '3000-01-01' ) ld ON ld.PersonId= p.PersonId
  ORDER BY ISNULL(ld.NumResult,999) DESC
END]]>
	</row>
	<row ProcId="275" StudyName="NDV" ProcName="NDV.GetType2WithHbA1c" ProcDesc="Type 2: Sortert etter fallende HbA1c" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6320" ChkSum="502449772" LastUpdate="2018-10-03T16:01:38.177Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithHbA1c( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,
    COALESCE(ld.LabName + ' = ' + CONVERT(VARCHAR,ld.NumResult ) +' (' +
    CONVERT(VARCHAR,DATEPART(YYYY,ld.LabDate)) + ')','(ikke målt)') AS InfoText
  FROM NDV.Type2 p
  LEFT JOIN dbo.GetLastLabDataTable( 1058, '3000-01-01' ) ld ON ld.PersonId= p.PersonId
  ORDER BY ISNULL(ld.NumResult,999) DESC
END]]>
	</row>
	<row ProcId="276" StudyName="NDV" ProcName="NDV.GetCaseListNoForm24Months" ProcDesc="Prosess: Aktive uten skjema siste 24 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1490685986" LastUpdate="2013-01-22T12:27:10.913Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListNoForm24Months ( @StudyId INT ) AS
BEGIN 
  EXEC GetCaseListNoRecentForm @StudyId,730;
END]]>
	</row>
	<row ProcId="277" StudyName="NDV" ProcName="NDV.TorClaudiLadaHunt" ProcDesc="Bodø: Mulig LADA 30-75" ProcParams=":StudyId" ListId="CASE" GrantTo="public" InfoCaption="Bodø LADA" HelpText="Lokalt uttrekk laget for å søke etter LADA pasienter." ChkSum="-329607080" LastUpdate="2019-01-03T08:59:25.687Z">
		<![CDATA[CREATE PROCEDURE NDV.TorClaudiLadaHunt( @StudyId INT )  AS
BEGIN
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,'Mulig LADA?' as InfoText,
  p.GenderId,
  DateDiff(yy,v.DOB,getdate()) as AgeNow,
  CONVERT( INT, ISNULL(dbo.GetLastQuantity( v.PersonId,'NDV_DIAGNOSE_YYYY'),9999)) as NDV_DIAGNOSE_YYYY,
  ISNULL(dbo.GetLastEnumVal( v.PersonId,'NDV_ANTIBODY' ),9) as NDV_ANTIBODY 
  FROM dbo.ViewActiveCaseListStub v 
  JOIN dbo.Person p on p.PersonId =v.PersonId
  WHERE v.StudyId=@StudyId 
  AND DateDiff( yy, v.DOB, getdate()) >= 30 
  AND DateDiff( yy, v.DOB, getdate()) <= 75
  AND ISNULL(dbo.GetLastQuantity( v.PersonId,'NDV_DIAGNOSE_YYYY'),9999) >= 2009
  AND ISNULL(dbo.GetLastEnumVal( v.PersonId,'NDV_ANTIBODY' ),9) = 1
END]]>
	</row>
	<row ProcId="278" StudyName="NDV" ProcName="NDV.GetLongDuration10" ProcDesc="Varighet: Over 10 år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1205954841" LastUpdate="2013-03-20T11:04:04.617Z">
		<![CDATA[CREATE PROCEDURE NDV.GetLongDuration10( @StudyId INT ) AS
BEGIN
  EXEC NDV.GetLongDuration @StudyId,10                
END]]>
	</row>
	<row ProcId="279" StudyName="NDV" ProcName="NDV.GetLongDuration20" ProcDesc="Varighet: Over 20 år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1205970841" LastUpdate="2013-03-20T11:03:31.223Z">
		<![CDATA[CREATE PROCEDURE NDV.GetLongDuration20( @StudyId INT ) AS
BEGIN
  EXEC NDV.GetLongDuration @StudyId,20                
END]]>
	</row>
	<row ProcId="280" StudyName="NDV" ProcName="NDV.GetLongDuration30" ProcDesc="Varighet: Over 30 år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1206105049" LastUpdate="2013-03-20T11:05:00.430Z">
		<![CDATA[CREATE PROCEDURE NDV.GetLongDuration30( @StudyId INT ) AS
BEGIN
  EXEC NDV.GetLongDuration @StudyId,30                
END]]>
	</row>
	<row ProcId="281" StudyName="NDV" ProcName="NDV.GetLongDuration40" ProcDesc="Varighet: Over 40 år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1206067801" LastUpdate="2013-03-20T11:05:01.553Z">
		<![CDATA[CREATE PROCEDURE NDV.GetLongDuration40( @StudyId INT ) AS
BEGIN
  EXEC NDV.GetLongDuration @StudyId,40                
END]]>
	</row>
	<row ProcId="282" StudyName="NDV" ProcName="NDV.GetCaseListNoDuration" ProcDesc="Varighet: Ikke registrert" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="262974284" LastUpdate="2019-01-03T08:59:26.577Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListNoDuration( @StudyId INT ) AS
BEGIN
  SELECT *,'Varighet mangler' AS InfoText
  FROM dbo.ViewActiveCaseListStub 
  WHERE ( StudyId=@StudyId ) AND ( dbo.GetLastQuantity( PersonId,'NDV_DIAGNOSE_YYYY')  IS NULL )
  ORDER BY FullName                                                                            
END]]>
	</row>
	<row ProcId="284" StudyName="NDV" ProcName="NDV.GetGravide" ProcDesc="Gravide: Minst en svangerskapskontroll" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6302" ChkSum="-299330005" LastUpdate="2016-02-14T11:01:55.537Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravide( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  SELECT ce.PersonId,COUNT(*) AS Antall,CONVERT(DATE,MAX(ce.EventTime)) AS SisteDato
  INTO #temp1 FROM dbo.ClinEvent ce
  JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId AND DeletedAt IS NULL
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  WHERE mf.FormName = 'DIAPOL_GRAVIDE'
  GROUP BY ce.PersonId;
  -- Get type
  SELECT t1.PersonId,DiaType = 
    CASE dbo.GetLastEnumVal(t1.PersonId,'NDV_TYPE') 
      WHEN 1 THEN 'Type 1'
      WHEN 2 THEN 'Type 2'
      WHEN 5 THEN 'Svskap'
      ELSE 'Andre' 
     END
  INTO #temp2 FROM #temp1 t1;
  -- Get result set  
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,
    DiaType + '. Ktr=' + CONVERT(VARCHAR,t1.Antall) + ', sist ' + CONVERT(VARCHAR,t1.SisteDato,104) + '.' AS InfoText
  FROM dbo.ViewFullCaseListStub v 
  JOIN #temp1 t1 ON t1.PersonId=v.PersonId
  JOIN #temp2 t2 ON t2.PersonId=v.PersonId
  WHERE v.StudyId=@StudyId;
END
]]>
	</row>
	<row ProcId="285" StudyName="NDV" ProcName="NDV.GetYoungRecentlyDiagnosedType1" ProcDesc="Studier: Unge (18-25 år) type 1, nye etter 01.01.2012" ProcParams=":StudyId" ListId="CASE" GrantTo="public" HelpText="Prosjekt i Stavanger" ChkSum="1303515179" LastUpdate="2016-08-18T13:04:19.147Z">
		<![CDATA[CREATE PROCEDURE NDV.GetYoungRecentlyDiagnosedType1( @StudyId INT ) AS
BEGIN
  select sc.PersonId,
  dbo.GetLastQuantity( sc.PersonId,'NDV_DIAGNOSE_YYYY') AS NDV_DIAGNOSE_YYYY,
  dbo.GetLastEnumVal( sc.PersonId,'NDV_TYPE') AS NDV_TYPE
  INTO #temp
  FROM dbo.StudCase sc
  JOIN dbo.Person p ON p.PersonId=sc.PersonId 
  WHERE ( p.DOB >= '1988-01-01' ) AND ( p.DOB < DATEADD(yy,-18,getdate() ) )
  AND sc.StudyId=@StudyId;
  DELETE FROM #temp 
  WHERE PersonId IN ( SELECT DISTINCT PersonId FROM dbo.ClinEvent WHERE EventTime < '2012-01-01' )
  OR ( NDV_DIAGNOSE_YYYY < 2012 ) OR ( NDV_TYPE <> 1 )
  SELECT p.PersonId,p.DOB,p.ReverseName as FullName,'Alle grupper' as GroupName,
  'Diagnoseår: ' + ISNULL(CONVERT(VARCHAR,CONVERT(INT,NDV_DIAGNOSE_YYYY)),'Uoppgitt') AS InfoText FROM #temp t
  JOIN dbo.Person p ON p.PersonId=t.PersonId
  ORDER BY DOB
END]]>
	</row>
	<row ProcId="286" StudyName="NDV" ProcName="NDV.GetGravide2012" ProcDesc="Gravide: Kontroller i 2012" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1248304232" LastUpdate="2013-09-27T10:40:31.467Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravide2012(  @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByYear @StudyId,2012
END]]>
	</row>
	<row ProcId="287" StudyName="NDV" ProcName="NDV.GetGravide2013" ProcDesc="Gravide: Kontroller i 2013" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1462128451" LastUpdate="2013-09-27T10:40:38.500Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravide2013(  @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByYear @StudyId,2013
END]]>
	</row>
	<row ProcId="288" StudyName="NDV" ProcName="NDV.GetCaseListConsentUnknown" ProcDesc="Samtykke: Ukjent eller ubesvart" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1633289378" LastUpdate="2019-01-12T07:34:14.513Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListConsentUnknown( @StudyId INT )
AS
BEGIN
  -- TODO: Kan forbedres med GetLastEnumValTable
  -- Finn diabetikere uansett StudyId
  SELECT DISTINCT ce.PersonId 
  INTO #t1 
  FROM dbo.ClinEvent ce
  JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId = 3196 AND cdp.EnumVal > 0;
  -- Finn samtykkestatus
  SELECT t1.PersonId,ISNULL( dbo.GetLastEnumVal( t1.PersonId, 'NDV_CONSENT' ), -1 ) AS NDV_CONSENT
  INTO #t2
  FROM #t1 t1;
  -- Lag resultatsett
  SELECT t2.PersonId, v.DOB, v.FullName, v.GroupName,
    CASE NDV_CONSENT 
      WHEN -1 THEN 'NDV Samtykke ubesvart' 
      WHEN 4 THEN 'NDV Samtykke ukjent' 
    END AS InfoText
  FROM dbo.ViewActiveCaseListStub v 
  JOIN #t2 t2 ON t2.PersonId = v.PersonId AND v.StudyId = @StudyId
  WHERE NDV_CONSENT IN (-1,4);
END]]>
	</row>
	<row ProcId="289" StudyName="ENDO" ProcName="NDV.GetCaseListConsentUnknown" ProcDesc="Samtykke NDV: Ukjent eller ubesvart" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="446424685" LastUpdate="2014-11-06T07:29:35.067Z">
		<![CDATA[]]>
	</row>
	<row ProcId="290" StudyName="NDV" ProcName="NDV.GetCaseListCGMTraining" ProcDesc="CGM: Opplæring siste år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" ChkSum="1847412039" LastUpdate="2015-11-05T07:38:09.160Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListCGMTraining( @StudyId INT )
AS
BEGIN
  SELECT p.PersonId,p.DOB,p.ReverseName AS FullName,sg.GroupName,p.GenderId,p.NationalId,
    'CGM opplæring ' + CONVERT(VARCHAR,MIN(dp.DTVal),104 ) + ' (' + CONVERT(VARCHAR,COUNT(DISTINCT dp.DTVal)) + 'x)' as InfoText
  FROM dbo.ClinDatapoint dp 
  JOIN dbo.ClinEvent ce ON ce.EventId = dp.EventId
  JOIN dbo.StudCase sc ON sc.StudyId=ce.StudyId AND sc.PersonId=ce.PersonId
  JOIN dbo.StudyGroup sg ON sg.StudyId=ce.StudyId AND sg.GroupId = ISNULL(ce.GroupId,sc.GroupId)
  JOIN dbo.Person p ON p.PersonId=ce.PersonId
  JOIN dbo.UserList ul ON ul.CenterId=sg.CenterId AND ul.UserId=USER_ID() 
  WHERE dp.ItemId = 9513 AND dp.DtVal > getdate()-365 AND sg.GroupActive = 1
  GROUP BY p.PersonId,p.DOB,p.ReverseName,p.GenderId,p.NationalId,sg.GroupName
  ORDER BY p.ReverseName 
END]]>
	</row>
	<row ProcId="291" StudyName="ENDO" ProcName="NDV.GetCaseListCGMTraining" ProcDesc="CGM: Opplæring siste år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" ChkSum="-953891006" LastUpdate="2015-11-05T07:38:09.800Z">
		<![CDATA[]]>
	</row>
	<row ProcId="292" StudyName="NDV" ProcName="NDV.GetCaseListConsentNegative" ProcDesc="Samtykke: Nei / Trukket" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1913090222" LastUpdate="2019-01-12T07:35:31.987Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListConsentNegative( @StudyId INT )
AS
BEGIN
  -- Finn diabetikere uansett StudyId
  SELECT DISTINCT ce.PersonId 
  INTO #t1 
  FROM dbo.ClinEvent ce
  JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId = 3196 AND cdp.EnumVal > 0;
  -- Finn samtykkestatus
  SELECT t1.PersonId,ISNULL(dbo.GetLastEnumVal(t1.PersonId,'NDV_CONSENT'),-1) AS NDV_CONSENT
  INTO #t2
  FROM #t1 t1;
  -- Lag resultatsett
  SELECT t2.PersonId, v.DOB, v.FullName, v.GroupName,
    CASE NDV_CONSENT 
      WHEN 2 THEN 'NDV Ikke samtykke' 
      WHEN 3 THEN 'NDV Trukket samtykke' 
    END AS InfoText
  FROM dbo.ViewActiveCaseListStub v 
  JOIN #t2 t2 ON t2.PersonId = v.PersonId AND v.StudyId=@StudyId
  WHERE NDV_CONSENT IN (2,3);
END]]>
	</row>
	<row ProcId="293" StudyName="ENDO" ProcName="NDV.GetCaseListConsentNegative" ProcDesc="Samtykke NDV: Nei / Trukket" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="696359776" LastUpdate="2014-11-06T07:29:25.630Z">
		<![CDATA[]]>
	</row>
	<row ProcId="294" StudyName="NDV*" ProcName="NDV.GetCaseListUserVsConsent" ProcDesc="Samtykke: Positive per behandler siste x dager" ProcParams=":StudyId, :DayCount" ListId="CASE" GrantTo="Leder" MinVersion="6000" ChkSum="1285571035" LastUpdate="2018-06-07T08:34:59.203Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListUserVsConsent( @StudyId INT, @DayCount INT ) AS
BEGIN
	SELECT p.PersonId, p.DOB, p.FullName, p.GenderId, c.CenterName AS GroupName, Rapport.*, 100.0 * Ja / Total AS JaProsent,
		'Ja = ' + CONVERT(VARCHAR, CONVERT(DECIMAL(3, 0), 100.0 * Ja / Total)) + '%, n = ' + CONVERT(VARCHAR, Total) AS InfoText
	FROM (SELECT
			*,
			src.Ja + src.Nei + src.Trukket + src.Ukjent + src.Mangler AS Total
		FROM (SELECT
				CreatedBy,
				[1] AS Ja,
				[2] AS Nei,
				[3] AS Trukket,
				[4] AS Ukjent,
				[-1] AS Mangler
			FROM (SELECT
					Consent,
					CreatedBy
				FROM (SELECT
						diat.PersonId,
						diat.EnumVal AS DiaType,
						ISNULL(cons.EnumVal, -1) AS Consent,
						LastVisit.CreatedBy
					FROM dbo.GetLastEnumValuesTable(3196, '2100-01-01') diat
					LEFT JOIN dbo.GetLastEnumValuesTable(3389, '2100-01-01') cons
						ON diat.PersonId = cons.PersonId
					JOIN (SELECT
							PersonId,
							CreatedBy,
							RANK() OVER (PARTITION BY PersonId ORDER BY CreatedAt DESC) AS ReverseOrder
						FROM dbo.ClinEvent
						WHERE CreatedAt > GETDATE() - @DayCount ) LastVisit
						ON LastVisit.ReverseOrder = 1
						AND LastVisit.PersonId = diat.PersonId AND diat.EnumVal IN (1,2)) v) br
			PIVOT
			(
			COUNT(Consent)
			FOR Consent IN ([-1], [1], [2], [3], [4])
			) piv) src) Rapport
	JOIN dbo.UserList ul ON ul.UserId = Rapport.CreatedBy
	JOIN dbo.Person p ON p.PersonId = ul.PersonId
	JOIN dbo.StudyCenter c ON c.CenterId = ul.CenterId
	WHERE Total >= 10
	ORDER BY JaProsent DESC
END]]>
	</row>
	<row ProcId="295" StudyName="NDV" ProcName="NDV.GetGravide2014" ProcDesc="Gravide: Kontroller i 2014" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1353070269" LastUpdate="2015-03-31T13:43:09.447Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravide2014(  @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByYear @StudyId,2014
END]]>
	</row>
	<row ProcId="296" StudyName="NDV" ProcName="NDV.GetGravide2015" ProcDesc="Gravide: Kontroller i 2015" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1546059183" LastUpdate="2015-03-31T13:43:23.200Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravide2015(  @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByYear @StudyId,2015
END]]>
	</row>
	<row ProcId="297" StudyName="NDV" ProcName="NDV.GetGravideType1" ProcDesc="Gravide: Type 1 før svangerskap" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" ChkSum="1521181409" LastUpdate="2015-04-09T11:10:16.570Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravideType1 ( @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByType @StudyId, 1
END
]]>
	</row>
	<row ProcId="298" StudyName="NDV" ProcName="NDV.GetGravideType2" ProcDesc="Gravide: Type 2 før svangerskap" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" ChkSum="1521218161" LastUpdate="2015-04-09T11:10:18.320Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravideType2 ( @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByType @StudyId, 2
END
]]>
	</row>
	<row ProcId="299" StudyName="NDV" ProcName="NDV.GetGravideType5" ProcDesc="Gravide: Svangerskapsdiabetes" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" ChkSum="-1460548202" LastUpdate="2015-04-09T11:10:19.790Z">
		<![CDATA[CREATE PROCEDURE NDV.GetGravideType5 ( @StudyId INT )
AS
BEGIN
  EXEC NDV.GetPregnantByType @StudyId, 5
END
]]>
	</row>
	<row ProcId="300" StudyName="NDV" ProcName="NDV.GetCaseListCGM" ProcDesc="CGM: Aktive CGM brukere" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6310" HelpText="Pasienter som bruker CGM (basert på variabel 10288), inkludert hvilket apparat som er utdelt (variable 10296)." ChkSum="2094753027" LastUpdate="2019-05-03T12:47:54.443Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListCGM( @StudyId INT ) AS 
BEGIN   
  SELECT p.PersonId, p.DOB, p.FullName, p.GenderId,     
    diatype.OptionText AS GroupName, 
    cgm.OptionText + ': ' + ISNULL(cgmtype.OptionText, '(ukjent apparat)' )  AS InfoText   
  FROM dbo.ViewActiveCaseListStub p   
  JOIN dbo.GetLastEnumValuesTable( 3196, NULL ) diatype ON diatype.PersonId = p.PersonId     
  JOIN dbo.GetLastEnumValuesTable( 10288, NULL ) cgm ON cgm.PersonId = p.PersonId   
  LEFT JOIN dbo.GetLastEnumValuesTable( 10296, NULL ) cgmtype ON cgmtype.PersonId = p.PersonId     
  WHERE cgm.EnumVal IN (1, 2) AND p.StudyId = @StudyId   
  ORDER BY FullName;
END  ]]>
	</row>
	<row ProcId="301" StudyName="NDV" ProcName="NDV.GetPumpAll" ProcDesc="Type 1 m/pumpe: Alle etter fallende HbA1c" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="521" ChkSum="-98983438" LastUpdate="2018-10-03T15:35:19.137Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPumpAll( @StudyId INT ) AS 
BEGIN
  EXECUTE NDV.GetPumpWithHighHbA1c @StudyId,0,99,1;
END]]>
	</row>
	<row ProcId="306" StudyName="NDV" ProcName="NDV.GetAnnualControlMissing" ProcDesc="Årskontroller: Aktive uten årskontroll siste 15 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" InfoCaption="Diabetes type" ChkSum="-535103170" LastUpdate="2019-01-03T08:59:31.920Z">
		<![CDATA[CREATE PROCEDURE NDV.GetAnnualControlMissing(@StudyId INT)
AS
  BEGIN
    SET NOCOUNT ON;

    DECLARE @CutoffDate DateTime;
    SET @CutoffDate = DATEADD( MM, -15, GETDATE() );

    -- First get latest diabetes type
    SELECT a.PersonId,a.DiabetesType
    INTO   #DiaType
    FROM   (SELECT ce.PersonId,cdp.EnumVal AS DiabetesType,
              RANK() OVER ( PARTITION BY ce.PersonId ORDER BY ce.EventTime DESC ) AS OrderNo
              FROM   dbo.ClinEvent ce
              JOIN   dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId
            WHERE  cdp.ItemId = 3196) a
    WHERE  a.OrderNo = 1;

    -- Now get the list of patients
    SELECT v.PersonId,v.DOB,v.FullName,v.GroupName,v.GenderId,p.NationalId, 'Type ' + mia.ShortCode AS InfoText
    FROM   (SELECT PersonId
              FROM   dbo.ViewActiveCaseListStub v
              WHERE  StudyId = @StudyId
            EXCEPT
              SELECT ce.PersonId
                FROM dbo.ClinEvent ce
                JOIN dbo.ClinForm cf ON cf.EventId = ce.EventId
                JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId AND mf.FormName = 'DIAPOL_YEAR'
              WHERE  ( cf.DeletedAt IS NULL ) AND ( ce.EventTime > @CutoffDate )) a
    JOIN   dbo.ViewActiveCaseListStub v
      ON v.PersonId = a.PersonId AND v.StudyId = @StudyId
    JOIN   dbo.Person p
      ON p.PersonId = v.PersonId
    JOIN   #DiaType dt
      ON dt.PersonId = v.PersonId
	JOIN dbo.MetaItemAnswer mia ON mia.ItemId=3196 AND mia.OrderNumber=dt.DiabetesType
  END]]>
	</row>
	<row ProcId="307" StudyName="NDV" ProcName="NDV.GetType1WithoutConsent" ProcDesc="Samtykke: Aktive m/Type 1, ukjent/ubesvart samtykke" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6310" InfoCaption="Samtykkestatus" ChkSum="-759978561" LastUpdate="2019-01-03T08:59:32.743Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType1WithoutConsent( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  SELECT v.*,'Ukjent/ubesvart samtykke' AS InfoText
  FROM dbo.GetLastEnumValuesTable( 3196, NULL ) DiaType 
  LEFT JOIN dbo.GetLastEnumValuesTable( 3389, NULL ) Samtykke ON Samtykke.PersonId = DiaType.PersonId
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = DiaType.PersonId AND v.StudyId=@StudyId
  WHERE ( DiaType.EnumVal = 1 ) AND ( NOT ISNULL(Samtykke.EnumVal,-1) IN (1,2,3) )
END]]>
	</row>
	<row ProcId="308" StudyName="NDV" ProcName="NDV.GetType2WithoutConsent" ProcDesc="Samtykke: Aktive m/Type 2, ukjent/ubesvart samtykke" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6310" InfoCaption="Samtykkestatus" ChkSum="-1095408193" LastUpdate="2019-01-03T08:59:33.577Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType2WithoutConsent( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  SELECT v.*,'Ukjent/ubesvart samtykke' AS InfoText
  FROM dbo.GetLastEnumValuesTable( 3196, NULL ) DiaType 
  LEFT JOIN dbo.GetLastEnumValuesTable( 3389, NULL ) Samtykke ON Samtykke.PersonId = DiaType.PersonId
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = DiaType.PersonId AND v.StudyId=@StudyId
  WHERE ( DiaType.EnumVal = 2 ) AND ( NOT ISNULL(Samtykke.EnumVal,-1) IN (1,2,3) )
END]]>
	</row>
	<row ProcId="309" StudyName="NDV" ProcName="NDV.GetType5WithoutConsent" ProcDesc="Samtykke: Aktive m/Sv.sk.sdiabetes, ukjent/ubesvart samtykke" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6310" InfoCaption="Samtykkestatus" ChkSum="-1263320898" LastUpdate="2019-01-03T08:59:34.417Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType5WithoutConsent( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  SELECT v.*,'Ukjent/ubesvart samtykke' AS InfoText
  FROM dbo.GetLastEnumValuesTable( 3196, NULL ) DiaType 
  LEFT JOIN dbo.GetLastEnumValuesTable( 3389, NULL ) Samtykke ON Samtykke.PersonId = DiaType.PersonId
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = DiaType.PersonId AND v.StudyId=@StudyId
  WHERE ( DiaType.EnumVal = 5 ) AND ( NOT ISNULL(Samtykke.EnumVal,-1) IN (1,2,3) )
END]]>
	</row>
	<row ProcId="310" StudyName="NDV" ProcName="NDV.GetType34WithoutConsent" ProcDesc="Samtykke: Aktive m/Andre typer, ukjent ubesvart samtykke" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6310" InfoCaption="Samtykkestatu" ChkSum="570525297" LastUpdate="2019-01-03T08:59:35.217Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType34WithoutConsent( @StudyId INT ) AS
BEGIN
  SET NOCOUNT ON;
  SELECT v.*,'Ukjent/ubesvart samtykke' AS InfoText
  FROM dbo.GetLastEnumValues( 3196, NULL ) DiaType 
  LEFT JOIN dbo.GetLastEnumValuesTable( 3389, NULL ) Samtykke ON Samtykke.PersonId = DiaType.PersonId
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = DiaType.PersonId AND v.StudyId=@StudyId
  WHERE ( DiaType.EnumVal IN (3,4) ) AND ( NOT ISNULL(Samtykke.EnumVal,-1) IN (1,2,3) )
END]]>
	</row>
	<row ProcId="311" StudyName="NDV" ProcName="NDV.GetYoungDiabetics" ProcDesc="Studier: Unge diabetikere" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6310" InfoCaption="Første konsultasjon" ChkSum="1044630357" LastUpdate="2019-01-23T07:38:51.033Z">
		<![CDATA[CREATE PROCEDURE NDV.GetYoungDiabetics( @StudyId INT ) AS
BEGIN
  SELECT a.*, a.StudyName + ': '+ CONVERT( VARCHAR,a.FirstDate,104) + ' (' + CONVERT(VARCHAR,a.Alder) + ' år)'  AS InfoText
  FROM (
    SELECT p.PersonId,p.DOB,p.FullName,dt.OptionText AS GroupName,p.GenderId,p.NationalId,
      DATEDIFF(YYYY,p.DOB,sc.CreatedAt ) AS Alder, sc.CreatedAt AS FirstDate, s.StudyName,
      RANK() OVER( PARTITION BY p.PersonId ORDER BY sc.CreatedAt ) AS EntryOrder
    FROM dbo.Person p
      JOIN dbo.StudCase sc ON sc.PersonId = p.PersonId
      JOIN dbo.Study s ON s.StudyId=sc.StudyId
      JOIN dbo.GetLastEnumValuesTable( 3196, NULL ) dt ON dt.PersonId = p.PersonId 
    WHERE DATEDIFF(YYYY,p.DOB,sc.CreatedAt) BETWEEN 15 AND 20
  AND s.StudName IN ( 'NDV','ENDO' )
  ) a
  WHERE a.EntryOrder = 1
  ORDER BY Alder
END]]>
	</row>
	<row ProcId="312" StudyName="ENDO" ProcName="NDV.GetYoungDiabetics" ProcDesc="Studier: Unge diabetikere" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6302" InfoCaption="Første konsultajson" ChkSum="1153567350" LastUpdate="2019-01-23T07:38:54.220Z">
		<![CDATA[]]>
	</row>
	<row ProcId="315" StudyName="NDV" ProcName="NDV.GetCaseListHbA1cProject2017" ProcDesc="Prosjekter: HbA1c prosjekt 2017" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6401" ChkSum="1621044176" LastUpdate="2018-10-03T16:02:32.593Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListHbA1cProject2017 (@StudyId INT) AS
BEGIN
  SET LANGUAGE Norwegian;
  
  -- Get latest labdata from forms
  EXEC NDV.MergeHba1cToLabdata;

  SELECT rp.PersonId,
    p.DOB, p.ReverseName AS FullName, ISNULL(ss.StatusText, '(ukjent)') AS GroupName, p.NationalId, p.GenderId,
    ld.NumResult AS HbA1c, ld.LabDate,
    CASE
      WHEN ld.NumResult IS NOT NULL THEN 'HbA1c = ' + CONVERT(VARCHAR, ld.NumResult) + ', tatt ' + CONVERT(VARCHAR, ld.LabDate, 104)
      ELSE 'HbA1c ikke målt'
    END AS InfoText
  FROM NDV.GetRecentPatientsTable(1, '2017-01-01', 15) rp
  LEFT JOIN dbo.GetLastLabDataTable( 1058, '3000-01-01') ld ON ld.PersonId = rp.PersonId
  JOIN dbo.Person p ON p.PersonId = rp.PersonId
  JOIN dbo.Study s ON s.StudyName = 'NDV'
  LEFT JOIN dbo.StudCase sc ON sc.StudyId = s.StudyId AND sc.PersonId = p.PersonId
  LEFT JOIN dbo.StudyStatus ss ON ss.StudyId = sc.StudyId AND ss.StatusId = sc.FinState
  ORDER BY ld.NumResult DESC, p.ReverseName;
END]]>
	</row>
	<row ProcId="316" StudyName="ENDO" ProcName="NDV.GetCaseListHbA1cProject2017" ProcDesc="Prosjekter: HbA1c prosjekt 2017" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6401" ChkSum="-1461251566" LastUpdate="2017-05-26T09:40:35.167Z">
		<![CDATA[]]>
	</row>
	<row ProcId="317" StudyName="NDV" ProcName="NDV.GetShortConsWithHbA1c" ProcDesc="Prosjekter: HbA1c og kortkonsultasjoner" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6401" ChkSum="-961780768" LastUpdate="2019-01-03T08:59:36.013Z">
		<![CDATA[CREATE PROCEDURE NDV.GetShortConsWithHbA1c( @StudyId INT ) AS
BEGIN
  SELECT v.*,a.ShortConsCount,hba1c.NumResult, 
    'HbA1c=' + CONVERT(VARCHAR,hbA1c.NumResult ) + ', Kortkonsultasjoner n = ' + CONVERT(VARCHAR,ShortConsCount) + '.' AS InfoText
  FROM 
  dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastLabDataTable( 1058, '3000-01-01' ) hba1c ON hba1c.PersonId = v.PersonId
  JOIN (
    SELECT ce.PersonId,count(*) AS ShortConsCount 
    FROM dbo.ClinForm cf 
    JOIN dbo.MetaForm mf on mf.FormId = cf.FormId
    JOIN dbo.ClinEvent ce ON ce.EventId=cf.EventId
    WHERE mf.FormName = 'DIAPOL_SHORT' AND cf.DeletedAt IS NULL 
    GROUP BY ce.PersonId
   ) a
  ON a.PersonId = v.PersonId
  WHERE v.StudyId=@StudyId
  ORDER BY NumResult DESC;
END]]>
	</row>
	<row ProcId="318" StudyName="NDV" ProcName="NDV.GetPregnantInPeriod" ProcDesc="Gravide: Svangerskapskjema i periode" ProcParams=":StudyId, :StartDate, :StopDate" ListId="CASE" GrantTo="public" ChkSum="1882214725" LastUpdate="2019-12-02T11:36:01.590Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPregnantInPeriod( @StudyId INT, @StartDate DateTime, @StopDate DateTime ) AS
BEGIN
   SELECT 
     v.PersonId, v.DOB, v.FullName, v.GroupName, v.GenderId, p.NationalId, 
     REPLACE(ISNULL(mia.OptionText, 'Uspesifisert'),'.','') + '; ' + CONVERT(VARCHAR,agg.Antall) + ' kontroller.' AS InfoText 
  FROM 
    (
      SELECT ce.PersonId,COUNT(*) AS Antall 
      FROM dbo.ClinEvent ce
      JOIN dbo.ClinForm cf ON cf.EventId = ce.EventId AND cf.DeletedAt IS NULL
      JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId 
      WHERE mf.FormName = 'DIAPOL_GRAVIDE'
      AND ce.EventTime BETWEEN @StartDate AND @StopDate
      GROUP BY ce.PersonId
     ) agg
  JOIN dbo.ViewCaseListStub v ON agg.PersonId = v.PersonId
  JOIN dbo.Person p ON p.PersonId = v.PersonId
  LEFT JOIN dbo.MetaItemAnswer mia ON mia.ItemId = 3196 AND mia.OrderNumber = dbo.GetLastEnumValInThePast( v.PersonId, 'NDV_TYPE', @StopDate )
  WHERE v.StudyId = @StudyId;
END]]>
	</row>
	<row ProcId="319" StudyName="NDV" ProcName="NDV.GetCaseListKiosk" ProcDesc="Prosjekter: PROMS fra Kiosk" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6600" ChkSum="-2126140237" LastUpdate="2018-04-17T21:21:22.010Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListKiosk( @StudyId INT ) AS
BEGIN   
  SELECT DISTINCT v.PersonId, v.DOB, v.FullName, p.GenderId,     
    CASE cf.Archived WHEN 1 THEN 'Kontroll' ELSE 'Intervensjon' END AS GroupName,     
    'Tid ' + dbo.ShortTime( ce.EventTime) + ', Kode: ' + kf.FormTag AS InfoText,      
    ce.EventTime, cf.ClinFormId   
  FROM PROM.KioskForm kf     
  JOIN dbo.ClinForm cf ON cf.ClinFormId = kf.ClinFormId AND cf.FormId = 906 AND cf.DeletedAt IS NULL
  JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId     
  JOIN dbo.ViewCaseListStub v ON v.PersonId = ce.PersonId      
  JOIN dbo.Person p ON p.PersonId = v.PersonId   
  WHERE v.StudyId = @StudyId 
  ORDER BY ce.EventTime DESC;
END;]]>
	</row>
	<row ProcId="320" StudyName="NDV" ProcName="NDV.GetCaseListUserVsConsent" ProcDesc="Samtykke: Positive per behandler siste 365 dager" ProcParams=":StudyId, 365" ListId="CASE" GrantTo="Leder" MinVersion="6000" ChkSum="-3163075" LastUpdate="2018-06-07T08:35:22.633Z">
		<![CDATA[]]>
	</row>
	<row ProcId="321" StudyName="NDV" ProcName="NDV.GetCaseListUserVsConsent" ProcDesc="Samtykke: Positive per behander siste 30 dager" ProcParams=":StudyId, 30" ListId="CASE" GrantTo="Leder" MinVersion="6000" ChkSum="-1200948447" LastUpdate="2018-06-07T08:35:24.040Z">
		<![CDATA[]]>
	</row>
	<row ProcId="322" StudyName="NDV" ProcName="NDV.GetCaseListPhoneConsultations" ProcDesc="Aktivitet: Telefonkonsultasjoner i periode" ProcParams=":StudyId, :StartDate, :StopDate" ListId="CASE" GrantTo="public" MinVersion="18200" HelpText="Telefonkonsultasjoner i valgfri periode" ChkSum="-1906210534" LastUpdate="2019-01-03T13:36:38.250Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListPhoneConsultations( @StudyId INT, @StartAt DateTime, @StopAt DateTime ) AS
BEGIN
  EXEC dbo.GetFormClassInPeriod @StudyId, 'DIAPOL_TLF', @StartAt, @StopAt;
END]]>
	</row>
	<row ProcId="323" StudyName="NDV" ProcName="NDV.GetCaseListConsentVisits" ProcDesc="Særtakst: Konsultasjoner m/samtykke" ProcParams=":StudyId, :StartDate, :StopDate" ListId="CASE" GrantTo="public" MinVersion="18000" MaxVersion="20000" HelpText="Pasienter der det kan registreres særtakst for innrapportering til Norsk Diabetesregister for Voksne." ChkSum="689828570" LastUpdate="2019-10-09T11:34:36.803Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListConsentVisits( @StudyId INT, @StartDate DateTime, @StopDate DateTime ) AS
BEGIN
  SELECT a.PersonId, p.DOB, p.ReverseName AS FullName, a.GroupName, 
  'Fant ' + CONVERT(VARCHAR,n) + ' kontakt(er) i perioden.' AS InfoText
  FROM 
  (
    SELECT sam.PersonId, sg.GroupName, count(*) AS n
    FROM dbo.GetLastEnumValuesTable( 3389, NULL ) Sam
    JOIN dbo.ClinEvent ce ON ce.PersonId = Sam.PersonId 
    JOIN dbo.StudyGroup sg ON sg.StudyId = ce.StudyId AND sg.GroupId = ce.GroupId
    JOIN dbo.UserList ul ON ul.UserId = USER_ID() AND ul.CenterId = sg.CenterId
    WHERE Sam.EnumVal = 1 AND ce.EventTime BETWEEN @StartDate AND @StopDate
    GROUP BY sam.PersonId, sg.GroupName
   ) a
  JOIN dbo.Person p ON p.PersonId = a.PersonId
  ORDER BY p.ReverseName;
END;]]>
	</row>
	<row ProcId="324" StudyName="NDV" ProcName="PROM.GetPromOrders" ProcDesc="PROM: Skjemabestillinger i periode" ProcParams=":StudyId, :StartDate, :StopDate" ListId="CASE" GrantTo="Leder" MinVersion="18215" HelpText="Viser alle bestillinger som er forsøkt gjort i en periode, uavhengig om de er fylt ut eller ikke. " ChkSum="614181476" LastUpdate="2019-02-12T12:40:10.463Z">
		<![CDATA[CREATE PROCEDURE PROM.GetPromOrders( @StudyId INT, @StartDate DateTime, @StopDate DateTime ) AS
BEGIN
  SELECT DISTINCT v.*, fo.CreatedAt, 'Bestilt ' + dbo.ShortTime( fo.CreatedAt ) + ': ' + fo.OrderStatus AS InfoText 
  FROM PROM.FormOrder fo
  JOIN dbo.ViewCenterCaseListStub v ON v.PersonId = fo.PersonId
  WHERE v.StudyId = @StudyId AND fo.CreatedAt BETWEEN @StartDate AND @StopDate 
  ORDER BY fo.CreatedAt DESC;
END;

]]>
	</row>
	<row ProcId="325" StudyName="NDV" ProcName="NDV.GetCaseListBiobankConsentedSampleNeeded" ProcDesc="Samtykke: Samtykke til biobank men ikke tatt prøver" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18000" ChkSum="-1135809695" LastUpdate="2019-05-15T12:31:46.110Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListBiobankConsentedSampleNeeded( @StudyId INT ) AS
BEGIN
  SELECT v.*, 'Diabetes biobank prøve ikke tatt' AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastEnumValuesTable( 1502, NULL ) ev ON ev.PersonId = v.PersonId AND v.StudyId = @StudyId
  LEFT JOIN
    ( SELECT ld.PersonId, COUNT(*) AS LabCount
      FROM dbo.LabData ld
      JOIN dbo.LabCode lc ON lc.LabCodeId = ld.LabCodeId
      WHERE lc.LabClassId = 1084
      GROUP BY ld.PersonId
    ) agg ON agg.PersonId = v.PersonId
  WHERE ( ev.EnumVal = 1 ) AND ( agg.LabCount IS NULL );
END;
]]>
	</row>
	<row ProcId="326" StudyName="NDV" ProcName="NDV.GetCaseListBiobankUnanswered" ProcDesc="Samtykke: Ubesvart samtykke til biobank" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18000" ChkSum="-104076469" LastUpdate="2019-05-15T12:32:03.390Z">
		<![CDATA[CREATE PROCEDURE NDV.GetCaseListBiobankUnanswered( @StudyId INT ) AS
BEGIN
  SELECT v.*, 'Ubesvart samtykke til diabetes biobank' AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  LEFT OUTER JOIN dbo.GetLastEnumValuesTable( 1502, NULL ) c ON c.PersonId = v.PersonId 
  WHERE ( v.StudyId = @StudyId ) AND ( ISNULL( c.EnumVal, -1 ) IN ( -1, 4 ) )
  ORDER BY FullName;
END;]]>
	</row>
	<row ProcId="327" StudyName="NDV" ProcName="NDV.GetCaseListConsentVisits" ProcDesc="Særtakst: Konsultasjoner m/samtykke 2019" ProcParams=":StudyId, '2019-01-01', '2020-01-01'" ListId="CASE" GrantTo="public" MinVersion="18000" MaxVersion="20000" ChkSum="-1833604574" LastUpdate="2019-10-09T11:34:25.350Z">
		<![CDATA[]]>
	</row>
	<row ProcId="328" StudyName="NDV" ProcName="NDV.GetCaseListConsentVisits" ProcDesc="Særtakst: Konsultasjoner m/samtykke 2019 Q1" ProcParams=":StudyId, '2019-01-01', '2019-04-01'" ListId="CASE" GrantTo="public" MinVersion="18000" MaxVersion="20000" ChkSum="-479606829" LastUpdate="2019-10-09T11:34:27.570Z">
		<![CDATA[]]>
	</row>
	<row ProcId="329" StudyName="NDV" ProcName="NDV.GetCaseListConsentVisits" ProcDesc="Særtakst: Konsultasjoner m/samtykke 2019 Q2" ProcParams=":StudyId, '2019-04-01', '2019-07-01'" ListId="CASE" GrantTo="public" MinVersion="18000" MaxVersion="20000" ChkSum="-478702153" LastUpdate="2019-10-09T11:55:58.290Z">
		<![CDATA[]]>
	</row>
	<row ProcId="330" StudyName="NDV" ProcName="NDV.GetCaseListConsentVisits" ProcDesc="Særtakst: Konsultasjoner m/samtykke 2019 Q3" ProcParams=":StudyId, '2019-07-01', '2019-10-01'" ListId="CASE" GrantTo="public" MinVersion="18000" MaxVersion="20000" ChkSum="1666507006" LastUpdate="2019-10-09T11:34:33.693Z">
		<![CDATA[]]>
	</row>
	<row ProcId="331" StudyName="NDV" ProcName="NDV.GetCaseListConsentVisits" ProcDesc="Særtakst: Konsultasjoner m/samtykke 2019 Q4" ProcParams=":StudyId, '2019-10-01', '2020-01-01'" ListId="CASE" GrantTo="public" MinVersion="18000" MaxVersion="20000" ChkSum="-483836869" LastUpdate="2019-10-09T11:34:40.023Z">
		<![CDATA[]]>
	</row>
	<row ProcId="400" StudyName="BAR" ProcName="BAR.GetHospitalizedWithoutAdmissionForm" ProcDesc="Todo: Hospitalized without form" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1612684606" LastUpdate="2019-01-13T18:20:58.827Z">
		<![CDATA[CREATE PROCEDURE BAR.GetHospitalizedWithoutAdmissionForm( @StudyId INT ) AS
BEGIN  
  SELECT DISTINCT ce.PersonId 
  INTO #temp
  FROM dbo.ClinEvent ce 
  JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId
  WHERE cdp.ItemId = 8091 AND cdp.EnumVal = 1 AND ce.StudyId = @StudyId
  EXCEPT 
  SELECT DISTINCT ce2.PersonId 
  FROM dbo.ClinEvent ce2 
  JOIN dbo.ClinForm cf2 ON cf2.EventId = ce2.EventId
  WHERE cf2.FormId=655 AND ce2.StudyId = @StudyId;
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, 'No FirstAdmission!' AS InfoText
  FROM dbo.ViewActiveCaseListStub v 
  JOIN #temp t ON t.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId
  ORDER BY FullName;
END]]>
	</row>
	<row ProcId="401" StudyName="BAR" ProcName="dbo.GetCaseListGroupId" ProcDesc="Gruppe: Rumpert" ProcParams=":StudyId, 1" ListId="CASE" GrantTo="public" MinVersion="18214" HelpText="Gjelder bare arbeidssted Haukeland Sykehus" ChkSum="886319624" LastUpdate="2018-09-04T07:50:55.580Z">
		<![CDATA[]]>
	</row>
	<row ProcId="402" StudyName="BAR" ProcName="dbo.GetCaseListGroupId" ProcDesc="Gruppe: Ikke-rumpert" ProcParams=":StudyId, 2" ListId="CASE" GrantTo="public" MinVersion="18214" HelpText="Gjelder bare arbeidssted Haukeland Sykehus" ChkSum="1197833032" LastUpdate="2018-09-04T07:50:54.867Z">
		<![CDATA[]]>
	</row>
	<row ProcId="403" StudyName="BAR" ProcName="dbo.GetCaseListGroupId" ProcDesc="Gruppe: Reblødning" ProcParams=":StudyId, 4" ListId="CASE" GrantTo="public" MinVersion="18214" HelpText="Gjelder bare arbeidssted Haukeland Sykehus" ChkSum="-621866195" LastUpdate="2018-09-04T07:50:54.313Z">
		<![CDATA[]]>
	</row>
	<row ProcId="404" StudyName="BAR" ProcName="dbo.GetCaseListGroupId" ProcDesc="Gruppe: Perimesencefal" ProcParams=":StudyId, 6" ListId="CASE" GrantTo="public" MinVersion="18214" HelpText="Gjelder bare arbeidssted Haukeland Sykehus" ChkSum="477173402" LastUpdate="2018-09-04T07:50:53.877Z">
		<![CDATA[]]>
	</row>
	<row ProcId="419" StudyName="BAR" ProcName="BAR.GetCaseListRapid" ProcDesc="Delstudie: RAPID" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18000" ChkSum="-204067191" LastUpdate="2019-10-31T13:05:58.610Z">
		<![CDATA[CREATE PROCEDURE BAR.GetCaseListRapid( @StudyId INT ) AS
BEGIN
  EXEC dbo.GetCaseListByFormName @StudyId, 'BAR_RAPID';
END]]>
	</row>
	<row ProcId="500" StudyName="NDV" ProcName="NDV.GetType1Age18to65WithHbA1c" ProcDesc="Type 1: Alder 18-65 etter fallende HbA1c" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6320" ChkSum="851896506" LastUpdate="2018-10-03T15:38:27.460Z">
		<![CDATA[CREATE PROCEDURE NDV.GetType1Age18to65WithHbA1c( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId,p.DOB,p.FullName,p.GroupName,
    COALESCE(ld.LabName + ' = ' + CONVERT(VARCHAR,ld.NumResult ) +' (' +
    CONVERT(VARCHAR,DATEPART(YYYY,ld.LabDate)) + ')','(ikke målt)') AS InfoText
  FROM NDV.Type1 p
  LEFT JOIN dbo.GetLastLabDataTable( 1058, '3000-01-01' ) ld ON ld.PersonId = p.PersonId
  WHERE ( p.Age < 65 ) AND ( p.Age >= 18 )  
  ORDER BY ISNULL( ld.NumResult, 999 ) DESC
END]]>
	</row>
	<row ProcId="501" StudyName="BARNEDIABETES" ProcName="BDR.GetCaseListHbA1cFalling" ProcDesc="HbA1c: Aktive pasienter etter fallende HbA1c, med lege." ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19004" HelpText="Merk laboratoriedata er pasientnære, altså tatt fra skjema." CompatibilityLevel="100" ChkSum="-228300652" LastUpdate="2019-06-11T14:20:39.233Z">
		<![CDATA[CREATE PROCEDURE BDR.GetCaseListHbA1cFalling( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GenderId,  
    ISNULL(FORMAT( ld.Quantity, 'HbA1c = # mmol/mol' ),'(HbA1c mangler)' ) AS InfoText, 
    doc.TextVal AS GroupName
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastQuantityTable( 3018, NULL ) ld ON ld.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastTextValuesTable( 3844, NULL ) doc ON doc.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId
  ORDER BY ISNULL(ld.Quantity,999) DESC;
END]]>
	</row>
	<row ProcId="502" StudyName="BARNEDIABETES" ProcName="BDR.GetCaseListHbA1cAbove75" ProcDesc="HbA1c: Siste HbA1c-verdi 75 mmol/mol eller høyere" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19004" HelpText="Merk labororatoriedata er pasientnære, altså tatt fra skjema." CompatibilityLevel="100" ChkSum="1923108851" LastUpdate="2019-06-11T14:20:41.203Z">
		<![CDATA[CREATE PROCEDURE BDR.GetCaseListHbA1cAbove75( @StudyId INT ) AS
BEGIN
  SELECT 
     v.*, FORMAT( glqt.Quantity, 'HbA1c = # mmol/mol' ) AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastQuantityTable( 3018, NULL ) glqt ON glqt.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND glqt.Quantity >= 75
  ORDER BY glqt.Quantity DESC;
END
]]>
	</row>
	<row ProcId="503" StudyName="BARNEDIABETES" ProcName="BDR.GetCaseListHbA1cBelow53" ProcDesc="HbA1c: Siste HbA1c-verdi under 53 mmol/mol" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19004" CompatibilityLevel="100" ChkSum="2139373562" LastUpdate="2019-06-11T14:20:43.610Z">
		<![CDATA[CREATE PROCEDURE BDR.GetCaseListHbA1cBelow53( @StudyId INT ) AS
BEGIN
  SELECT 
     v.*, FORMAT( glqt.Quantity, 'HbA1c = # mmol/mol' ) AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastQuantityTable( 3018, NULL ) glqt ON glqt.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND glqt.Quantity < 53
  ORDER BY glqt.Quantity;
END
]]>
	</row>
	<row ProcId="504" StudyName="BARNEDIABETES" ProcName="BDR.GetCaseListUACRAbove3" ProcDesc="U-ACR: Aktive pasienter med U-ACR over 3 mg/mmol." ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19004" HelpText="Laboratoriedata fra labarket." CompatibilityLevel="100" ChkSum="1250057213" LastUpdate="2019-06-11T14:20:46.187Z">
		<![CDATA[CREATE PROCEDURE BDR.GetCaseListUACRAbove3( @StudyId INT ) AS
BEGIN
  SELECT v.*, FORMAT( glldt.NumResult, 'U-ACR = #.# mg/mmol' ) AS InfoText
  FROM dbo.ViewActiveCaseListStub v 
  JOIN dbo.GetLastLabDataTable(6, GETDATE()) glldt ON v.PersonId = glldt.PersonId
  WHERE v.StudyId = @StudyId AND glldt.NumResult > 3 
  ORDER BY glldt.NumResult DESC;
END
]]>
	</row>
	<row ProcId="505" StudyName="BARNEDIABETES" ProcName="BDR.GetCaseListLDLAbove25" ProcDesc="LDL: Aktive pasienter med LDL over 2,5 mmol/L" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19004" HelpText="Laboratoriedata fra labarket." CompatibilityLevel="100" ChkSum="49724091" LastUpdate="2019-06-11T14:20:48.220Z">
		<![CDATA[CREATE PROCEDURE BDR.GetCaseListLDLAbove25( @StudyId INT ) AS
BEGIN
  SELECT v.*, FORMAT( glldt.NumResult, 'LDL = #.# mmol/L' ) AS InfoText
  FROM dbo.ViewActiveCaseListStub v 
  JOIN dbo.GetLastLabDataTable(35, GETDATE() ) glldt ON v.PersonId = glldt.PersonId
  WHERE v.StudyId = @StudyId AND glldt.NumResult > 2.5 
  ORDER BY glldt.NumResult DESC;
END
]]>
	</row>
	<row ProcId="506" StudyName="BARNEDIABETES" ProcName="BDR.GetCaseListSortedByAge" ProcDesc="Aktive: Alle pasienter etter fallende alder, med lege." ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19004" CompatibilityLevel="100" ChkSum="796542923" LastUpdate="2019-06-11T14:20:50.390Z">
		<![CDATA[CREATE PROCEDURE BDR.GetCaseListSortedByAge( @StudyId INT ) AS
BEGIN
  SET LANGUAGE NORWEGIAN;
  SELECT v.PersonId, v.DOB, v.FullName, v.GenderId, doc.TextVal AS GroupName,
    FORMAT( DATEDIFF(DD, v.DOB, GETDATE() ) / 365.25, 'Alder #.# år' ) AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastTextValuesTable( 3844, NULL ) doc ON doc.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId
  ORDER BY DOB;
END]]>
	</row>
	<row ProcId="507" StudyName="BARNEDIABETES" ProcName="DIA.GetCaseListPump" ProcDesc="Behandling: Insulinpumpe" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19004" InfoCaption="Navn på pumpe" ChkSum="2040240056" LastUpdate="2019-12-12T22:12:21.410Z">
		<![CDATA[CREATE PROCEDURE DIA.GetCaseListPump ( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GenderId, v.GroupName, 
    ISNULL(pump.OptionText, ' (Ikke ooppgitt)') AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastEnumValuesTable(4056, NULL) adm ON v.PersonId = adm.PersonId -- administrasjonsmåte
  LEFT JOIN dbo.GetLastEnumValuesTable(5162, NULL) pump ON v.PersonId = pump.PersonId -- pumpetype
  WHERE v.StudyId = @StudyId AND adm.EnumVal = 2
  ORDER BY pump.OptionText, v.FullName;
END
]]>
	</row>
	<row ProcId="508" StudyName="BARNEDIABETES" ProcName="BDR.GetCaseListCGM" ProcDesc="CGM: Aktive CGM brukere" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19004" InfoCaption="CGM Type" HelpText="-" ChkSum="536837800" LastUpdate="2019-12-12T22:18:32.193Z">
		<![CDATA[CREATE PROCEDURE BDR.GetCaseListCGM( @StudyId INT ) AS 
BEGIN   
  SELECT v.PersonId, v.DOB, v.FullName, v.GenderId,     
    diatype.OptionText AS GroupName, 
    ISNULL(cgmtype.OptionText, '(CGM ikke oppgitt)') AS InfoText   
  FROM dbo.ViewActiveCaseListStub v   
  JOIN dbo.GetLastEnumValuesTable( 3196, NULL ) diatype ON diatype.PersonId = v.PersonId     
  JOIN dbo.GetLastEnumValuesTable( 1310, NULL ) glucmon ON glucmon.PersonId = v.PersonId     
  LEFT JOIN dbo.GetLastEnumValuesTable( 5166, NULL ) cgmtype ON cgmtype.PersonId = v.PersonId     
  WHERE v.StudyId = @StudyId AND glucmon.EnumVal = 1
  ORDER BY cgmtype.OptionText, v.FullName;
END  ]]>
	</row>
	<row ProcId="509" StudyName="BARNEDIABETES" ProcName="NDV.GetCaseListCGMTraining" ProcDesc="CGM: Opplæring siste år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" ChkSum="-1632508216" LastUpdate="2019-05-22T19:46:38.247Z">
		<![CDATA[]]>
	</row>
	<row ProcId="510" StudyName="BARNEDIABETES" ProcName="BDR.GetCaseListByDxDate" ProcDesc="Aktive: Alle etter diagnosedato, nydiagnostiserte først" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19004" CompatibilityLevel="100" ChkSum="-1194698332" LastUpdate="2019-06-11T14:20:55.080Z">
		<![CDATA[CREATE PROCEDURE BDR.GetCaseListByDxDate ( @StudyId INT ) AS
BEGIN
  SELECT v.*, ISNULL(gldt.DTVal, GETDATE()) AS DTValOrder, 
    ISNULL('Diagnosedato: ' + FORMAT(gldt.DTVal, 'd', 'no-no'), '(uoppgitt)') AS InfoText 
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastDateTable(3323, NULL) gldt ON v.PersonId = gldt.PersonId
  WHERE v.StudyId = @StudyId
  ORDER BY DTValOrder DESC;
END
]]>
	</row>
	<row ProcId="511" StudyName="BARNEDIABETES" ProcName="BDR.GetCaseListCGMDevice" ProcDesc="CGM: Egenmåling av glukose" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19004" InfoCaption="Målemetode og evt. CGM-type" HelpText="Aktive brukere sortert først på Egenmåling av glukose (1310) og deretter evt. CGM apparat (5166)." ChkSum="-327283913" LastUpdate="2019-12-12T22:45:10.400Z">
		<![CDATA[CREATE PROCEDURE BDR.GetCaseListCGMDevice ( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GenderId, v.GroupName,
    ISNULL ( measure.OptionText, '(egenmåling mangler)' ) + ISNULL( ', ' + cgm.OptionText, '' ) AS InfoText,
    ISNULL( measure.EnumVal, 7 ) AS OrderBy
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastEnumValuesTable( 1310, NULL ) measure ON measure.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastEnumValuesTable( 5166, NULL ) cgm ON cgm.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId
  ORDER BY OrderBy, cgm.OptionText, v.FullName;
END]]>
	</row>
	<row ProcId="512" StudyName="BARNEDIABETES" ProcName="DIA.GetCaseListAntibodies" ProcDesc="Antistoff: Status for antistoff med kommentar" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19004" ChkSum="-757091367" LastUpdate="2019-07-31T09:28:07.570Z">
		<![CDATA[CREATE PROCEDURE DIA.GetCaseListAntibodies( @StudyId INT ) AS
BEGIN
  SELECT v.*, CONCAT( ISNULL(ant.OptionText,'Ubesvart'), ': ', ISNULL(txt.TextVal, '(ingen kommentar)') ) AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastEnumValuesTable( 3981, NULL ) ant ON ant.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastTextValuesTable( 9002, NULL ) txt ON txt.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId
  ORDER BY ant.OptionText, v.DOB;
END
]]>
	</row>
	<row ProcId="513" StudyName="BARNEDIABETES" ProcName="DIA.GetCaseListHbA1cSpike" ProcDesc="HbA1c: HbA1c økt med 5 mmol/mol eller mer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19004" HelpText="Aktive pasienter som har hatt en HbA1c som har økt med 5 mmol/mol mellom de to siste registrerte målingene." ChkSum="1654618165" LastUpdate="2019-11-18T21:48:31.300Z">
		<![CDATA[CREATE PROCEDURE DIA.GetCaseListHbA1cSpike( @StudyId INT ) AS 
BEGIN
  SET NOCOUNT ON;
  SELECT DISTINCT ld.PersonId, CONVERT(DATE,LabDate) AS LabDate, NumResult, ROW_NUMBER() OVER ( Partition BY ld.PersonId ORDER BY LabDate DESC ) AS rnk 
    INTO #temp
  FROM dbo.LabData ld
    JOIN dbo.LabCode lc ON lc.LabCodeId = ld.LabCodeId
    JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = ld.PersonId
  WHERE lc.LabClassId = 1058;
  SELECT v.*, 
    CONCAT( 'HbA1c økt fra ', t2.NumResult, ' til ', t1.NumResult, ' på ', DATEDIFF(DD,t2.LabDate,t1.LabDate),' dager ( ', CONVERT(VARCHAR,t2.LabDate,4 ), ' - ', CONVERT(VARCHAR,t1.LabDate,4), ' ).'  ) AS InfoText
  FROM #temp t1
  JOIN #temp t2 ON t1.PersonId = t2.PersonId
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = t1.PersonId
  WHERE ( t1.rnk = 1 AND t2.rnk = 2 ) AND ( t1.NumResult >= t2.NumResult + 5 )
  ORDER BY t1.NumResult - t2.NumResult DESC, v.FullName;
END;]]>
	</row>
	<row ProcId="600" StudyName="ROAS" ProcName="ENDO.GetAddisonPatients" ProcDesc="Addison: Alle aktive" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6310" InfoCaption="Addison type" ChkSum="1363668548" LastUpdate="2019-01-03T08:59:39.340Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetAddisonPatients (@StudyId INT) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, v.GenderId,
    'Diagnoseår ' + ISNULL(CONVERT(VARCHAR, CONVERT(INT, T6089.Quantity)), 'mangler') + ', ' +
    ISNULL(T6090.OptionText, '(subtype mangler)') + '.' AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastEnumValuesTable( 6090, NULL ) AS T6090 ON T6090.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastEnumValuesTable( 6299, NULL ) AS T6299 ON T6299.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastQuantities( 6089 ) AS T6089 ON T6089.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND (T6090.EnumVal = 1 OR T6299.EnumVal = 1 OR T6089.Quantity > 1900)
END]]>
	</row>
	<row ProcId="601" StudyName="ROAS" ProcName="ENDO.GetAddisonNoRecentData" ProcDesc="Addison: Uten skjemadata etter 01.01.2013" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6002" ChkSum="-1479391439" LastUpdate="2019-01-12T10:07:55.437Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetAddisonNoRecentData( @StudyId INT ) AS
BEGIN
  -- Find Addison patients
  SELECT DISTINCT ce.PersonId
  INTO #temp 
  FROM dbo.ClinEvent ce 
  JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId
  WHERE cdp.ItemId = 6299 AND cdp.EnumVal = 1
  UNION
  SELECT DISTINCT ce.PersonId FROM dbo.ClinEvent ce 
  JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId
  WHERE cdp.ItemId = 6090 AND cdp.EnumVal = 1
  EXCEPT 
  SELECT DISTINCT ce.PersonId FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId  
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  WHERE FormName IN ( 'Autoimmunitet','Addison' )
  AND ce.EventTime > '2013-01-01';
  -- Join with active patients
  SELECT DISTINCT v.*,ISNULL(p.PostalCode,'') + ' ' + ISNULL(p.City,'') AS InfoText 
  FROM dbo.ViewActiveCaseListStub v
  JOIN #temp t ON t.PersonId=v.PersonId  
  JOIN dbo.Person p ON p.PersonId = v.PersonId AND ISNULL(DeceasedInd,0) = 0
  WHERE v.StudyId=@StudyId
  ORDER BY v.FullName;                        
END]]>
	</row>
	<row ProcId="602" StudyName="ROAS" ProcName="ENDO.GetAddisonWomen" ProcDesc="Addison: Kvinner med Addison" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18000" HelpText="Basert på flere variable, enten Ja på Addison (6299) eller subtype, evt. at diagnoseår er registrert" ChkSum="680962917" LastUpdate="2019-03-04T08:23:47.080Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetAddisonWomen( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, v.GenderId,
    'Diagnoseår ' + ISNULL(CONVERT(VARCHAR, CONVERT(INT, T6089.Quantity)), 'mangler') + ', ' +
    ISNULL(T6090.OptionText, '(subtype mangler)') + '.' AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastEnumValuesTable( 6090, NULL ) AS T6090 ON T6090.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastEnumValuesTable( 6299, NULL ) AS T6299 ON T6299.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastQuantities( 6089 ) AS T6089 ON T6089.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND (T6090.EnumVal = 1 OR T6299.EnumVal = 1 OR T6089.Quantity > 1900)
    AND v.GenderId = 2;
END]]>
	</row>
	<row ProcId="700" StudyName="ENDO" ProcName="ENDO.GetCaseListHypertyreose" ProcDesc="Diagnose: Hypertyreose" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1020329328" LastUpdate="2013-09-27T10:41:14.780Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetCaseListHypertyreose ( @StudyId INT )
AS
BEGIN
  SELECT p.PersonId, p.DOB, p.ReverseName as FullName,sg.GroupName,dbo.GetLastEnumVal(p.PersonId,'VAR6658') as Var6658 
  INTO #tempAll 
  FROM dbo.Person p
  JOIN dbo.StudCase sc ON sc.PersonId=p.PersonId
  JOIN dbo.Study s ON s.StudyId=sc.StudyId AND s.StudyId=@StudyId
  LEFT OUTER JOIN dbo.StudyGroup Sg ON sg.StudyId=sc.StudyId and sg.GroupId=sc.GroupId;
  select t.PersonId,t.DOB,t.FullName,t.GroupName,mia.OptionText as InfoText
  FROM #tempAll t 
  JOIN dbo.MetaItemAnswer mia ON mia.OrderNumber=t.Var6658 AND mia.ItemId=6658
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="701" StudyName="ENDO" ProcName="ENDO.GetCaseListOtherThyroid" ProcDesc="Diagnose: Andre tyroideasykdommer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-737503390" LastUpdate="2013-09-27T10:41:25.717Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetCaseListOtherThyroid ( @StudyId INT )
AS
BEGIN
  SELECT p.PersonId, p.DOB, p.ReverseName as FullName,sg.GroupName,
    dbo.GetLastEnumVal(p.PersonId,'VAR8002') as Var8002,
    dbo.GetLastEnumVal(p.PersonId,'VAR6642') as Var6642
  INTO #tempAll 
  FROM dbo.Person p
  JOIN dbo.StudCase sc ON sc.PersonId=p.PersonId
  JOIN dbo.Study s ON s.StudyId=sc.StudyId AND s.StudyId=@StudyId
  LEFT OUTER JOIN dbo.StudyGroup Sg ON sg.StudyId=sc.StudyId and sg.GroupId=sc.GroupId;
  select t.PersonId,t.DOB,t.FullName,t.GroupName, RTRIM(LTRIM(ISNULL(mia6642.OptionText,'') + ' '+ ISNULL(mia8002.OptionText,''))) as InfoText
  FROM #tempAll t 
  LEFT OUTER JOIN dbo.MetaItemAnswer mia6642 ON mia6642.OrderNumber=t.Var6642 AND mia6642.ItemId=6642
  LEFT OUTER JOIN dbo.MetaItemAnswer mia8002 ON mia8002.OrderNumber=t.Var8002 AND mia8002.ItemId=8002
  WHERE ISNULL(Var6642,0)=4 or ISNULL(Var8002,0)=9 
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="703" StudyName="ENDO" ProcName="ENDO.GetCaseListBinyreTumor" ProcDesc="Diagnose: Binyretumor" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1785173045" LastUpdate="2013-09-27T10:41:41.280Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetCaseListBinyreTumor ( @StudyId INT )
AS
BEGIN
  SELECT p.PersonId, p.DOB, p.ReverseName as FullName,sg.GroupName,
    dbo.GetLastEnumVal(p.PersonId,'VAR5733') as Var5733
  INTO #tempAll 
  FROM dbo.Person p
  JOIN dbo.StudCase sc ON sc.PersonId=p.PersonId
  JOIN dbo.Study s ON s.StudyId=sc.StudyId AND s.StudyId=@StudyId
  LEFT OUTER JOIN dbo.StudyGroup Sg ON sg.StudyId=sc.StudyId and sg.GroupId=sc.GroupId;
  select t.PersonId,t.DOB,t.FullName,t.GroupName, 'Binyretumor' as InfoText
  FROM #tempAll t 
  JOIN dbo.MetaItemAnswer mia5733 ON mia5733.OrderNumber=Var5733 AND mia5733.ItemId=5733
  WHERE ISNULL(Var5733,0)=1 
  ORDER BY FullName
END]]>
	</row>
	<row ProcId="704" StudyName="ENDO" ProcName="ENDO.GetAddisonPatients" ProcDesc="Addison: Alle aktive" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6310" ChkSum="-623982855" LastUpdate="2017-01-15T20:07:23.630Z">
		<![CDATA[]]>
	</row>
	<row ProcId="705" StudyName="ENDO.BASE" ProcName="ENDO.GetApsPatients" ProcDesc="Utvalg av APS etter type" ProcParams=":StudyId,:ApsType" ListId="CASE" GrantTo="public" ChkSum="801934161" LastUpdate="2013-02-14T10:09:04.170Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetApsPatients( @StudyId INT, @ApsType INT )
AS
BEGIN
  select p.PersonId,
  dbo.GetLastEnumVal( p.PersonId,'VAR6607') as ApsType
  INTO #temp1
  FROM Person p;
  SELECT DISTINCT PersonId 
  INTO #temp2
  FROM #temp1 
  WHERE ApsType = @ApsType;
  SELECT p.PersonId,p.DOB,p.ReverseName as FullName,sg.GroupName,ss.StatusText as InfoText,p.GenderId
  FROM #temp2 t2 
  JOIN Person p ON p.PersonId=t2.PersonId
  JOIN StudCase sc ON sc.PersonId=t2.PersonId
  JOIN StudyStatus ss ON ss.StudyId=sc.StudyId AND ss.StatusId=sc.FinState AND ss.StatusActive=1 
  JOIN StudyGroup sg ON sg.StudyId=sc.StudyId AND sg.GroupId=sc.GroupId AND sg.GroupActive=1
  WHERE sc.StudyId=@StudyId
END]]>
	</row>
	<row ProcId="706" StudyName="ENDO" ProcName="ENDO.GetApsType1" ProcDesc="Polyendokrine syndromer: APS-I" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1391939483" LastUpdate="2013-02-14T10:11:33.077Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetApsType1( @StudyId INT ) AS BEGIN EXEC ENDO.GetApsPatients @StudyId,1 END]]>
	</row>
	<row ProcId="707" StudyName="ENDO" ProcName="ENDO.GetApsType2" ProcDesc="Polyendokrine syndromer: APS-II" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-707384940" LastUpdate="2013-02-14T10:11:34.060Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetApsType2( @StudyId INT ) AS BEGIN EXEC ENDO.GetApsPatients @StudyId,2 END]]>
	</row>
	<row ProcId="708" StudyName="ENDO" ProcName="ENDO.GetApsType3" ProcDesc="Polyendokrine syndromer: APS-III" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1257083639" LastUpdate="2013-02-14T10:15:37.483Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetApsType3( @StudyId INT ) AS BEGIN EXEC ENDO.GetApsPatients @StudyId,3 END]]>
	</row>
	<row ProcId="709" StudyName="ROAS" ProcName="ENDO.GetApsType1" ProcDesc="Polyendokrine syndromer: APS-I" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1610546942" LastUpdate="2013-02-14T10:12:37.250Z">
		<![CDATA[]]>
	</row>
	<row ProcId="710" StudyName="ROAS" ProcName="ENDO.GetApsType2" ProcDesc="Polyendokrine syndromer: APS-II" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1864394287" LastUpdate="2013-02-14T10:12:41.983Z">
		<![CDATA[]]>
	</row>
	<row ProcId="711" StudyName="ROAS" ProcName="ENDO.GetApsType3" ProcDesc="Polyendokrine syndromer: APS-III" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-605805085" LastUpdate="2013-02-14T10:13:03.750Z">
		<![CDATA[]]>
	</row>
	<row ProcId="712" StudyName="ENDO" ProcName="ENDO.GetHypoParaAutoimmune" ProcDesc="Hypoparatyreoidisme: Idiopatisk/autoimmun" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18214" ChkSum="-626216534" LastUpdate="2019-01-12T06:25:33.123Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoParaAutoImmune( @StudyId INT ) AS 
BEGIN 
  EXEC dbo.GetActiveSingleVar @StudyId, 6663, 0; 
END]]>
	</row>
	<row ProcId="713" StudyName="ROAS" ProcName="ENDO.GetHypoParaAutoimmune" ProcDesc="Hypoparatyreoidisme: Idiopatisk/autoimmun" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1611397770" LastUpdate="2018-12-05T08:31:51.740Z">
		<![CDATA[]]>
	</row>
	<row ProcId="714" StudyName="ENDO" ProcName="ENDO.GetHypoParaPseudo" ProcDesc="Hypoparatyreoidisme: Pseudohypoparatyreoidisme" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18214" ChkSum="-2010995799" LastUpdate="2019-01-12T06:25:35.480Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoParaPseudo( @StudyId INT ) AS 
BEGIN 
  EXEC dbo.GetActiveSingleVar @StudyId, 6663, 1; 
END]]>
	</row>
	<row ProcId="715" StudyName="ROAS" ProcName="ENDO.GetHypoParaPseudo" ProcDesc="Hypoparatyreoidisme: Pseudohypoparatyreoidisme" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1219674589" LastUpdate="2018-12-05T08:32:02.673Z">
		<![CDATA[]]>
	</row>
	<row ProcId="716" StudyName="ENDO" ProcName="ENDO.GetHypoParaAll" ProcDesc="Hypoparatyreoidisme: Alle aktive" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18214" ChkSum="1822475560" LastUpdate="2019-01-12T06:25:38.433Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoParaAll( @StudyId INT ) AS 
BEGIN 
  EXEC dbo.GetActiveSingleVar @StudyId, 6321, 1; 
END]]>
	</row>
	<row ProcId="717" StudyName="ROAS" ProcName="ENDO.GetHypoParaAll" ProcDesc="Hypoparatyreoidisme: Alle aktive" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="647981375" LastUpdate="2013-02-14T10:51:04.640Z">
		<![CDATA[]]>
	</row>
	<row ProcId="718" StudyName="ENDO" ProcName="ENDO.GetHypoParaPostop" ProcDesc="Hypoparatyreoidisme: Postoperativt" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18214" ChkSum="688447741" LastUpdate="2019-01-12T06:25:41.090Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoParaPostop( @StudyId INT ) AS 
BEGIN 
  EXEC dbo.GetActiveSingleVar @StudyId, 6883, 1; 
END]]>
	</row>
	<row ProcId="719" StudyName="ROAS" ProcName="ENDO.GetHypoParaPostop" ProcDesc="Hypoparatyreoidisme: Postoperativt" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1315024179" LastUpdate="2013-02-14T10:57:12.140Z">
		<![CDATA[]]>
	</row>
	<row ProcId="720" StudyName="ENDO" ProcName="ENDO.GetHypoParaDiGeorge" ProcDesc="Hypoparatyreoidisme: Di George syndrom" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18214" ChkSum="-445253731" LastUpdate="2019-01-12T06:25:43.997Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoParaDiGeorge( @StudyId INT ) AS 
BEGIN 
  EXEC dbo.GetActiveSingleVar @StudyId, 6664, 1; 
END]]>
	</row>
	<row ProcId="721" StudyName="ROAS" ProcName="ENDO.GetHypoParaDiGeorge" ProcDesc="Hypoparatyreoidisme: Di George syndrom" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-497670906" LastUpdate="2013-02-14T11:09:19.500Z">
		<![CDATA[]]>
	</row>
	<row ProcId="722" StudyName="ENDO" ProcName="ENDO.GetHypoParaAutosomal" ProcDesc="Hypoparatyreoidisme: Autosomal dominant hypokalsemi" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18214" ChkSum="-616324825" LastUpdate="2019-01-12T06:25:47.433Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoParaAutosomal( @StudyId INT ) AS 
BEGIN 
  EXEC dbo.GetActiveSingleVar @StudyId, 6884, 1; 
END]]>
	</row>
	<row ProcId="723" StudyName="ROAS" ProcName="ENDO.GetHypoParaAutosomal" ProcDesc="Hypoparatyreoidisme: Autosomal dominant hypokalsemi" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-272670584" LastUpdate="2013-02-14T11:08:11.793Z">
		<![CDATA[]]>
	</row>
	<row ProcId="724" StudyName="ROAS" ProcName="ENDO.GetHypoThyroAutoimmune" ProcDesc="Hypotyreose: Autoimmun" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18214" ChkSum="1938061788" LastUpdate="2019-01-12T06:25:50.217Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHypoThyroAutoimmune( @StudyId INT ) AS 
BEGIN 
  EXEC dbo.GetActiveSingleVar @StudyId, 6312, 1; 
END]]>
	</row>
	<row ProcId="725" StudyName="ROAS" ProcName="ROAS.GetRoasNumbers" ProcDesc="Prosess: Prøvenummer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6311" InfoCaption="Prøvenummer" ChkSum="40031882" LastUpdate="2019-01-03T08:59:41.280Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetRoasNumbers ( @StudyId INT ) AS
BEGIN
  SELECT v.*, ISNULL( CONVERT(VARCHAR, CONVERT(INT, a.Quantity)), 'Mangler') AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastQuantityTable(6082, NULL) a ON a.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId
  ORDER BY v.PersonId
END]]>
	</row>
	<row ProcId="726" StudyName="ROAS" ProcName="ENDO.GetHyperThyroAutoimmune" ProcDesc="Hypertyreose: Autoimmun" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18214" ChkSum="30489272" LastUpdate="2019-01-12T06:25:52.920Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetHyperThyroAutoimmune( @StudyId INT ) AS 
BEGIN 
  EXEC dbo.GetActiveSingleVar @StudyId, 6313, 1; 
END]]>
	</row>
	<row ProcId="727" StudyName="ROAS" ProcName="ROAS.GetRoasNumbersMissing" ProcDesc="Prosess: Prøvenummer mangler" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6311" InfoCaption="Informasjon" ChkSum="1498880546" LastUpdate="2019-01-03T08:59:42.047Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetRoasNumbersMissing ( @StudyId INT ) AS
BEGIN
  SELECT v.*, ISNULL(CONVERT(VARCHAR, CONVERT(INT, a.Quantity)), 'Mangler') AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastQuantityTable( 6082, NULL) a ON a.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND a.Quantity IS NULL
  ORDER BY v.PersonId
END]]>
	</row>
	<row ProcId="728" StudyName="ROAS" ProcName="ENDO.GetDiabetesType1" ProcDesc="Diagnose: Diabetes type 1" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18214" ChkSum="-1728934141" LastUpdate="2019-01-12T06:25:55.980Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetDiabetesType1( @StudyId INT ) AS 
BEGIN 
  EXEC dbo.GetActiveSingleVar @StudyId, 6314, 1; 
END]]>
	</row>
	<row ProcId="729" StudyName="ENDO" ProcName="ENDO.GetFamilialTumors" ProcDesc="Tumorer: Familære typer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" InfoCaption="Antall treff" ChkSum="439658304" LastUpdate="2018-10-03T16:12:43.663Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetFamilialTumors( @StudyId INT ) AS
BEGIN  

  SELECT ce.PersonId
  INTO #temp1
  FROM dbo.ClinDataPoint cdp
  JOIN dbo.ClinEvent ce ON ce.EventId = cdp.EventId
  WHERE ( cdp.ItemId = 5745 ) AND ( cdp.EnumVal = 1 )

  UNION
  
  SELECT ce.PersonId
  FROM dbo.ClinDataPoint cdp
  JOIN dbo.ClinEvent ce ON ce.EventId = cdp.EventId
  WHERE ( cdp.ItemId = 6981 ) AND ( cdp.EnumVal IN ( 1,2,3,4 ) );
  
  -- Få unik personliste
  
  SELECT PersonId,COUNT(*) AS HitCount 
  INTO #temp2 
  FROM #temp1 GROUP BY PersonId;
  
  -- Hent pasientene
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName, 'Kriterier = ' + CONVERT(VARCHAR,t.HitCount) AS InfoText
    FROM dbo.ViewCaseListStub v
    JOIN #temp2 t ON t.PersonId=v.PersonId
  WHERE v.StudyId=@StudyId
  ORDER BY v.FullName;
END]]>
	</row>
	<row ProcId="730" StudyName="ENDO" ProcName="ENDO.GetDiabetesType1AndAddison" ProcDesc="Diagnose: Diabetes type 1 + Addison" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18214" ChkSum="1135224176" LastUpdate="2019-01-12T06:25:58.293Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetDiabetesType1AndAddison( @StudyId INT ) AS 
BEGIN 
  EXEC dbo.GetActiveDoubleVar @StudyId, 6314, 1, 6299, 1; 
END]]>
	</row>
	<row ProcId="731" StudyName="ROAS" ProcName="ENDO.GetDiabetesType1AndAddison" ProcDesc="Diagnose: Diabetes type 1 + Addison" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1387369723" LastUpdate="2013-06-06T10:09:11.877Z">
		<![CDATA[]]>
	</row>
	<row ProcId="732" StudyName="ROAS" ProcName="ENDO.GetDiabetesType1AndAddison" ProcDesc="Addison: Aktive med Diabetes type 1" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-562234072" LastUpdate="2013-03-19T14:17:21.897Z">
		<![CDATA[]]>
	</row>
	<row ProcId="733" StudyName="ENDO" ProcName="ENDO.GetDiabetesType1AndAddison" ProcDesc="Addison: Aktive med Diabetes type 1" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1400487208" LastUpdate="2013-03-19T14:17:44.083Z">
		<![CDATA[]]>
	</row>
	<row ProcId="734" StudyName="ENDO" ProcName="ENDO.GetEndocrineTumors" ProcDesc="Tumorer: Hypofyse, parathyroidea, binyre og familiære." ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1318321151" LastUpdate="2019-01-12T10:09:41.923Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetEndocrineTumors( @StudyId INT ) AS
BEGIN
  -- Get number of diagnoses
  SELECT ce.PersonId, count(DISTINCT cdp.ItemId ) AS HitCount
  INTO #temp
  FROM dbo.ClinDataPoint cdp
  JOIN dbo.ClinEvent ce ON ce.EventId = cdp.EventId
  WHERE ce.StudyId=@StudyId AND cdp.ItemId IN ( 5732,5733,5742,5745 ) AND cdp.EnumVal = 1
  GROUP BY ce.PersonId;
  -- Get patients
  SELECT v.PersonId,v.DOB,v.FullName,v.GroupName, 'Treff = ' + CONVERT(VARCHAR,t.HitCount) AS InfoText
  FROM dbo.ViewCaseListStub v
  JOIN #temp t ON t.PersonId = v.PersonId
  WHERE v.StudyId=@StudyId
  ORDER BY v.FullName;
END]]>
	</row>
	<row ProcId="735" StudyName="ROAS" ProcName="ENDO.GetEndocrineTumors" ProcDesc="Tumorer: Hypofyse, parathyroidea, binyre og familiære." ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-467188326" LastUpdate="2013-06-06T10:06:26.097Z">
		<![CDATA[]]>
	</row>
	<row ProcId="736" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Hyperaldosteronisme (skjema finnes)" ProcParams=":StudyId,'Hyperaldosteronism'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" ChkSum="326449766" LastUpdate="2013-06-12T09:37:18.463Z">
		<![CDATA[]]>
	</row>
	<row ProcId="737" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Feokromocytom (skjema finnes)" ProcParams=":StudyId,'Phaeochromocytoma'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" ChkSum="-1021837588" LastUpdate="2013-06-12T09:37:23.277Z">
		<![CDATA[]]>
	</row>
	<row ProcId="738" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Hypofysesvikt (skjema finnes)" ProcParams=":StudyId,'Hypopituitarism'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" ChkSum="-1515495529" LastUpdate="2013-06-12T09:37:26.667Z">
		<![CDATA[]]>
	</row>
	<row ProcId="739" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Acromegali (skjema finnes)" ProcParams=":StudyId,'Acromegaly'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" ChkSum="1888213436" LastUpdate="2013-06-12T09:37:30.183Z">
		<![CDATA[]]>
	</row>
	<row ProcId="740" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Cushing (skjema finnes)" ProcParams=":StudyId,'Cushing'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" ChkSum="1855591167" LastUpdate="2013-06-12T09:37:38.103Z">
		<![CDATA[]]>
	</row>
	<row ProcId="741" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Hyperparatyroidisme (skjema finnes)" ProcParams=":StudyId,'Hyperparathyroidism'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" ChkSum="-2114246355" LastUpdate="2013-06-12T09:37:43.387Z">
		<![CDATA[]]>
	</row>
	<row ProcId="742" StudyName="ENDO" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Hyperprolaktinemi (skjema finnes)" ProcParams=":StudyId,'Hyperprolactinemia'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" ChkSum="-246973744" LastUpdate="2013-06-12T09:37:45.760Z">
		<![CDATA[]]>
	</row>
	<row ProcId="743" StudyName="TEST" ProcName="dbo.GetCaseListByFormName" ProcDesc="Diagnose: Test Addison som parameter" ProcParams=":StudyId,'Addison'" ListId="CASE" GrantTo="public" InfoCaption="Siste skjema" ChkSum="872717929" LastUpdate="2013-06-12T09:36:06.120Z">
		<![CDATA[]]>
	</row>
	<row ProcId="744" StudyName="ROAS" ProcName="dbo.GetActiveDeceased" ProcDesc="Døde: Døde uten Død som status" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="736217746" LastUpdate="2019-01-03T08:59:44.560Z">
		<![CDATA[CREATE PROCEDURE dbo.GetActiveDeceased( @StudyId INT ) AS
BEGIN
  select v.*,'Død ' + CONVERT(VARCHAR,p.DeceasedDate,106)+ ' ('+ss.StatusText+')' AS InfoText FROM 
  dbo.ViewActiveCaseListStub v
  JOIN dbo.StudyCase sc ON sc.StudyId=v.StudyId AND sc.PersonId=v.PersonId
  JOIN dbo.StudyStatus ss ON ss.StudyId=v.StudyId AND ss.StatusId=sc.StatusId
  JOIN dbo.Person p ON p.PersonId=v.PersonId
  WHERE (not p.DeceasedDate IS NULL) AND ( sc.StatusId<>2 ) AND ( v.StudyId=@StudyId )
  ORDER BY p.DeceasedDate DESC
END]]>
	</row>
	<row ProcId="745" StudyName="ROAS" ProcName="ROAS.GetRoasNumbersMissingAddison" ProcDesc="Prosess: Prøvenummer mangler (Addison)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6311" InfoCaption="Prøvenummer" ChkSum="-1247724948" LastUpdate="2019-01-03T08:59:45.367Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetRoasNumbersMissingAddison ( @StudyId INT ) AS
BEGIN
  SELECT v.*, ISNULL(CONVERT(VARCHAR, CONVERT(INT, a.Quantity)), 'Mangler') AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastEnumValuesTable( 6090, NULL ) b ON b.PersonId = v.PersonId AND ( b.EnumVal IN (1,2,3,4,5) )
  LEFT JOIN dbo.GetLastQuantityTable( 6082, NULL) a ON a.PersonId = v.PersonId
  WHERE v.StudyId = @StudyId AND a.Quantity IS NULL
  ORDER BY v.PersonId
END]]>
	</row>
	<row ProcId="746" StudyName="ENDO" ProcName="ENDO.GetSynacthenPatientForms" ProcDesc="Studier: Synacthen pasientskjema" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6614" ChkSum="41448003" LastUpdate="2017-08-23T08:13:16.770Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetSynacthenPatientForms( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId,v.DOB, v.FullName, v.GroupName, 'Synacthenskjema: ' + dbo.ShortTime( f.EventTime) AS InfoText
  FROM dbo.GetLastFormTable( 519, NULL ) f
  JOIN  dbo.ViewCaseListStub v on v.PersonId = f.PersonId
  WHERE StudyId = @StudyId
END]]>
	</row>
	<row ProcId="747" StudyName="ENDO" ProcName="ENDO.GetAddisonOvaryFailure" ProcDesc="Addison: Ovarialsvikt" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6400" InfoCaption="Diagnoseår og type" ChkSum="-229742289" LastUpdate="2019-01-03T08:59:46.060Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetAddisonOvaryFailure( @StudyId INT ) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, v.GenderId,
    'Addison diagnoseår ' + ISNULL(CONVERT(VARCHAR, CONVERT(INT, T6089.Quantity)), 'mangler') + ', ' +
    ISNULL(T6090.OptionText, '(subtype mangler)') + '.' AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  -- Varianter av registrering av Addison
    LEFT JOIN dbo.GetLastEnumValuesTable(6090,NULL) AS T6090 ON T6090.PersonId = v.PersonId
    LEFT JOIN dbo.GetLastEnumValuesTable(6299,NULL) AS T6299 ON T6299.PersonId = v.PersonId
    LEFT JOIN dbo.GetLastQuantityTable(6089,NULL) AS T6089 ON T6089.PersonId = v.PersonId
  -- Ovarialsvikt som variabel
    LEFT JOIN dbo.GetLastEnumValuesTable(6318,NULL) AS T6318 ON T6318.PersonId = v.PersonId
  -- Antistoff indekser
    LEFT JOIN dbo.GetLastQuantityTable(6073,NULL) AS T6073 ON T6073.PersonId = v.PersonId
    LEFT JOIN dbo.GetLastQuantityTable(6044,NULL) AS T6044 ON T6044.PersonId = v.PersonId
  WHERE ( v.StudyId = @StudyId AND v.GenderId = 2 ) 
    AND ( T6090.EnumVal = 1 OR T6299.EnumVal = 1 OR T6089.Quantity > 1900) 
    AND ( T6318.EnumVal= 1 OR T6073.Quantity>=65 OR T6044.Quantity >=200 )
END
]]>
	</row>
	<row ProcId="748" StudyName="ROAS" ProcName="ENDO.GetAddisonOvaryFailure" ProcDesc="Addison: Ovarialsvikt" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6400" InfoCaption="Diagnoseår og type" ChkSum="137229807" LastUpdate="2017-01-17T07:39:28.613Z">
		<![CDATA[]]>
	</row>
	<row ProcId="749" StudyName="ROAS" ProcName="ROAS.GetAddisonPatientsAlive" ProcDesc="Addison: Levende med diagnoseår og subtype" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6400" HelpText="Alle levende personer med Addisons sykdom, basert på en kombinasjon av variabel 6089 (diagnoseår), 6090 (type) og 6299 (kategorisk ja/nei). " ChkSum="-1686660352" LastUpdate="2019-12-17T17:52:16.960Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetAddisonPatientsAlive (@StudyId INT) AS
BEGIN
  SELECT v.PersonId, v.DOB, v.FullName, v.GroupName, v.GenderId,
    'Diagnoseår ' + ISNULL(CONVERT(VARCHAR, CONVERT(INT, T6089.Quantity)), 'mangler') + ', ' +
    ISNULL(T6090.OptionText, '(subtype mangler)') + '.' AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.Person p ON p.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastEnumValuesTable( 6090, NULL ) AS T6090 ON T6090.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastEnumValuesTable( 6299, NULL ) AS T6299 ON T6299.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastQuantities( 6089 ) AS T6089 ON T6089.PersonId = v.PersonId
  WHERE ( v.StudyId = @StudyId ) 
  AND ( T6090.EnumVal > 0 OR T6299.EnumVal = 1 OR T6089.Quantity > 1900 ) 
  AND ( NOT ISNULL( T6299. EnumVal, 0 ) IN (2,3) )
  AND p.DeceasedDate IS NULL;
END]]>
	</row>
	<row ProcId="750" StudyName="ROAS" ProcName="ROAS.GetAddisonPatientsWithStatus" ProcDesc="Addison: Alle med status folkeregister" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6602" HelpText="Alle med Addisons sykdom, levende og døde." ChkSum="-1313896090" LastUpdate="2019-12-17T18:32:19.010Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetAddisonPatientsWithStatus( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId, p.DOB, p.ReverseName AS FullName, p.DeceasedInd, p.NationalId, p.GenderId,
    CASE p.DeceasedInd 
      WHEN 0 THEN 'Levende'
      WHEN 1 THEN 'Død' 
    END AS GroupName,
    'Dødsdato: ' + CONVERT( VARCHAR, p.DeceasedDate, 104 ) AS InfoText
  FROM Diagnose.AddisonInferred ai
  JOIN dbo.Person p ON p.PersonId = ai.PersonId
  ORDER BY p.PersonId;
END]]>
	</row>
	<row ProcId="751" StudyName="ROAS" ProcName="PROM.GetCaseListMyPendingProms" ProcDesc="PROM: Mine ventende PROM-skjema" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6631" ChkSum="734854758" LastUpdate="2017-11-18T08:49:31.130Z">
		<![CDATA[]]>
	</row>
	<row ProcId="752" StudyName="ROAS" ProcName="PROM.GetCaseListMyCompletedProms" ProcDesc="PROM: Mine utfylte PROM-skjema" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6631" ChkSum="-403560327" LastUpdate="2017-11-18T08:41:36.077Z">
		<![CDATA[]]>
	</row>
	<row ProcId="753" StudyName="ROAS" ProcName="ROAS.GetCaseListConsentBefore16" ProcDesc="Samtykke: Alle med barnesamtykke" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18000" HelpText="Alle med barnesamtykke, uansett alder." ChkSum="-336159069" LastUpdate="2019-01-03T08:59:47.420Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetCaseListConsentBefore16( @StudyId INT )  AS
BEGIN
  SELECT v.*,s.OptionText AS InfoText  FROM dbo.GetLastEnumValuesTable( 2143, NULL ) s
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId=s.PersonId
  WHERE s.EnumVal = 2 AND v.StudyId = @StudyId
  ORDER BY DOB DESC
END]]>
	</row>
	<row ProcId="754" StudyName="ROAS" ProcName="ROAS.GetCaseListConsentUpdateNeeded" ProcDesc="Samtykke: Trenger nytt samtykke" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18000" HelpText="Alle med gammel versjon av samtykke, uansett alder." ChkSum="-644012716" LastUpdate="2019-01-03T08:59:48.450Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetCaseListConsentUpdateNeeded( @StudyId INT ) AS
BEGIN
  SELECT v.*, s.OptionText AS InfoText 
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastEnumValuesTable( 2143, NULL ) s ON s.PersonId = v.PersonId
  WHERE s.EnumVal = 3 AND v.StudyId = @StudyId; 
END;]]>
	</row>
	<row ProcId="755" StudyName="ROAS" ProcName="ROAS.GetCaseListAdultConsentNeeded" ProcDesc="Samtykke: Trenger voksensamtykke" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18000" HelpText="Alle som har barnesamtykke, men har fylt 16 år nå." ChkSum="805583023" LastUpdate="2019-01-03T08:59:50.247Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetCaseListAdultConsentNeeded( @StudyId INT ) AS
BEGIN
  SELECT v.*, s.OptionText AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastEnumValuesTable( 2143, NULL ) s ON s.PersonId = v.PersonId
  WHERE s.EnumVal = 2 AND DATEDIFF( YEAR, v.DOB, GETDATE()) >= 16 AND v.StudyId=@StudyId;
END;]]>
	</row>
	<row ProcId="756" StudyName="ROAS" ProcName="ROAS.GetCaseListGroupMismatch" ProcDesc="PROM: Avvikende sted for oppfølging" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18000" HelpText="Oversikt over aktive pasienter som har oppfølgningssted (variabel 3008) registert, og der valget ikke samvarer med gruppen på registeret." ChkSum="1600287967" LastUpdate="2019-05-13T11:15:58.640Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetCaseListGroupMismatch( @StudyId INT ) AS
BEGIN
  SELECT v.*, pr.OptionText AS InfoText
  FROM dbo.GetLastEnumValuesTable( 3008, NULL ) pr
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = pr.PersonId AND v.StudyId = @StudyId
  WHERE pr.OptionText <> v.GroupName AND pr.EnumVal > 0
  ORDER BY PersonId;
END;
]]>
	</row>
	<row ProcId="757" StudyName="ROAs" ProcName="ROAS.GetCaseListFamily" ProcDesc="Familier: Pasienter i familegrupper" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18000" ChkSum="2010401531" LastUpdate="2019-11-20T09:37:06.427Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetCaseListFamily( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId,p.DOB, p.ReverseName AS FullName, CONCAT( 'Familie #',CONVERT(INT,q1484.Quantity),'.') AS GroupName, p.GenderId,
  q1485.TextVal AS InfoText
  FROM dbo.Person p
  JOIN dbo.GetLastQuantityTable( 1484, NULL ) q1484 ON q1484.PersonId = p.PersonId
  LEFT JOIN dbo.GetLastTextValuesTable( 1485,NULL) q1485 ON q1485.PersonId = p.PersonId
  ORDER BY q1484.Quantity, p.DOB;
END;

]]>
	</row>
	<row ProcId="758" StudyName="ROAS" ProcName="ROAS.GetAddisonPatientsUnspecifiedType" ProcDesc="Addison: Uspesifisert og andre typer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="19000" HelpText="Populasjonen er laget for å gjøre det lett finne fram til pasienter som kan reklassifiseres til spesifikke Addison subtyper." ChkSum="-1848473364" LastUpdate="2019-12-17T18:38:50.967Z">
		<![CDATA[CREATE PROCEDURE ROAS.GetAddisonPatientsUnspecifiedType( @StudyId INT ) AS
BEGIN
  SELECT v.*,
  CASE ai.T6090 
    WHEN 99 THEN 'Andre typer'
    ELSE 'Uoppgitt type'
  END AS InfoText
  FROM Diagnose.AddisonInferred ai
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = ai.PersonId
  WHERE ISNULL(ai.T6090,0) IN ( 0,99 ) AND v.StudyId = @StudyId;
END]]>
	</row>
	<row ProcId="800" StudyName="HOFTE" ProcName="dbo.GetCaseListLastGamma" ProcDesc="Operasjon: Gammanagling" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1506179999" LastUpdate="2013-09-03T11:41:34.540Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListLastGamma( @StudyId INT ) AS
BEGIN
  EXEC GetCaseListLastForm @StudyId, 'HofteGamma'
END

]]>
	</row>
	<row ProcId="801" StudyName="VREX" ProcName="VREX.GetCaseListRandomization" ProcDesc="Randomisering" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6634" CompatibilityLevel="100" ChkSum="-225594785" LastUpdate="2019-01-17T11:55:28.630Z">
		<![CDATA[CREATE PROCEDURE VREX.GetCaseListRandomization( @StudyId INT ) AS
BEGIN
  SELECT v.*, 'RAN#' + FORMAT(q.Quantity,'00#') AS InfoText
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastQuantityTable( 10185, NULL ) q ON q.PersonId = v.PersonId
  WHERE @StudyId = @StudyId;
END]]>
	</row>
	<row ProcId="802" StudyName="FETTVEST" ProcName="dbo.GetCaseListEkkoSubstudie" ProcDesc="Utvalg: Ekko-substudie" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6036" MaxVersion="6036" ChkSum="1284382824" LastUpdate="2019-06-28T12:08:34.330Z">
		<![CDATA[CREATE PROCEDURE dbo.GetCaseListEkkoSubstudie( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId, p.DOB, p.FullName, p.GenderId, ISNULL(c.CenterName,ss.StatusText) AS InfoText 
  FROM dbo.Person p
  JOIN dbo.StudCase sc ON sc.PersonId = p.PersonId
  JOIN dbo.Study s on s.StudyId = sc.StudyId AND s.StudyName = 'EKKO'
  JOIN dbo.StudCase sf ON sf.PersonId = sc.PersonId
  JOIN dbo.StudyStatus ss ON ss.StudyId = sf.StudyId AND ss.StatusId = sf.StatusId
  LEFT JOIN dbo.StudyGroup sg ON sg.StudyId = sf.StudyId AND sg.GroupId = sf.GroupId
  LEFT JOIN dbo.StudyCenter c on c.CenterId = sg.CenterId
  WHERE sf.StudyId = @StudyId;
END;]]>
	</row>
	<row ProcId="1001" StudyName="GBD" ProcName="GBD.RapportAvvik" ProcDesc="Avviksrapport" ProcParams=":StudyId, :StartAt, :StopAt, :OrderBy" ListId="FR" GrantTo="public" MinVersion="18000" ChkSum="-1643845483" LastUpdate="2019-10-23T19:18:39.680Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportAvvik ( @StudyId INT, @StartAt DateTime = NULL, @StopAt DateTime = NULL, @OrderBy INT = 0 ) AS
BEGIN
  SET LANGUAGE Norwegian;                     
  DECLARE @StartEventNum INT;
  DECLARE @StopEventNum INT;
  
  IF @StartAt IS NULL SET @StartAt = GETDATE() - 365;
  IF @StopAt IS NULL SET @StopAt = GETDATE();
  
  /* Calculate EventNums, because EventNum is indexed while EventTime is not */
  
  SET @StartEventNum = dbo.FnEventTimeToNum( @StartAt );
  SET @StopEventNum = dbo.FnEventTimeToNum( @StopAt );
  
  /* Select data into temporary table */
  
  SELECT 
    sc.PersonId, sg.CenterId, sg.GroupId, sg.GroupName, 
    ce.EventId, ce.EventTime, 
    cf.ClinFormId, cf.FormStatus, cf.FormComplete, cf.Comment,
    dbo.MonthYear( ce.EventTime ) AS MonthYear,
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ISO_WEEK, ce.EventTime ) AS EventWeek,
    v6402.EnumVal AS E6402,
    a6402.OptionText AS T6402,
    CONVERT(VARCHAR(16),v6410.TextVal) AS T6410,
    v8507.EnumVal AS E8507,
    a8507.OptionText AS T8507,
    v8508.EnumVal AS E8508,
    a8508.OptionText AS T8508,
    v8509.EnumVal AS E8509,
    a8509.OptionText AS T8509,
    v8510.EnumVal AS E8510,
    a8510.OptionText AS T8510,
    v8511.EnumVal AS E8511,
    a8511.OptionText AS T8511,
    v8512.EnumVal AS E8512,
    a8512.OptionText AS T8512,
    CONVERT(VARCHAR(16),v8513.TextVal) AS T8513,
    v8514.EnumVal AS E8514,
    a8514.OptionText AS T8514,
    CONVERT(VARCHAR(128),v8518.TextVal) AS T8518,
    CONVERT(VARCHAR(16),v8519.TextVal) AS T8519,
    v9105.EnumVal AS E9105,
    a9105.OptionText AS T9105,
    cf.CreatedAt, cf.CreatedBy, 
    pcr.Signature AS CreatedBySign, pcr.FullName AS CreatedByName, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime DESC ) AS OrderNo 
  INTO #temp
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) AND ( ce.StudyId = @StudyId )
  JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId 
  JOIN dbo.StudCase sc ON ( sc.StudyId = ce.StudyId ) AND ( sc.PersonId = ce.PersonId ) 
  JOIN dbo.StudyGroup sg ON ( sg.StudyId = ce.StudyId ) AND ( sg.GroupId = ce.GroupId ) 
  JOIN dbo.UserList my ON ( my.UserId = USER_ID() ) 
  JOIN dbo.StudyCenter c ON ( c.CenterId = sg.CenterId ) 
  JOIN dbo.UserList ucr ON ucr.UserId = cf.CreatedBy
  LEFT JOIN dbo.StudyUser su ON ( su.StudyId = sg.StudyId ) AND ( su.UserId = USER_ID() ) 
  LEFT JOIN dbo.Person pcr ON pcr.PersonId = ucr.PersonId 
    LEFT JOIN dbo.ClinDataPoint v6402 ON v6402.EventId=ce.EventId and v6402.ItemId = 6402
      LEFT JOIN dbo.MetaItemAnswer a6402 ON a6402.ItemId=6402 and v6402.EnumVal = a6402.OrderNumber
    LEFT JOIN dbo.ClinDataPoint v6410 ON v6410.EventId=ce.EventId and v6410.ItemId = 6410
    LEFT JOIN dbo.ClinDataPoint v8507 ON v8507.EventId=ce.EventId and v8507.ItemId = 8507
      LEFT JOIN dbo.MetaItemAnswer a8507 ON a8507.ItemId=8507 and v8507.EnumVal = a8507.OrderNumber
    LEFT JOIN dbo.ClinDataPoint v8508 ON v8508.EventId=ce.EventId and v8508.ItemId = 8508
      LEFT JOIN dbo.MetaItemAnswer a8508 ON a8508.ItemId=8508 and v8508.EnumVal = a8508.OrderNumber
    LEFT JOIN dbo.ClinDataPoint v8509 ON v8509.EventId=ce.EventId and v8509.ItemId = 8509
      LEFT JOIN dbo.MetaItemAnswer a8509 ON a8509.ItemId=8509 and v8509.EnumVal = a8509.OrderNumber
    LEFT JOIN dbo.ClinDataPoint v8510 ON v8510.EventId=ce.EventId and v8510.ItemId = 8510
      LEFT JOIN dbo.MetaItemAnswer a8510 ON a8510.ItemId=8510 and v8510.EnumVal = a8510.OrderNumber
    LEFT JOIN dbo.ClinDataPoint v8511 ON v8511.EventId=ce.EventId and v8511.ItemId = 8511
      LEFT JOIN dbo.MetaItemAnswer a8511 ON a8511.ItemId=8511 and v8511.EnumVal = a8511.OrderNumber
    LEFT JOIN dbo.ClinDataPoint v8512 ON v8512.EventId=ce.EventId and v8512.ItemId = 8512
      LEFT JOIN dbo.MetaItemAnswer a8512 ON a8512.ItemId=8512 and v8512.EnumVal = a8512.OrderNumber
    LEFT JOIN dbo.ClinDataPoint v8513 ON v8513.EventId=ce.EventId and v8513.ItemId = 8513
    LEFT JOIN dbo.ClinDataPoint v8514 ON v8514.EventId=ce.EventId and v8514.ItemId = 8514
      LEFT JOIN dbo.MetaItemAnswer a8514 ON a8514.ItemId=8514 and v8514.EnumVal = a8514.OrderNumber
    LEFT JOIN dbo.ClinDataPoint v8518 ON v8518.EventId=ce.EventId and v8518.ItemId = 8518
    LEFT JOIN dbo.ClinDataPoint v8519 ON v8519.EventId=ce.EventId and v8519.ItemId = 8519
    LEFT JOIN dbo.ClinDataPoint v9105 ON v9105.EventId=ce.EventId and v9105.ItemId = 9105
      LEFT OUTER JOIN dbo.MetaItemAnswer a9105 ON a9105.ItemId=9105 and v9105.EnumVal = a9105.OrderNumber
  WHERE ( cf.DeletedAt IS NULL )
    AND ( mf.FormName = 'GbdAvvik' )
    AND ( ( su.GroupId = sg.GroupId ) OR ( ISNULL( su.ShowMyGroup, 0 ) = 0 ) ) 
    AND ( sg.CenterId = my.CenterId ) 
    AND ( sc.StudyId = @StudyId ) 
    AND ( ce.EventNum >= @StartEventNum ) AND ( ce.EventNum < @StopEventNum );
    
  /* Select final dataset from temp table */
  
  IF @OrderBy=0 
    SELECT * FROM #temp ORDER BY EventTime;
  IF @OrderBy=1 
    SELECT * FROM #temp ORDER BY E8514, T8507;
  IF @OrderBy=2 
    SELECT * FROM #temp ORDER BY E9105, EventTime;
  IF @OrderBy=3 
    SELECT * FROM #temp ORDER BY T8512, EventTime;
  IF @OrderBy=4
    SELECT * FROM #temp ORDER BY E8507, EventTime;
END
]]>
	</row>
	<row ProcId="1002" StudyName="GBD" ProcName="GBD.RapportBeslutninger" ProcDesc="Beslutninger" ProcParams=":StudyId" ListId="FR" GrantTo="public" ChkSum="-436620943" LastUpdate="2019-01-03T08:59:51.247Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportBeslutninger( @StudyId INT ) AS
BEGIN
  SET LANGUAGE Norwegian; 
  SELECT * FROM
  (
    SELECT 
      v.PersonId, v.DOB, v.FullName, v.GroupName, p.GenderId, p.NationalId, -- Kan også brukes som populasjon
      ce.EventId, ce.EventTime, 
      cf.ClinFormId, cf.FormStatus, cf.FormComplete, cf.Comment,
      dbo.MonthYear( ce.EventTime ) AS MonthYear, 
      DATENAME( mm, ce.EventTime ) AS MonthName,
      DATEPART( hh, ce.EventTime ) AS EventHour,
      DATEPART( ww, ce.EventTime ) AS EventWeek,
      v3437.EnumVal AS E3437, a3437.OptionText AS T3437, -- Gjenopplivning
      v2832.EnumVal AS E2832, a2832.OptionText AS T2832, -- Behandlingsintensitet
      v3439.EnumVal AS E3439, a3439.OptionText AS T3439, -- Organdonasjon
      v3440.EnumVal AS E3440, a3440.OptionText AS T3440, -- Kan obduseres
      v3441.EnumVal AS E3441, a3441.OptionText AS T3441, -- Kan motta tranfusjon
      cf.CreatedAt, cf.CreatedBy, 
      pcr.Signature AS CreatedBySign, pcr.FullName AS CreatedByName, 
      ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY ce.EventTime DESC ) AS ReverseOrder
    FROM dbo.ClinForm cf
    JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId 
    JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId 
    JOIN dbo.ViewActiveCaseListStub v ON v.PersonId = ce.PersonId
    JOIN dbo.Person p ON p.PersonId = v.PersonId 
    JOIN dbo.UserList ucr ON ucr.UserId = cf.CreatedBy
    LEFT JOIN dbo.Person pcr ON pcr.PersonId = ucr.PersonId 
    LEFT JOIN dbo.ClinDataPoint v3437 ON v3437.EventId=ce.EventId AND v3437.ItemId = 3437
      LEFT JOIN dbo.MetaItemAnswer a3437 ON a3437.ItemId=3437 AND v3437.EnumVal=a3437.OrderNumber
    LEFT JOIN dbo.ClinDataPoint v2832 ON v2832.EventId=ce.EventId AND v2832.ItemId = 2832
      LEFT JOIN dbo.MetaItemAnswer a2832 ON a2832.ItemId=2832 AND v2832.EnumVal=a2832.OrderNumber
    LEFT JOIN dbo.ClinDataPoint v3439 ON v3439.EventId=ce.EventId AND v3439.ItemId = 3439
      LEFT JOIN dbo.MetaItemAnswer a3439 ON a3439.ItemId=3439 AND v3439.EnumVal=a3439.OrderNumber
    LEFT JOIN dbo.ClinDataPoint v3440 ON v3440.EventId=ce.EventId AND v3440.ItemId = 3440
      LEFT JOIN dbo.MetaItemAnswer a3440 ON a3440.ItemId=3440 AND v3440.EnumVal=a3440.OrderNumber
    LEFT JOIN dbo.ClinDataPoint v3441 ON v3441.EventId=ce.EventId AND v3441.ItemId = 3441
      LEFT JOIN dbo.MetaItemAnswer a3441 ON a3441.ItemId=3441 AND v3441.EnumVal = a3441.OrderNumber
    WHERE ( cf.DeletedAt IS NULL ) AND ( v.StudyId = @StudyId ) AND ( mf.FormName='GBD_BESLUTNINGER' )
  ) allforms
  WHERE allforms.ReverseOrder = 1
  ORDER BY GroupName, FullName;
END]]>
	</row>
	<row ProcId="1003" StudyName="GBD" ProcName="GBD.AntibioticReport" ProcDesc="Antibiotikakurer" ProcParams=":StartAt,:StopAt" ListId="FR" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" ChkSum="-299964195" LastUpdate="2019-08-21T09:57:42.223Z">
		<![CDATA[CREATE PROCEDURE GBD.AntibioticReport( @StartAt DateTime, @StopAt DateTime )
AS
BEGIN
  SET LANGUAGE Norwegian;
  SELECT 
    p.PersonId,p.GroupName,DATEPART(month,StartAt) as MonthNo,
    dbo.MonthYear(StartAt) as MonthName,StartAt,StopAt,
    dt.StartReason,dt.StopReason,dt.ATC,dt.DrugName,dt.DrugForm,dt.Dose24hDD,up.FullName 
  FROM dbo.DrugTreatment dt
    JOIN dbo.ViewActiveCaseListStub p ON p.PersonId=dt.PersonId
    JOIN dbo.Study s ON s.StudyId=p.StudyId AND s.StudyName='GBD'
    JOIN dbo.UserList ul ON ul.UserId=dt.CreatedBy
    JOIN dbo.UserList my ON my.UserId=USER_ID()
    JOIN dbo.Person up ON up.PersonId=ul.PersonId
  WHERE dt.ATC LIKE 'J01%' AND ATC<>'J01XX05'
    AND dt.StartAt >= @StartAt AND dt.StartAt < @StopAt 
    AND ABS(DATEDIFF(day,dt.StopAt,dt.StartAt )) > 1 
  ORDER BY MonthNo,MonthName,dt.StartAt
END]]>
	</row>
	<row ProcId="1004" StudyName="GBD" ProcName="GBD.InfectionReport" ProcDesc="Infeksjonsregistreringer" ProcParams=":StudyId,:StartAt,:StopAt" ListId="FR" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" ChkSum="1968438868" LastUpdate="2019-08-21T09:57:42.223Z">
		<![CDATA[CREATE PROCEDURE GBD.InfectionReport ( @StudyId INT, @StartAt DateTime = NULL, @StopAt DateTime = NULL ) AS
BEGIN
  SET LANGUAGE Norwegian; 
  IF @StartAt IS NULL SET @StartAt = GETDATE()-365;
  IF @StopAt IS NULL SET @StopAt = GETDATE();
  /* Conform to Population field names */
  SELECT 
    sc.PersonId, sg.CenterId, sg.GroupId, sg.GroupName, 
    ce.EventId, ce.EventTime, 
    cf.ClinFormId, cf.FormStatus, cf.FormComplete, cf.Comment,
    dbo.MonthYear( ce.EventTime ) AS MonthYear,
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ww, ce.EventTime ) AS EventWeek,
    v768.DTVal AS T768,
    v769.EnumVal AS E769,
    a769.OptionText AS T769,
    CONVERT(VARCHAR(16),v771.TextVal) AS T771,
    v777.EnumVal AS E777,
    a777.OptionText AS T777,
    v778.EnumVal AS E778,
    a778.OptionText AS T778,
    CONVERT(VARCHAR(16),v3495.TextVal) AS T3495,
    v3498.EnumVal AS E3498,
    a3498.OptionText AS T3498,
    v3499.EnumVal AS E3499,
    a3499.OptionText AS T3499,
    v3500.DTVal AS T3500,
    cf.CreatedAt, cf.CreatedBy, 
    pcr.Signature AS CreatedBySign, pcr.FullName AS CreatedByName, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime DESC ) AS OrderNo 
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) 
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  JOIN dbo.StudCase sc ON ( sc.StudyId = ce.StudyId ) AND ( sc.PersonId = ce.PersonId ) 
  JOIN dbo.StudyGroup sg ON ( sg.StudyId = ce.StudyId ) AND ( sg.GroupId = ce.GroupId ) 
  JOIN dbo.StudyUser su ON ( su.StudyId = sg.StudyId ) AND ( su.UserId = USER_ID() ) 
  JOIN dbo.UserList my ON ( my.UserId = USER_ID() ) 
  JOIN dbo.StudyCenter c ON ( c.CenterId = sg.CenterId ) 
  JOIN dbo.UserList ucr ON ucr.UserId = cf.CreatedBy
  LEFT OUTER JOIN dbo.Person pcr ON pcr.PersonId = ucr.PersonId 
    LEFT OUTER JOIN dbo.ClinDataPoint v768 ON v768.EventId=ce.EventId AND v768.ItemId = 768
    LEFT OUTER JOIN dbo.ClinDataPoint v769 ON v769.EventId=ce.EventId AND v769.ItemId = 769
      LEFT OUTER JOIN dbo.MetaItemAnswer a769 ON a769.ItemId=769 AND v769.EnumVal = a769.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v771 ON v771.EventId=ce.EventId AND v771.ItemId = 771
    LEFT OUTER JOIN dbo.ClinDataPoint v777 ON v777.EventId=ce.EventId AND v777.ItemId = 777
      LEFT OUTER JOIN dbo.MetaItemAnswer a777 ON a777.ItemId=777 AND v777.EnumVal = a777.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v778 ON v778.EventId=ce.EventId AND v778.ItemId = 778
      LEFT OUTER JOIN dbo.MetaItemAnswer a778 ON a778.ItemId=778 AND v778.EnumVal = a778.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v3495 ON v3495.EventId=ce.EventId AND v3495.ItemId = 3495
    LEFT OUTER JOIN dbo.ClinDataPoint v3498 ON v3498.EventId=ce.EventId AND v3498.ItemId = 3498
      LEFT OUTER JOIN dbo.MetaItemAnswer a3498 ON a3498.ItemId=3498 AND v3498.EnumVal = a3498.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v3499 ON v3499.EventId=ce.EventId AND v3499.ItemId = 3499
      LEFT OUTER JOIN dbo.MetaItemAnswer a3499 ON a3499.ItemId=3499 AND v3499.EnumVal = a3499.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v3500 ON v3500.EventId=ce.EventId AND v3500.ItemId=3500
  WHERE ( cf.DeletedAt IS NULL )
    AND ( mf.FormName='GBD_INFECTION' )
    AND ( ( su.GroupId = sg.GroupId ) OR ( su.ShowMyGroup = 0 ) ) 
    AND ( sg.CenterId = my.CenterId ) 
    AND ( sc.StudyId = @StudyId ) 
    AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  ORDER BY ce.EventTime DESC;
END]]>
	</row>
	<row ProcId="1006" StudyName="GBD" ProcName="GBD.AnticholinergicDrugUse" ProcDesc="Antikolinergiske midler" ListId="FR" GrantTo="public" ChkSum="1652532668" LastUpdate="2014-04-12T15:31:23.543Z">
		<![CDATA[CREATE PROCEDURE GBD.AnticholinergicDrugUse AS
BEGIN
  DECLARE @Total FLOAT;
  SELECT @Total = COUNT(*)
    FROM dbo.Person p 
    JOIN dbo.StudCase sc ON sc.PersonId=p.PersonId AND sc.StudyId=2
    JOIN dbo.StudyStatus ss ON ss.StudyId=sc.StudyId AND ss.StatusId=sc.FinState AND ss.StatusActive=1
    JOIN dbo.StudyGroup sg ON sg.StudyId=sc.StudyId AND sg.GroupId=sc.GroupId AND sg.GroupActive=1 
    JOIN dbo.StudyCenter c ON c.CenterId=sg.CenterId AND c.CenterActive=1;
  SELECT kb.ATC,kb.DrugName,kb.AlertLevel,count(*) as Antall,count(*) / @Total * 100 as PercentUse
    FROM dbo.KBAnticholinDrug kb join dbo.OngoingTreatment ot on ot.ATC=kb.ATC
    JOIN dbo.Person p ON p.PersonId=ot.PersonId
    JOIN dbo.StudCase sc ON sc.PersonId=p.PersonId AND sc.StudyId=2
    JOIN dbo.StudyStatus ss ON ss.StudyId=sc.StudyId AND ss.StatusId=sc.FinState AND ss.StatusActive=1
    JOIN dbo.StudyGroup sg ON sg.StudyId=sc.StudyId AND sg.GroupId=sc.GroupId AND sg.GroupActive=1
    JOIN dbo.StudyCenter c ON c.CenterId=sg.CenterId AND c.CenterActive=1
  GROUP BY kb.ATC,kb.DrugName,kb.AlertLevel 
  ORDER BY count(*) DESC
END]]>
	</row>
	<row ProcId="1007" StudyName="GBD" ProcName="GBD.Bestillingsliste" ProcDesc="Bestillingsliste" ListId="FR" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" ChkSum="-1755447422" LastUpdate="2019-08-21T09:57:42.223Z">
		<![CDATA[CREATE PROCEDURE GBD.Bestillingsliste AS
BEGIN
  SELECT a.ATCCode, a.ATCName, dbo.GetFirstWord( dt.DrugName ) as DrugName, dt.DrugForm, NULLIF(dt.Strength,0) AS Strength, dt.StrengthUnit,
     count(*) as PasAnt, NULLIF( sum(dt.Dose24hCount),0) AS Ant24h,CONVERT( INT, NULLIF( sum(dt.Dose24hCount)*14,0) ) AS Ant14d
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.OngoingTreatment dt ON dt.PersonId=v.PersonId
  JOIN dbo.KBATCIndex a ON dt.ATC=a.ATCCode
  JOIN dbo.MetaTreatType mt ON mt.TreatType=dt.TreatType
  JOIN dbo.MetaPackType mp ON mp.PackType=dt.PackType
  WHERE dt.PackType <> 'M'
  GROUP BY a.ATCCode, a.ATCName,dbo.GetFirstWord( dt.DrugName ),dt.DrugForm,dt.Strength,dt.StrengthUnit 
  ORDER BY a.ATCCode, Strength
END]]>
	</row>
	<row ProcId="1008" StudyName="BAR" ProcName="BAR.ReportInclusion" ProcDesc="Inklusjonsrapport" ProcParams=":StudyId" ListId="FR" GrantTo="public" ChkSum="-550548514" LastUpdate="2019-01-13T17:21:43.070Z">
		<![CDATA[CREATE PROCEDURE BAR.ReportInclusion ( @StudyId INT ) AS
BEGIN
  SELECT p.PersonId, p.DOB, p.FullName, sg.GroupName, ce.EventTime, ce.StudyId, cf.ClinFormId, 
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ww, ce.EventTime ) AS EventWeek,
    CONVERT(VARCHAR(16),v6166.TextVal) as T6166,
    v6168.EnumVal as E6168,
    a6168.OptionText as T6168,
    v6169.DTVal as T6169,
    v6170.Quantity as T6170,
    v6242.EnumVal as E6242,
    a6242.OptionText as T6242,
    v6243.EnumVal as E6243,
    a6243.OptionText as T6243,
    v6245.EnumVal as E6245,
    a6245.OptionText as T6245,
    v6246.EnumVal as E6246,
    a6246.OptionText as T6246,
    v6247.EnumVal as E6247,
    a6247.OptionText as T6247,
    v6248.EnumVal as E6248,
    a6248.OptionText as T6248,
    v8091.EnumVal as E8091,
    a8091.OptionText as T8091,
    v9319.EnumVal as E9319,
    a9319.OptionText as T9319,
    v9321.EnumVal as E9321,
    a9321.OptionText as T9321,
    cf.FormStatus, cf.FormComplete, cf.Comment,
    up.FullName AS UserFullName, up.Signature as CreatedBySign 
  INTO #temp
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) 
  JOIN dbo.StudCase sc ON ( sc.StudyId = ce.StudyId ) AND ( sc.PersonId = ce.PersonId ) 
  JOIN dbo.ViewActiveCaseListStub p ON ( p.PersonId=sc.PersonId ) 
  LEFT OUTER JOIN dbo.StudyGroup sg ON ( sg.StudyId = ce.StudyId ) AND ( sg.GroupId = ce.GroupId ) 
  LEFT OUTER JOIN dbo.UserList ul ON ul.UserId=cf.CreatedBy
  LEFT OUTER JOIN dbo.Person up ON up.PersonId=ul.PersonId 
    LEFT OUTER JOIN dbo.ClinDataPoint v6166 ON v6166.EventId=ce.EventId and v6166.ItemId=6166
    LEFT OUTER JOIN dbo.ClinDataPoint v6168 ON v6168.EventId=ce.EventId and v6168.ItemId=6168
      LEFT OUTER JOIN dbo.MetaItemAnswer a6168 ON a6168.ItemId=6168 and v6168.EnumVal=a6168.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v6169 ON v6169.EventId=ce.EventId and v6169.ItemId=6169
    LEFT OUTER JOIN dbo.ClinDataPoint v6170 ON v6170.EventId=ce.EventId and v6170.ItemId=6170
    LEFT OUTER JOIN dbo.ClinDataPoint v6242 ON v6242.EventId=ce.EventId and v6242.ItemId=6242
      LEFT OUTER JOIN dbo.MetaItemAnswer a6242 ON a6242.ItemId=6242 and v6242.EnumVal=a6242.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v6243 ON v6243.EventId=ce.EventId and v6243.ItemId=6243
      LEFT OUTER JOIN dbo.MetaItemAnswer a6243 ON a6243.ItemId=6243 and v6243.EnumVal=a6243.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v6245 ON v6245.EventId=ce.EventId and v6245.ItemId=6245
      LEFT OUTER JOIN dbo.MetaItemAnswer a6245 ON a6245.ItemId=6245 and v6245.EnumVal=a6245.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v6246 ON v6246.EventId=ce.EventId and v6246.ItemId=6246
      LEFT OUTER JOIN dbo.MetaItemAnswer a6246 ON a6246.ItemId=6246 and v6246.EnumVal=a6246.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v6247 ON v6247.EventId=ce.EventId and v6247.ItemId=6247
      LEFT OUTER JOIN dbo.MetaItemAnswer a6247 ON a6247.ItemId=6247 and v6247.EnumVal=a6247.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v6248 ON v6248.EventId=ce.EventId and v6248.ItemId=6248
      LEFT OUTER JOIN dbo.MetaItemAnswer a6248 ON a6248.ItemId=6248 and v6248.EnumVal=a6248.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v8091 ON v8091.EventId=ce.EventId and v8091.ItemId=8091
      LEFT OUTER JOIN dbo.MetaItemAnswer a8091 ON a8091.ItemId=8091 and v8091.EnumVal=a8091.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v9319 ON v9319.EventId=ce.EventId and v9319.ItemId=9319
      LEFT OUTER JOIN dbo.MetaItemAnswer a9319 ON a9319.ItemId=9319 and v9319.EnumVal=a9319.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v9321 ON v9321.EventId=ce.EventId and v9321.ItemId=9321
      LEFT OUTER JOIN dbo.MetaItemAnswer a9321 ON a9321.ItemId=9321 and v9321.EnumVal=a9321.OrderNumber
  WHERE cf.FormId=763;
  SELECT * FROM #temp ORDER BY PersonId;
END]]>
	</row>
	<row ProcId="1009" StudyName="NDV" ProcName="NDV.ReportLabDataFound" ProcDesc="Labdata registrert" ProcParams=":DiabetesType,:StartDate,:StopDate" ListId="FR" GrantTo="public" MinVersion="6000" ChkSum="9095960" LastUpdate="2019-08-19T11:32:39.167Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportLabDataFound( @DiabetesType INT, @FirstDate DateTime = NULL, @LastDate DateTime = NULL ) AS
BEGIN

  -- Inclusion period
  IF @LastDate IS NULL SET @LastDate = DATEDIFF(DAY,0,GETDATE());
  IF @FirstDate IS NULL SET @FirstDate = DATEADD( month, -15, @LastDate );

  -- Collection periods for labdata is different from inclusion
  CREATE TABLE #Dates( LabClassId INT NOT NULL PRIMARY KEY, Months INT, StartDate DateTime, LabName VARCHAR(32) );
  INSERT INTO #Dates VALUES (  6, 15, @FirstDate, 'U-Albumin/kreatinin ratio' );
  -- INSERT INTO #Dates VALUES ( 22, 12, @FirstDate ); -- Hemoglobin
  INSERT INTO #Dates VALUES ( 34, 30, @FirstDate, 'S-Totalkolesterol' );
  INSERT INTO #Dates VALUES ( 35, 30, @FirstDate, 'S-LDL-kolesterol' );
  INSERT INTO #Dates VALUES ( 36, 30, @FirstDate, 'S-Triglyserider' );
  INSERT INTO #Dates VALUES ( 37, 30, @FirstDate, 'S-HDL-kolesterol' );
  INSERT INTO #Dates VALUES ( 1058, 15, @FirstDate, 'B-HbA1c' );
  INSERT INTO #Dates VALUES ( 49, 15, @FirstDate, 'S-Kreatinin' );
  INSERT INTO #Dates VALUES ( 1075, 15, @FirstDate, 'Pt-eGFR (CKD-EPI)' );        
  IF @DiabetesType=1
  BEGIN
    INSERT INTO #Dates VALUES ( 62, 60, @FirstDate, 'S-Kobalaminer' );
    INSERT INTO #Dates VALUES ( 83, 60, @FirstDate, 'S-TSH' );
  END;
  INSERT INTO #Dates VALUES ( 124, 30, @FirstDate, 'S-ALAT' );
  UPDATE #Dates SET StartDate  = DATEADD(month,-Months,@LastDate )

  -- Get caselist for everybody with NDV_TYPE (ItemId=3196) in period
  SELECT DISTINCT ce.PersonId INTO #CaseList 
  FROM dbo.ClinEvent ce 
  JOIN dbo.StudyGroup sg ON sg.StudyId=ce.StudyId AND sg.GroupId=ce.GroupId AND sg.GroupActive=1
  JOIN dbo.UserList ul ON ul.CenterId = sg.CenterId AND ul.UserId=USER_ID()
  JOIN dbo.ClinDatapoint dp ON dp.EventId=ce.EventId AND dp.ItemId=3196
  WHERE ( ce.EventTime >= @FirstDate ) AND ( ce.EventTime < @LastDate ) AND ( dp.EnumVal = @DiabetesType );

  -- Get denominator
  DECLARE @Antall INT;
  SELECT @Antall = COUNT(*) FROM #CaseList;

  -- Count lab measurements done
  SELECT v.PersonId,lc.LabClassId,count(LabDate) as Antall
  INTO #PersonLabCount FROM #CaseList v
  JOIN dbo.LabData ld ON ld.PersonId=v.PersonId
  JOIN dbo.LabCode lc ON lc.LabCodeId=ld.LabCodeId
  JOIN #Dates d ON d.LabClassId=lc.LabClassId
  WHERE ( ld.LabDate > d.StartDate ) AND ( ld.LabDate < @LastDate )
  GROUP BY v.PersonId,lc.LabClassId;

  -- Aggregate data
  SELECT LabClassId,COUNT(*) as Teller
  INTO #FinalDataset
  FROM #PersonLabCount
  GROUP BY LabClassId;
  -- Get Result
  SELECT d.LabClassId,d.LabName AS FriendlyName,d.StartDate,d.Months,@LastDate AS StopDate,ISNULL(r.Teller,0) AS Teller,@Antall AS Nevner,
    CONVERT(DECIMAL(5,1),100*CONVERT(FLOAT,Teller)/CONVERT(FLOAT,@Antall),2) AS Andel 
  FROM #Dates d
  LEFT OUTER JOIN #FinalDataset r ON r.LabClassId=d.LabClassId
  ORDER BY d.LabClassId;
END]]>
	</row>
	<row ProcId="1010" StudyName="NDV" ProcName="NDV.ReportClinDataFound" ProcDesc="Kliniske data registrert" ProcParams=":DiabetesType,:StartDate,:StopDate" ListId="FR" GrantTo="public" MinVersion="6000" ChkSum="-225610941" LastUpdate="2019-05-28T10:23:05.217Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportClinDataFound( @DiabetesType INT, @FirstDate DateTime = NULL, @LastDate DateTime = NULL ) AS
BEGIN

  -- Inclusion period
  IF @LastDate IS NULL SET @LastDate = DATEDIFF(DAY,0,GETDATE());
  IF @FirstDate IS NULL SET @FirstDate = DATEADD( month, -15, @LastDate );

  -- Collection periods for labdata is different from inclusion
  CREATE TABLE #Dates( ItemId INT NOT NULL PRIMARY KEY, Months INT, StartDate DateTime, Caption VARCHAR(32), UnknownVal INT, OrderNo INT );
  INSERT INTO #Dates VALUES (  3196, 120, @FirstDate, 'Diabetes type', -1, 1 );
  INSERT INTO #Dates VALUES (  3389, 120, @FirstDate, 'Samtykke besvart Ja/Nei/Trukket', 4, 2 );
  INSERT INTO #Dates VALUES (  3982, 120, @FirstDate, 'Etnisitet besvart', 5, 3 );
  INSERT INTO #Dates VALUES (  3342, 15, @FirstDate, 'Koronarsykdom i familien besvart', 3, 4 );
  -- Undersøkelser
  INSERT INTO #Dates VALUES (  3225, 120, @FirstDate, 'Høyde registrert', -1, 5 ); 
  INSERT INTO #Dates VALUES (  3224,  15, @FirstDate, 'Vekt registrert', -1, 6 ); 
  INSERT INTO #Dates VALUES (  3227, 15, @FirstDate, 'Røykevaner besvart', 4, 7 );
  INSERT INTO #Dates VALUES (  3230, 15, @FirstDate, 'Blodtrykk registrert', -1, 8 );
  INSERT INTO #Dates VALUES (  4636, 15, @FirstDate, 'Fotsensibilitet undersøkt', 5, 9 );
  INSERT INTO #Dates VALUES (  4637, 15, @FirstDate, 'Fotpuls undersøkt', 5, 10 );
  -- Medikamenter
  INSERT INTO #Dates VALUES (  3322, 15, @FirstDate, 'Behandlingsstrategi besvart', 5, 11 );
  INSERT INTO #Dates VALUES (  3336, 15, @FirstDate, 'Platehemmer besvart', 3, 12 );
  INSERT INTO #Dates VALUES (  4003, 15, @FirstDate, 'Antikoagulasjon besvart', 3, 12 );
  INSERT INTO #Dates VALUES (  3337, 15, @FirstDate, 'Lipidsenkende besvart', 3, 13 );
  INSERT INTO #Dates VALUES (  3339, 15, @FirstDate, 'ACE-hemmer besvart', 3, 14 );
  -- Komplikasjoner
  INSERT INTO #Dates VALUES (  4527, 15, @FirstDate, 'Komplikasjoner besvart', 3, 15 );
  UPDATE #Dates SET StartDate  = DATEADD(month,-Months,@LastDate )

  -- Get caselist for everybody with NDV_TYPE (ItemId=3196) in period
  SELECT DISTINCT ce.PersonId INTO #CaseList 
  FROM dbo.ClinEvent ce 
  JOIN dbo.StudyGroup sg ON sg.StudyId=ce.StudyId AND sg.GroupId=ce.GroupId AND sg.GroupActive=1
  JOIN dbo.UserList ul ON ul.CenterId = sg.CenterId AND ul.UserId=USER_ID()
  JOIN dbo.ClinDatapoint dp ON dp.EventId=ce.EventId AND dp.ItemId=3196
  WHERE ( ce.EventTime >= @FirstDate ) AND ( ce.EventTime < @LastDate ) AND ( dp.EnumVal = @DiabetesType );

  -- Get denominator
  DECLARE @Antall INT;
  SELECT @Antall = COUNT(DISTINCT PersonId) FROM #CaseList;

  -- Count data registered
  SELECT v.PersonId,dp.ItemId,count(dp.RowId) as Antall
  INTO #PersonDataCount FROM #CaseList v
  JOIN dbo.ClinEvent ce ON ce.PersonId=v.PersonId
  JOIN dbo.ClinDatapoint dp ON dp.EventId=ce.EventId
  JOIN #Dates d ON d.ItemId=dp.ItemId
  WHERE ( ce.EventTime > d.StartDate ) AND ( ce.EventTime < @LastDate ) 
    AND (dp.Quantity > 0 ) AND ( ISNULL(dp.EnumVal,0) <> d.UnknownVal  )
  GROUP BY v.PersonId,dp.ItemId;

  -- Aggregate data
  SELECT ItemId,COUNT(*) as Teller
  INTO #FinalDataset
  FROM #PersonDataCount
  GROUP BY ItemId;
  -- Get Result
  SELECT mi.ItemId,d.Caption,d.StartDate,d.Months,@LastDate as StopDate,ISNULL(r.Teller,0) AS Teller,@Antall AS Nevner,
    CONVERT(DECIMAL(5,1),100*CONVERT(FLOAT,Teller)/CONVERT(FLOAT,@Antall),2) as Andel 
  FROM #Dates d
  JOIN dbo.MetaItem mi ON mi.ItemId=d.ItemId
  LEFT OUTER JOIN #FinalDataset r ON r.ItemId=d.ItemId
  ORDER BY d.OrderNo;
END]]>
	</row>
	<row ProcId="1014" StudyName="GBD" ProcName="GBD.RapportKontaktinfo" ProcDesc="Kontaktinfo pårørende" ProcParams=":StudyId" ListId="FR" GrantTo="public" MinVersion="6000" ChkSum="1186832094" LastUpdate="2019-01-13T11:09:57.773Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportKontaktinfo ( @StudyId INT ) AS
BEGIN
  SET LANGUAGE Norwegian; 
  SELECT a.* FROM
  (
  SELECT 
    v.PersonId, v.DOB, v.FullName, v.GenderId, v.GroupName, 
    ce.EventId, ce.EventTime, 
    cf.ClinFormId, cf.FormStatus, cf.FormComplete, cf.Comment,
    dbo.MonthYear( ce.EventTime ) AS MonthYear,
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ww, ce.EventTime ) AS EventWeek,
    v122.EnumVal AS E122,
    a122.OptionText AS T122,
    CONVERT(VARCHAR(64),v3424.TextVal) AS T3424,
    CONVERT(VARCHAR(64),v3425.TextVal) AS T3425,
    CONVERT(VARCHAR(64),v3426.TextVal) AS T3426,
    CONVERT(VARCHAR(64),v3427.TextVal) AS T3427,
    CONVERT(VARCHAR(16),v3433.TextVal) AS T3433,
    CONVERT(VARCHAR(64),v9318.TextVal) AS T9318,
    cf.CreatedAt, cf.CreatedBy, 
    pcr.Signature AS CreatedBySign, pcr.FullName AS CreatedByName, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime DESC ) AS OrderNo 
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) 
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  JOIN dbo.ViewActiveCaseListStub v ON v.PersonId=ce.PersonId 
  JOIN dbo.UserList ucr ON ucr.UserId=cf.CreatedBy
    LEFT OUTER JOIN dbo.Person pcr ON pcr.PersonId=ucr.PersonId 
    LEFT OUTER JOIN dbo.ClinDataPoint v122 ON v122.EventId=ce.EventId AND v122.ItemId = 122
      LEFT OUTER JOIN dbo.MetaItemAnswer a122 ON a122.ItemId=122 and v122.EnumVal=a122.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v3424 ON v3424.EventId=ce.EventId AND v3424.ItemId = 3424
    LEFT OUTER JOIN dbo.ClinDataPoint v3425 ON v3425.EventId=ce.EventId AND v3425.ItemId = 3425
    LEFT OUTER JOIN dbo.ClinDataPoint v3426 ON v3426.EventId=ce.EventId AND v3426.ItemId = 3426
    LEFT OUTER JOIN dbo.ClinDataPoint v3427 ON v3427.EventId=ce.EventId AND v3427.ItemId = 3427
    LEFT OUTER JOIN dbo.ClinDataPoint v3433 ON v3433.EventId=ce.EventId AND v3433.ItemId = 3433
    LEFT OUTER JOIN dbo.ClinDataPoint v9318 ON v9318.EventId=ce.EventId AND v9318.ItemId = 9318
  WHERE ( cf.DeletedAt IS NULL )
    AND ( mf.FormName='GBD_PASADMIN' )
    AND ( v.StudyId=@StudyId ) 
  ) a
  WHERE a.OrderNo = 1
  ORDER BY a.FullName;
END]]>
	</row>
	<row ProcId="1015" StudyName="GBD" ProcName="GBD.RapportPaminnelser" ProcDesc="Aktive påminnelser" ProcParams=":StudyId" ListId="FR" GrantTo="public" MinVersion="521" ChkSum="-1549993953" LastUpdate="2019-01-03T08:59:57.970Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportPaminnelser( @StudyId INT ) AS
BEGIN

    SET LANGUAGE Norwegian;
    
    SELECT v.PersonId, v.DOB, v.FullName, a.AlertHeader AS T5601, 
       SUBSTRING(a.AlertMessage, 1, CHARINDEX('( <a href', a.AlertMessage) - 1) AS T5602, 
       a.AlertButtons AS T5603, a.HideUntil AS T5604, ce.EventTime, up.signature AS CreatedBySign
    FROM dbo.Alert a
    JOIN dbo.ViewActiveCaseListStub v ON v.StudyId = a.StudyId
        AND v.PersonId = a.PersonId
    JOIN dbo.ClinForm cf ON cf.ClinFormId = CONVERT(INTEGER, SUBSTRING(AlertClass, 4, 15))
    JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
    JOIN dbo.UserList ul ON ul.UserId = cf.CreatedBy
    LEFT OUTER JOIN dbo.Person up ON up.PersonId = ul.PersonId
    WHERE (AlertClass LIKE 'CF#%')
    AND (v.StudyId = @StudyId)
    AND (a.HideUntil > GETDATE() - 7)
    AND (a.HideUntil < GETDATE() + 3650)
    
    UNION
    
    SELECT v.PersonId, v.DOB, v.FullName, a.AlertHeader AS T5601, 
      a.AlertMessage AS T5602, 
      a.AlertButtons AS T5603, a.HideUntil AS T5604, 
      a.CreatedAt AS EventTime, NULL AS CreatedBySign
    FROM dbo.Alert a
    JOIN dbo.ViewActiveCaseListStub v ON v.StudyId = a.StudyId
        AND v.PersonId = a.PersonId
    WHERE (AlertClass LIKE 'MAN#%')
    AND (v.StudyId = @StudyId)
    AND (a.HideUntil > GETDATE() - 7)
    AND (a.HideUntil < GETDATE() + 3650)
    ORDER BY a.HideUntil DESC
    
END
]]>
	</row>
	<row ProcId="1016" StudyName="GBD" ProcName="GBD.RapportFallOgSkader" ProcDesc="Fall og skader" ProcParams=":StudyId, :StartAt, :StopAt, :OrderBy" ListId="FR" GrantTo="public" MinVersion="521" ChkSum="291251831" LastUpdate="2019-01-13T14:56:27.533Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportFallOgSkader( @StudyId INT, @StartAt DateTime = NULL, @StopAt DateTime = NULL, @OrderBy INT = 0 ) AS
BEGIN
  SET LANGUAGE Norwegian; 
  IF @StartAt IS NULL SET @StartAt = GETDATE()-365;
  IF @StopAt IS NULL SET @StopAt = GETDATE();
                     
  /* Get relevant forms (GbdAvvik) except when the form GBD_SKADE is on same event */
  SELECT cf.ClinFormId
    INTO #formEventList 
    FROM dbo.ClinForm cf 
    JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
    JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId
    JOIN dbo.ClinDataPoint cdp ON cdp.EventId = cf.EventId AND cdp.ItemId = 3580
  WHERE ce.StudyId=@StudyId AND mf.FormName = 'GbdAvvik' AND cdp.EnumVal in (1,2,3) 
    AND NOT cf.EventId IN (SELECT EventId FROM dbo.ClinForm JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId WHERE mf.FormName='GBD_SKADE' AND DeletedAt IS NULL)
    AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  UNION
  /* Add relevant forms (GBD_SKADE) */
  SELECT cf.ClinFormId 
    FROM dbo.ClinForm cf
    JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
    JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId
  WHERE ce.StudyId=@StudyId AND mf.FormName = 'GBD_SKADE'
    AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt );

  /* Retrieve dataset, field order conforms to population specification */
  SELECT 
    sc.PersonId, p.DOB, p.FullName, p.ReverseName, p.GenderId, p.NationalId, sg.CenterId, sg.GroupId, sg.GroupName, 
    ce.EventId, ce.EventTime, cf.ClinFormId, cf.FormStatus, cf.FormComplete, cf.Comment,
    dbo.MonthYear( ce.EventTime ) AS MonthYear,
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ww, ce.EventTime ) AS EventWeek,
    v3574.Quantity AS T3574,
    v3575.EnumVal AS E3575,
    a3575.OptionText AS T3575,
    v3576.EnumVal AS E3576,
    a3576.OptionText AS T3576,
    v3578.EnumVal AS E3578,
    a3578.OptionText AS T3578,
    v3579.EnumVal AS E3579,
    a3579.OptionText AS T3579,
    v3580.EnumVal AS E3580,
    a3580.OptionText AS T3580,
    v3581.EnumVal AS E3581,
    a3581.OptionText AS T3581,
    v3582.EnumVal AS E3582,
    a3582.OptionText AS T3582,
    v6402.EnumVal AS E6402,
    a6402.OptionText AS T6402,
    cf.CreatedAt, cf.CreatedBy, 
    pcr.Signature AS CreatedBySign, pcr.FullName AS CreatedByName, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime DESC ) AS OrderNo 
  INTO #temp
  FROM #formEventList fel
  JOIN dbo.ClinForm cf ON cf.ClinFormId = fel.ClinFormId 
  JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId  
  JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId 
  JOIN dbo.StudCase sc ON ( sc.StudyId = ce.StudyId ) AND ( sc.PersonId = ce.PersonId ) 
  JOIN dbo.Person p ON ( p.PersonId = sc.PersonId ) 
  JOIN dbo.StudyGroup sg ON ( sg.StudyId = ce.StudyId ) AND ( sg.GroupId = ce.GroupId ) 
  JOIN dbo.StudyUser su ON ( su.StudyId = sg.StudyId ) AND ( su.UserId = USER_ID() ) 
  JOIN dbo.UserList my ON ( my.UserId = USER_ID() ) 
  JOIN dbo.StudyCenter c ON ( c.CenterId = sg.CenterId ) 
  JOIN dbo.UserList ucr ON ucr.UserId = cf.CreatedBy
  LEFT OUTER JOIN dbo.Person pcr ON pcr.PersonId = ucr.PersonId 
    LEFT OUTER JOIN dbo.ClinDataPoint v3574 ON v3574.EventId = ce.EventId AND v3574.ItemId = 3574
    LEFT OUTER JOIN dbo.ClinDataPoint v3575 ON v3575.EventId = ce.EventId AND v3575.ItemId = 3575
      LEFT OUTER JOIN dbo.MetaItemAnswer a3575 ON a3575.ItemId = 3575 AND v3575.EnumVal = a3575.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v3576 ON v3576.EventId = ce.EventId AND v3576.ItemId = 3576
      LEFT OUTER JOIN dbo.MetaItemAnswer a3576 ON a3576.ItemId = 3576 AND v3576.EnumVal = a3576.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v3578 ON v3578.EventId = ce.EventId AND v3578.ItemId = 3578
      LEFT OUTER JOIN dbo.MetaItemAnswer a3578 ON a3578.ItemId = 3578 AND v3578.EnumVal = a3578.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v3579 ON v3579.EventId = ce.EventId AND v3579.ItemId = 3579
      LEFT OUTER JOIN dbo.MetaItemAnswer a3579 ON a3579.ItemId = 3579 AND v3579.EnumVal = a3579.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v3580 ON v3580.EventId = ce.EventId AND v3580.ItemId = 3580
      LEFT OUTER JOIN dbo.MetaItemAnswer a3580 ON a3580.ItemId = 3580 AND v3580.EnumVal = a3580.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v3581 ON v3581.EventId = ce.EventId AND v3581.ItemId = 3581
      LEFT OUTER JOIN dbo.MetaItemAnswer a3581 ON a3581.ItemId = 3581 AND v3581.EnumVal = a3581.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v3582 ON v3582.EventId = ce.EventId AND v3582.ItemId = 3582
      LEFT OUTER JOIN dbo.MetaItemAnswer a3582 ON a3582.ItemId = 3582 AND v3582.EnumVal = a3582.OrderNumber
    LEFT OUTER JOIN dbo.ClinDataPoint v6402 ON v6402.EventId = ce.EventId AND v6402.ItemId = 6402
      LEFT OUTER JOIN dbo.MetaItemAnswer a6402 ON a6402.ItemId = 6402 AND v6402.EnumVal = a6402.OrderNumber
  WHERE ( cf.DeletedAt IS NULL )
    AND ( ( su.GroupId = sg.GroupId ) OR ( su.ShowMyGroup = 0 ) ) 
    AND ( sg.CenterId = my.CenterId ) 
    AND ( sc.StudyId = @StudyId )
    AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  
  /* Select final dataset from temp table 
     - OrderBy=0 => Order by Month (EventTime)
     - OrderBy=1 => Order by Group, PersonId, EventTime
     - OrderBy=2 => Order by T3580 (Skadetype), EventTime
  */     
  IF @OrderBy=0 
    SELECT * FROM #temp ORDER BY EventTime;
  
  IF @OrderBy=1 
    SELECT * FROM #temp ORDER BY GroupId, PersonId, EventTime;

  IF @OrderBy=2 
    SELECT * FROM #temp ORDER BY T3580, EventTime;

END]]>
	</row>
	<row ProcId="1017" StudyName="GBD" ProcName="dbo.ReportStatusUpdates" ProcDesc="Statusendringer" ProcParams=":StudyId, :StartAt, :StopAt" ListId="FR" GrantTo="public" ChkSum="-1696019434" LastUpdate="2015-11-10T09:59:07.210Z">
		<![CDATA[CREATE PROCEDURE dbo.ReportStatusUpdates( @StudyId INT, @StartAt DateTime = NULL, @StopAt DateTime = NULL ) AS
BEGIN
 IF @StartAt IS NULL SET @StartAt = GetDate()-365;
 IF @StopAt IS NULL SET @StopAt = GetDate();
 SELECT DISTINCT pat.NationalId,pat.FullName,
   ISNULL(sgn.GroupName,'(ingen gruppe)') AS GroupNow, ISNULL(sgo.GroupName,'(ingen gruppe)') AS GroupThen,
   scl.ChangedAt, ISNULL(sso.StatusText,'(ingen)') AS OldStatus, ISNULL(ssn.StatusText,'(ingen') AS NewStatus,
   up.Signature,sc.StudCaseId
 FROM dbo.StudCaseLog scl
 JOIN dbo.StudCase sc on sc.StudCaseId=scl.StudCaseId AND sc.StudyId=@StudyId
 JOIN dbo.StudCase scn on scn.StudCaseId=sc.StudCaseId AND scn.StudyId=@StudyId
 JOIN dbo.Person pat ON pat.PersonId=sc.PersonId
 JOIN dbo.UserList ul on ul.UserId=scl.ChangedBy
 JOIN dbo.Person up on up.PersonId=ul.PersonId and ul.UserId=scl.ChangedBy
 JOIN dbo.UserList my on my.UserId=USER_ID()
 LEFT JOIN dbo.StudyStatus ssn on ssn.StudyId=sc.StudyId AND ssn.StatusId=scl.NewStatusId 
 LEFT JOIN dbo.StudyStatus sso on sso.StudyId=sc.StudyId AND sso.StatusId=scl.OldStatusId
 LEFT JOIN dbo.StudyGroup sgn ON sgn.StudyId=sc.StudyId AND sgn.GroupId=scl.NewGroupId
 LEFT JOIN dbo.StudyGroup sgo ON sgo.StudyId=sc.StudyId AND sgo.GroupId=scl.OldGroupId
 LEFT JOIN dbo.StudyGroup sg ON sg.StudyId=sc.StudyId AND sg.GroupId = sc.GroupId
 WHERE ( ( ISNULL( scl.OldStatusId, -1 ) <> ISNULL( scl.NewStatusId,-1 ) )
   AND ( scl.ChangedAt >= @StartAt ) AND ( scl.ChangedAt < @StopAt )
   AND   ( 
           ( ISNULL(sgn.CenterId,0) = my.CenterId AND ISNULL( sgn.GroupActive, 0 ) = 1 ) OR 
           ( ISNULL(sgo.CenterId,0) = my.CenterId AND ISNULL( sgo.GroupActive, 0 ) = 1 ) OR 
           ( ISNULL(sg.CenterId,0) = my.CenterId AND ISNULL( sg.GroupActive, 0 ) = 1 )
          )
       )
 ORDER BY NewStatus,ChangedAt desc
END]]>
	</row>
	<row ProcId="1018" StudyName="GBD" ProcName="GBD.RapportErnaeringTiltak" ProcDesc="Ernæringstiltak" ProcParams=":StudyId, :StartIAt, :StopAt" ListId="FR" GrantTo="public" ChkSum="-325422603" LastUpdate="2015-05-18T08:46:59.920Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportErnaeringTiltak ( @StudyId INT, @StartAt DateTime = NULL, @StopAt DateTime = NULL ) AS
BEGIN
  SET LANGUAGE Norwegian; 
  IF @StartAt IS NULL SET @StartAt = GETDATE()-365;
  IF @StopAt IS NULL SET @StopAt = GETDATE();
  /* Conform to Population field names */
  SELECT 
    sc.PersonId, p.DOB, p.FullName, p.ReverseName, p.GenderId, p.NationalId, sg.CenterId, sg.GroupId, sg.GroupName, 
    ce.EventId, ce.EventTime, 
    cf.ClinFormId, cf.FormStatus, cf.FormComplete, cf.Comment,
    dbo.MonthYear( ce.EventTime ) AS MonthYear,
    DATENAME( mm, ce.EventTime ) AS MonthName,
    DATEPART( hh, ce.EventTime ) AS EventHour,
    DATEPART( ww, ce.EventTime ) AS EventWeek,
    v4357.EnumVal as E4357,
    a4357.OptionText as T4357,
    v4850.EnumVal as E4850,
    a4850.OptionText as T4850,
    v4896.EnumVal as E4896,
    a4896.OptionText as T4896,
    v4897.DTVal as T4897,
    CONVERT(VARCHAR(64),v5206.TextVal) as T5206,
    v5207.EnumVal as E5207,
    a5207.OptionText as T5207,
    CONVERT(VARCHAR(16),v5459.TextVal) as T5459,
    v5460.EnumVal as E5460,
    a5460.OptionText as T5460,
    CONVERT(VARCHAR(16),v5461.TextVal) as T5461,
    v5462.EnumVal as E5462,
    a5462.OptionText as T5462,
    v5464.EnumVal as E5464,
    a5464.OptionText as T5464,
    v5466.EnumVal as E5466,
    a5466.OptionText as T5466,
    CONVERT(VARCHAR(16),v5467.TextVal) as T5467,
    v5468.EnumVal as E5468,
    a5468.OptionText as T5468,
    CONVERT(VARCHAR(16),v5469.TextVal) as T5469,
    CONVERT(VARCHAR(16),v5472.TextVal) as T5472,
    v5478.DTVal as T5478,
    cf.CreatedAt, cf.CreatedBy, 
    pcr.Signature as CreatedBySign, pcr.FullName AS CreatedByName, 
    ROW_NUMBER() OVER ( PARTITION BY ce.PersonId ORDER BY EventTime DESC ) AS OrderNo 
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON ( ce.EventId = cf.EventId ) 
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId 
  JOIN dbo.StudCase sc ON ( sc.StudyId = ce.StudyId ) AND ( sc.PersonId = ce.PersonId ) 
  JOIN dbo.Person p ON ( p.PersonId=sc.PersonId ) 
  JOIN dbo.StudyGroup sg ON ( sg.StudyId = sc.StudyId ) AND ( sg.GroupId = sc.GroupId ) 
  JOIN dbo.StudyUser su ON ( su.StudyId=sg.StudyId ) AND ( su.UserId=USER_ID() ) 
  JOIN dbo.UserList my ON ( my.UserId = USER_ID() ) 
  JOIN dbo.StudyCenter c ON ( c.CenterId = sg.CenterId ) 
  JOIN dbo.UserList ucr ON ucr.UserId=cf.CreatedBy
  LEFT OUTER JOIN dbo.Person pcr ON pcr.PersonId=ucr.PersonId 
    LEFT OUTER JOIN dbo.ClinObservation v4357 ON v4357.EventId=ce.EventId and v4357.VarName='KOST_Moset'
      LEFT OUTER JOIN dbo.MetaItemAnswer a4357 ON a4357.ItemId=4357 and v4357.EnumVal=a4357.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v4850 ON v4850.EventId=ce.EventId and v4850.VarName='KOST_TiltakHensikt'
      LEFT OUTER JOIN dbo.MetaItemAnswer a4850 ON a4850.ItemId=4850 and v4850.EnumVal=a4850.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v4896 ON v4896.EventId=ce.EventId and v4896.VarName='KOST_Registrering'
      LEFT OUTER JOIN dbo.MetaItemAnswer a4896 ON a4896.ItemId=4896 and v4896.EnumVal=a4896.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v4897 ON v4897.EventId=ce.EventId and v4897.VarName='KOST_NyEvalDato'
    LEFT OUTER JOIN dbo.ClinObservation v5206 ON v5206.EventId=ce.EventId and v5206.VarName='KOST_TiltakGrunn'
    LEFT OUTER JOIN dbo.ClinObservation v5207 ON v5207.EventId=ce.EventId and v5207.VarName='KOST_StartTiltak'
      LEFT OUTER JOIN dbo.MetaItemAnswer a5207 ON a5207.ItemId=5207 and v5207.EnumVal=a5207.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v5459 ON v5459.EventId=ce.EventId and v5459.VarName='MAT_Hensyn'
    LEFT OUTER JOIN dbo.ClinObservation v5460 ON v5460.EventId=ce.EventId and v5460.VarName='KOST_Beriket'
      LEFT OUTER JOIN dbo.MetaItemAnswer a5460 ON a5460.ItemId=5460 and v5460.EnumVal=a5460.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v5461 ON v5461.EventId=ce.EventId and v5461.VarName='KOST_BeriketTekst'
    LEFT OUTER JOIN dbo.ClinObservation v5462 ON v5462.EventId=ce.EventId and v5462.VarName='MDS_K4c'
      LEFT OUTER JOIN dbo.MetaItemAnswer a5462 ON a5462.ItemId=5462 and v5462.EnumVal=a5462.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v5464 ON v5464.EventId=ce.EventId and v5464.VarName='KOST_FortykketDrikke'
      LEFT OUTER JOIN dbo.MetaItemAnswer a5464 ON a5464.ItemId=5464 and v5464.EnumVal=a5464.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v5466 ON v5466.EventId=ce.EventId and v5466.VarName='MDS_K4b'
      LEFT OUTER JOIN dbo.MetaItemAnswer a5466 ON a5466.ItemId=5466 and v5466.EnumVal=a5466.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v5467 ON v5467.EventId=ce.EventId and v5467.VarName='MAT_SondeTekst'
    LEFT OUTER JOIN dbo.ClinObservation v5468 ON v5468.EventId=ce.EventId and v5468.VarName='MDS_K4a'
      LEFT OUTER JOIN dbo.MetaItemAnswer a5468 ON a5468.ItemId=5468 and v5468.EnumVal=a5468.OrderNumber
    LEFT OUTER JOIN dbo.ClinObservation v5469 ON v5469.EventId=ce.EventId and v5469.VarName='MAT_ParenteralTekst'
    LEFT OUTER JOIN dbo.ClinObservation v5472 ON v5472.EventId=ce.EventId and v5472.VarName='MAT_Egenvurdering'
    LEFT OUTER JOIN dbo.ClinObservation v5478 ON v5478.EventId=ce.EventId and v5478.VarName='WEIGHT_DueDate'
  WHERE ( cf.DeletedAt IS NULL )
    AND ( mf.FormName='GbdErnaeringTiltak' )
    AND ( ( su.GroupId=sg.GroupId ) OR ( su.ShowMyGroup = 0 ) ) 
    AND ( sg.CenterId=my.CenterId ) 
    AND ( sc.StudyId=@StudyId ) 
    AND ( ce.EventTime >= @StartAt ) AND ( ce.EventTime < @StopAt )
  ORDER BY ce.EventTime DESC
END]]>
	</row>
	<row ProcId="1019" StudyName="*" ProcName="Report.LabClassList" ProcDesc="Oversikt over labklasser" ProcParams=":MinCount" ListId="FR" GrantTo="public" MinVersion="19004" ChkSum="38525022" LastUpdate="2019-06-13T19:03:16.263Z">
		<![CDATA[CREATE PROCEDURE Report.LabClassList( @MinCount INT = 0 ) AS
BEGIN
  SELECT 
    cl.LabClassId, cl.FriendlyName,
    cl.UnitStr, cl.ManualEntry, cl.MinValid, cl.MaxValid,
    cl.NLK, cl.Loinc, LabStats.LabCount, LabStats.ActualMin, LabStats.ActualMax
  FROM dbo.LabClass cl 
  LEFT JOIN 
  (SELECT lc.LabClassId, 
    COUNT(*) AS LabCount, MIN(ld.NumResult ) AS ActualMin, MAX(ld.NumResult) AS ActualMax
    FROM dbo.LabCode lc
    JOIN dbo.LabData ld
      ON ld.LabCodeId = lc.LabCodeId
    WHERE ld.NumResult >= 0
    GROUP BY lc.LabClassId) LabStats
  ON LabStats.LabClassId = cl.LabClassId
  WHERE ISNULL( cl.ManualEntry, 1 ) = 1 AND ISNULL( LabStats.LabCount, 0 ) >= @MinCount
  ORDER BY LabStats.LabCount DESC, cl.LabClassId;
END]]>
	</row>
	<row ProcId="1020" StudyName="NDV" ProcName="NDV.ReportFootFormCount" ProcDesc="Antall fotskjema per år" ListId="FR" GrantTo="public" ChkSum="1365232211" LastUpdate="2014-12-15T18:03:32.857Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportFootFormCount
AS
BEGIN
  SELECT DATEPART(yy,ce.EventTime) AS FormYear,COUNT(*) AS FormCount
  FROM dbo.ClinEvent ce 
  JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  WHERE mf.FormName='DIAPOL_FOOT'
  GROUP BY DATEPART(yy,ce.EventTime)
  ORDER BY DATEPART(yy,ce.EventTime)
END]]>
	</row>
	<row ProcId="1021" StudyName="NDV" ProcName="NDV.ReportFootFormFirst" ProcDesc="Henvisninger til fotklinikk" ListId="FR" GrantTo="public" ChkSum="-732689072" LastUpdate="2014-12-15T18:04:34.327Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportFootFormFirst
AS
BEGIN
  SELECT ce.PersonId,DATEPART(yy,min(ce.EventTime)) as StartYear 
  INTO #temp
  FROM dbo.ClinEvent ce 
  JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  WHERE mf.FormName='DIAPOL_FOOT'
  GROUP BY ce.PersonId;
  SELECT StartYear,count(*) as FormCount FROM #temp
  GROUP BY StartYear
  ORDER BY StartYear
END]]>
	</row>
	<row ProcId="1022" StudyName="NDV" ProcName="NDV.ReportFootLastHbA1c" ProcDesc="HbA1c på fotklinikk" ListId="FR" GrantTo="public" ChkSum="929308189" LastUpdate="2018-10-03T15:41:39.313Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportFootLastHbA1c
AS
BEGIN
  SELECT DISTINCT ce.PersonId,DATEPART(yy,ce.EventTime) AS ReportYear
  INTO #tempPop
  FROM dbo.ClinEvent ce 
  JOIN dbo.ClinForm cf ON cf.EventId=ce.EventId
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  WHERE mf.FormName='DIAPOL_FOOT';
  ALTER TABLE #tempPop ADD HbA1c DECIMAL(12,1);
  UPDATE #tempPop SET HbA1c = ( 
    SELECT TOP 1 NumResult 
	FROM dbo.LabData ld 
    JOIN dbo.LabCode lc ON lc.LabCodeId=ld.LabCodeId
    WHERE ld.PersonId=#tempPop.PersonId AND lc.LabClassId = 1058
    AND DATEPART(yy,ld.LabDate) = #tempPop.ReportYear
    AND NOT (NULLIF(NumResult,-1) IS NULL )
    ORDER BY ld.LabDate  )
  SELECT ReportYear,COUNT(PersonId) AS CountPerson,COUNT(HbA1c) AS CountHbA1c,AVG(HbA1c) AS AvgHbA1c FROM 
  #tempPop
  GROUP BY ReportYear
  ORDER BY ReportYear;
END]]>
	</row>
	<row ProcId="1023" StudyName="*" ProcName="dbo.ReportFormStatusLog" ProcDesc="Statusendringer på skjema" ProcParams=":ClinFormId" ListId="FR" GrantTo="public" MinVersion="6019" ChkSum="2121242673" LastUpdate="2014-12-20T08:32:45.920Z">
		<![CDATA[CREATE PROCEDURE dbo.ReportFormStatusLog( @ClinFormId INT )
AS
BEGIN 
  SELECT ClinFormId,cl.CreatedAt,cl.Comment,p.FullName,ISNULL(mfs.StatusDesc,'(unknown)') AS StatusDesc                                                                                   
  FROM dbo.ClinFormLog cl
  LEFT OUTER JOIN dbo.UserList ul ON ul.UserId=cl.CreatedBy
  LEFT OUTER JOIN dbo.Person p ON p.PersonId=ul.PersonId
  LEFT OUTER JOIN dbo.MetaFormStatus mfs ON mfs.FormStatus=cl.FormStatus
  WHERE ClinFormId=@ClinFormId                    
  ORDER BY ClinFormLogId DESC 
END]]>
	</row>
	<row ProcId="1024" StudyName="*" ProcName="dbo.ReportLabResults" ProcDesc="Labdata for enkeltpasient" ProcParams=":PersonId" ListId="FR" GrantTo="public" ChkSum="-1250058123" LastUpdate="2014-12-15T20:16:26.107Z">
		<![CDATA[CREATE PROCEDURE dbo.ReportLabResults( @PersonId INT ) AS
BEGIN
  SELECT ld.ResultId, ld.LabDate, ld.LabCodeId, lc.LabName, ld.NumResult, ld.UnitStr, 
    mdr.OID9533, ld.TxtResult, CompSign =
    CASE ld.ArithmeticComp
    WHEN 'GT' THEN '<'
    WHEN 'LT' THEN '>' 
    ELSE ''
    END,       
    ld.Comment, ld.RefInterval
  FROM dbo.LabData ld
  JOIN dbo.LabCode lc on lc.LabCodeId=ld.LabCodeId
  LEFT OUTER JOIN dbo.MetaDevResult mdr ON mdr.DevResult=ld.DevResult
  WHERE ld.PersonId=@PersonId
  ORDER BY ld.LabDate DESC, lc.LabName
END]]>
	</row>
	<row ProcId="1025" StudyName="*" ProcName="dbo.ReportFormStatusLog" ProcDesc="Statusendringer på skjema" ProcParams=":ClinFormId" ListId="FR" GrantTo="public" MaxVersion="6018" ChkSum="-511693505" LastUpdate="2014-12-20T08:34:42.873Z">
		<![CDATA[CREATE PROCEDURE dbo.ReportFormStatusLog( @ClinFormId INT )
AS
BEGIN 
  SELECT ClinFormId,cl.CreatedAt,cl.Comment,p.FullName,'(ukjent)' AS StatusDesc                                                                                   
  FROM dbo.ClinFormLog cl
  LEFT OUTER JOIN dbo.UserList ul ON ul.UserId=cl.CreatedBy
  LEFT OUTER JOIN dbo.Person p ON p.PersonId=ul.PersonId
  WHERE ClinFormId=@ClinFormId                    
  ORDER BY ClinFormLogId DESC 
END]]>
	</row>
	<row ProcId="1026" StudyName="NDV" ProcName="NDV.RapportSvangerskapskontroller" ProcDesc="Svangerskapskontroller" ProcParams=":StartAt,:StopAt" ListId="FR" GrantTo="public" MinVersion="6000" ChkSum="-1468058347" LastUpdate="2015-11-05T07:37:47.860Z">
		<![CDATA[CREATE PROCEDURE NDV.RapportSvangerskapskontroller( @StartDate DateTime, @StopDate DateTime ) AS
BEGIN
  SELECT ce.PersonId,p.DOB,p.ReverseName,c.CenterName, cdp.EnumVal,mia.OptionText as DiabetesType,
  MIN(ce.EventTime) as FirstVisit, COUNT(*) AS VisitCount
  FROM dbo.ClinForm cf 
  JOIN dbo.ClinEvent ce ON ce.EventId=cf.EventId
  JOIN dbo.StudyGroup sg ON sg.StudyId=ce.StudyId and sg.GroupId=ce.GroupId
  JOIN dbo.StudyCenter c ON c.CenterId=sg.CenterId
  JOIN dbo.ClinDataPoint cdp ON cdp.EventId=ce.EventId AND cdp.ItemId=3196
  JOIN dbo.MetaForm mf ON mf.FormId=cf.FormId
  JOIN dbo.MetaItemAnswer mia on mia.ItemId=cdp.ItemId AND mia.OrderNumber=cdp.EnumVal
  JOIN dbo.Person p ON p.PersonId=ce.PersonId AND p.GenderId=2
  JOIN dbo.UserList ul ON ul.UserId=USER_ID() AND ul.CenterId=sg.CenterId
  WHERE
    ( cf.DeletedAt IS NULL AND mf.FormName = 'DIAPOL_GRAVIDE' ) AND ( ce.EventTime >= @StartDate ) AND ( ce.EventTime < @StopDate )
  GROUP BY ce.PersonId,p.DOB,p.ReverseName,c.CenterName,cdp.EnumVal,mia.OptionText
  ORDER BY c.CenterName,cdp.EnumVal,ce.PersonId
END]]>
	</row>
	<row ProcId="1027" StudyName="GBD" ProcName="GBD.RapportBrukereMedKliniskeData" ProcDesc="Brukere med kliniske data" ListId="FR" GrantTo="superuser" ChkSum="945336427" LastUpdate="2016-05-20T12:49:06.903Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportBrukereMedKliniskeData AS
BEGIN
  SELECT * FROM (
    SELECT ul.UserId, p.PersonId, p.DOB, p.ReverseName, 
      (SELECT COUNT(*) FROM dbo.ClinEvent ce WHERE ce.PersonId = ul.PersonId) ClinEventCount, 
      (SELECT COUNT(*) FROM dbo.LabData ld WHERE ld.PersonId = ul.PersonId) LabDataCount, 
      (SELECT COUNT(*) FROM dbo.DrugTreatment dt WHERE dt.PersonId = ul.PersonId) DrugTreatmentCount
    FROM dbo.UserList ul
    JOIN dbo.Person p ON ul.PersonId = p.PersonId) Patients
    WHERE ClinEventCount > 0 OR LabDataCount > 0 OR DrugTreatmentCount > 0
    ORDER BY ReverseName;
END]]>
	</row>
	<row ProcId="1028" StudyName="*" ProcName="dbo.RapportDokumentasjonsfrekvens" ProcDesc="Dokumentasjonsfrekvens" ListId="FR" GrantTo="superuser" ChkSum="-197030421" LastUpdate="2018-07-06T12:11:13.630Z">
		<![CDATA[CREATE PROCEDURE dbo.RapportDokumentasjonsfrekvens
AS
BEGIN
  SELECT ul.UserId,p.ReverseName, LastThreeMonths.CountLastThreeMonths, LastMonth.CountLastMonth, LastWeek.CountLastWeek, mp.ProfName
    FROM (
      SELECT ul1.UserId, COUNT(*) CountLastThreeMonths
        FROM dbo.ClinForm cf
        JOIN dbo.UserList ul1 ON ul1.UserId = cf.CreatedBy
        JOIN dbo.UserList ul2 ON ul2.CenterId = ul1.CenterId AND ul2.UserId = USER_ID()
        WHERE cf.CreatedAt > DATEADD(MONTH, -3, GETDATE())
        GROUP BY ul1.UserId) LastThreeMonths
    LEFT JOIN (
      SELECT ul1.UserId, COUNT(*) CountLastMonth
        FROM dbo.ClinForm cf
        JOIN dbo.UserList ul1 ON ul1.UserId = cf.CreatedBy
        JOIN dbo.UserList ul2 ON ul2.CenterId = ul1.CenterId AND ul2.UserId = USER_ID()
        WHERE cf.CreatedAt > DATEADD(MONTH, -1, GETDATE())
        GROUP BY ul1.UserId) LastMonth ON LastMonth.UserId = LastThreeMonths.UserId
    LEFT OUTER JOIN (
      SELECT ul1.UserId, COUNT(*) CountLastWeek
        FROM dbo.ClinForm cf
        JOIN dbo.UserList ul1 ON ul1.UserId = cf.CreatedBy
        JOIN dbo.UserList ul2 ON ul2.CenterId = ul1.CenterId AND ul2.UserId = USER_ID()
        WHERE cf.CreatedAt > DATEADD(DAY, -7, GETDATE())
        GROUP BY ul1.UserId) LastWeek ON LastWeek.UserId = LastThreeMonths.UserId
    JOIN dbo.UserList ul ON ul.UserId = LastThreeMonths.UserId
    JOIN dbo.Person p ON p.PersonId = ul.PersonId
    LEFT JOIN dbo.MetaProfession mp ON mp.ProfId = ul.ProfId
    WHERE ul.UserId > 0
    ORDER BY LastThreeMonths.CountLastThreeMonths DESC;
END]]>
	</row>
	<row ProcId="1029" StudyName="*" ProcName="dbo.ReportDirtyClose" ProcDesc="Unormal avslutning av programmet" ListId="FR" GrantTo="public" ChkSum="-369811970" LastUpdate="2015-06-11T13:17:07.307Z">
		<![CDATA[CREATE PROCEDURE dbo.ReportDirtyClose AS
BEGIN
  SELECT y, m, AppVer, Dirty, Total, Dirty*100/Total AS PercentDirty FROM
  (
    SELECT ServYear AS y, ServMonth AS m, AppVer,
    SUM(CASE WHEN DirtyClose = 1 OR ClosedAt IS NULL THEN 1 ELSE 0 END ) AS Dirty,
    COUNT(*) AS Total
    FROM dbo.UserLog
    WHERE AppVer LIKE '[3-9].[0-9]%'
    GROUP BY ServYear, ServMonth, AppVer
  ) a 
  ORDER BY y DESC, m DESC, AppVer DESC
END]]>
	</row>
	<row ProcId="1030" StudyName="GBD" ProcName="Comm.ReportOutboxForms" ProcDesc="Skjema som fortsatt ligger i utboksen" ListId="FR" GrantTo="public" MinVersion="514" ChkSum="1860444874" LastUpdate="2016-02-10T12:35:25.497Z">
		<![CDATA[CREATE PROCEDURE Comm.ReportOutboxForms AS
BEGIN
  SET NOCOUNT ON;
  SELECT OutId,PersonId,DOB,Initials,EventTime,FormTitle,StatusCode,StatusText,StatusMessage,
    ExportedAt 
  FROM Comm.OutboxForm WHERE StatusCode<>1  
  ORDER BY StatusCode,OutId;
END
]]>
	</row>
	<row ProcId="1031" StudyName="GBD" ProcName="Report.DrugUseOverview" ProcDesc="Oversikt over medikamentbruk" ProcParams=":StudyId,:CenterId,:ATCLevel" ListId="FR" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier, Gruppeleder" ChkSum="-1456932798" LastUpdate="2019-08-21T09:57:42.223Z">
		<![CDATA[CREATE PROCEDURE Report.DrugUseOverview( @StudyId INT, @CenterId INT = NULL, @ATCLevel INT = 7 ) AS
BEGIN
  SELECT DISTINCT ac.PersonId, ac.CenterId,
    SUBSTRING(dt.Atc,1,@ATCLevel) AS AtcFragment INTO #DrugUse 
  FROM dbo.DrugTreatment dt
  JOIN dbo.AllActiveCases ac ON ac.PersonId=dt.PersonId AND ac.StudyId=@StudyId
  WHERE ( dt.StopAt IS NULL ) OR ( dt.StopAt > getdate() );
   
  SELECT CenterId, CenterName, dbo.GetCaseCountByStudyCenter(@StudyId,CenterId) AS PatCount 
  INTO #tempCenter 
  FROM dbo.StudyCenter WHERE ISNULL(@CenterId,CenterId)=CenterId;

  SELECT ISNULL(k.AtcCode,'XXXXX') AS AtcCode,ISNULL(k.AtcName,'(ATC mangler)') AS AtcName, 
    c.CenterId, c.CenterName, c.PatCount, count(du.PersonId) AS UsingDrug,
    ROUND(100*CONVERT(FLOAT,count(du.PersonId))/c.PatCount,1) AS PercentUse
  INTO #ResultSet               
  FROM #tempCenter c 
    LEFT OUTER JOIN #DrugUse du ON du.CenterId=c.CenterId 
    LEFT OUTER JOIN dbo.KBATCIndex k ON k.AtcCode=du.AtcFragment
  WHERE c.PatCount > 0   
  GROUP BY k.AtcCode,k.AtcName,c.CenterId,c.CenterName,c.PatCount;
  SELECT * FROM #ResultSet WHERE UsingDrug > 1 ORDER BY PercentUse DESC;
END]]>
	</row>
	<row ProcId="1032" StudyName="NDV" ProcName="NDV.GetPatientCount" ProcDesc="Fordeling av aktive pasienter på samtykkestatus" ListId="FR" GrantTo="public" MinVersion="6310" ChkSum="-2099198841" LastUpdate="2019-01-03T08:59:58.920Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPatientCount AS
BEGIN

    SET NOCOUNT ON;

    -- Create temp table to be able to do percentages.

    SELECT DISTINCT vac.PersonId, ISNULL(ev.EnumVal,0) AS OrderNumber, ISNULL(ev.OptionText,'Samtykke er ubesvart!') AS OptionText
    INTO #temp
    FROM dbo.ViewActiveCaseListStub vac
    JOIN dbo.Study s ON ( s.StudyId = vac.StudyId ) AND ( s.StudyName IN ( 'NDV','ENDO' ) )
    LEFT JOIN dbo.GetLastEnumValuesTable( 3389, NULL ) ev ON ev.PersonId=vac.PersonId;

    -- Count total
    DECLARE @PatientCount FLOAT;
    SELECT @PatientCount = COUNT(PersonId) FROM #temp;

  -- Get final resultset

    SELECT OrderNumber,REPLACE( OptionText,'*', '') AS OptionText,
    COUNT(PersonId) AS PatientCount, 100 * COUNT(PersonId)/@PatientCount AS PercentOfTotal
    FROM #temp
    GROUP BY OrderNumber, OptionText
    ORDER BY OrderNumber

END]]>
	</row>
	<row ProcId="1033" StudyName="NDV" ProcName="NDV.GetPatientCountByDiabetesType" ProcDesc="Fordeling av samtykker etter type" ListId="FR" GrantTo="public" MinVersion="6310" ChkSum="1010125529" LastUpdate="2019-01-03T08:59:59.760Z">
		<![CDATA[CREATE PROCEDURE NDV.GetPatientCountByDiabetesType AS
BEGIN
  SELECT 
	DiaOrderNumber,REPLACE( DiaOptionText,'*', '') AS DiaOptionText, 
	SamtOrderNumber,REPLACE( SamtOptionText,'*', '') AS SamtOptionText, 
	COUNT(a.PersonId) AS PatientCount
  FROM
  (
    SELECT DISTINCT 
	  vac.PersonId, 
		ISNULL(est.EnumVal,0) AS SamtOrderNumber, ISNULL(est.OptionText, 'Samtykke er ubesvart!') AS SamtOptionText,
		ISNULL(edt.EnumVal,0) AS DiaOrderNumber, ISNULL(edt.OptionText, 'Diabetes type er ubesvart.') AS DiaOptionText
    FROM dbo.ViewActiveCaseListStub vac
	JOIN dbo.Study s ON ( s.StudyId = vac.StudyId ) AND ( s.StudyName IN ( 'NDV','ENDO' ) )
    JOIN dbo.GetLastEnumValuesTable( 3196, NULL ) edt ON edt.PersonId=vac.PersonId
    LEFT JOIN dbo.GetLastEnumValuesTable( 3389, NULL ) est ON est.PersonId=vac.PersonId
  ) a
  GROUP BY a.SamtOrderNumber, a.SamtOptionText, a.DiaOrderNumber, a.DiaOptionText 
  ORDER BY a.DiaOrderNumber,a.SamtOrderNumber
END]]>
	</row>
	<row ProcId="1034" StudyName="*" ProcName="Report.GetCommentsOnEmptyForms" ProcDesc="Tomme skjema med rapporter" ListId="FR" GrantTo="superuser" ChkSum="-620119711" LastUpdate="2016-03-18T08:32:35.363Z">
		<![CDATA[CREATE PROCEDURE Report.GetCommentsOnEmptyForms( @StartTime DATETIME = NULL, @EndTime DATETIME = NULL ) AS
BEGIN
  SELECT @StartTime = ISNULL( @StartTime, DATEADD( DAY, -3650, GETDATE() ) )
  SELECT @EndTime = ISNULL( @EndTime,  GETDATE() )   
  SELECT TOP 200 ce.PersonId,cf.ClinFormId,cf.CreatedAt,mf.FormTitle,cf.Comment,p.Signature,ul.UserName 
  FROM dbo.ClinForm cf
  JOIN dbo.ClinEvent ce ON  ce.EventId=cf.EventId
  JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId
  JOIN dbo.UserList ul ON ul.UserId  = cf.CreatedBy 
  JOIN Person p ON p.PersonId=ul.PersonId
  WHERE cf.FormComplete = 0 AND DATALENGTH(cf.Comment) > 5 AND cf.DeletedAt IS NULL
  AND cf.CreatedAt > @StartTime AND cf.CreatedAt < @EndTime
  ORDER by cf.ClinFormId DESC
END]]>
	</row>
	<row ProcId="1035" StudyName="NDV" ProcName="NDV.ReportConsentStatus" ProcDesc="Fordeling av samtykker over tid" ProcParams=":StartTime,EndTime,:PeriodType" ListId="FR" GrantTo="public" MinVersion="6310" ChkSum="1666167751" LastUpdate="2016-03-23T13:39:17.910Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportConsentStatus ( @StartTime DATETIME = NULL, @EndTime DATETIME = NULL, @PeriodType CHAR(8) = 'MONTH' ) AS
BEGIN
  
  SET NOCOUNT ON;
  
  -- Set Default time period as two years. 
  
  SELECT @StartTime = ISNULL(@StartTime, DATEADD(YEAR, -2, GETDATE()));
  SELECT @EndTime = ISNULL(@EndTime, GETDATE());
  
  -- Create table to put the results in.
  
  CREATE TABLE #ResData (
    StartTime DATETIME NOT NULL PRIMARY KEY,
    EndTime DATETIME NOT NULL,
    Ja INT NULL,
    Nei INT NULL,
    Trukket INT,
    Ukjent INT,
    Ubesvart INT NULL
  );
  
  -- Add calculated fields to table.
  
  ALTER TABLE #ResData ADD Totalt AS (ISNULL(Ubesvart, 0) + ISNULL(Ja, 0) + ISNULL(Nei, 0) + ISNULL(Trukket, 0) + ISNULL(Ukjent, 0));
  ALTER TABLE #ResData ADD JaProsent AS 100.0 * Ja / (ISNULL(Ubesvart, 0) + ISNULL(Ja, 0) + ISNULL(Nei, 0) + ISNULL(Trukket, 0) + ISNULL(Ukjent, 0));
  ALTER TABLE #ResData ADD NeiProsent AS 100.0 * Nei / (ISNULL(Ubesvart, 0) + ISNULL(Ja, 0) + ISNULL(Nei, 0) + ISNULL(Trukket, 0) + ISNULL(Ukjent, 0));
  ALTER TABLE #ResData ADD TrukketProsent AS 100.0 * Trukket / (ISNULL(Ubesvart, 0) + ISNULL(Ja, 0) + ISNULL(Nei, 0) + ISNULL(Trukket, 0) + ISNULL(Ukjent, 0));
  ALTER TABLE #ResData ADD UkjentProsent AS 100.0 * Ukjent / (ISNULL(Ubesvart, 0) + ISNULL(Ja, 0) + ISNULL(Nei, 0) + ISNULL(Trukket, 0) + ISNULL(Ukjent, 0));
  ALTER TABLE #ResData ADD UbesvartProsent AS 100.0 * Ubesvart / (ISNULL(Ubesvart, 0) + ISNULL(Ja, 0) + ISNULL(Nei, 0) + ISNULL(Trukket, 0) + ISNULL(Ukjent, 0));
  
  -- Populate table with data from NDV.GetConsentSummary table
  
  INSERT INTO #ResData (StartTime, EndTime, Ubesvart, Ja, Nei, Trukket, Ukjent)
    SELECT ml.StartTime, ml.EndTime, (SELECT Antall
        FROM NDV.GetConsentSummaryTable(ml.StartTime, ml.EndTime)
        WHERE ShortCode = '?')
      AS Ubesvart, (SELECT Antall
        FROM NDV.GetConsentSummaryTable(ml.StartTime, ml.EndTime)
        WHERE ShortCode = 'J')
      AS Ja, (SELECT Antall
        FROM NDV.GetConsentSummaryTable(ml.StartTime, ml.EndTime)
        WHERE ShortCode = 'N')
      AS Nei, (SELECT Antall
        FROM NDV.GetConsentSummaryTable(ml.StartTime, ml.EndTime)
        WHERE ShortCode = 'T')
      AS Trukket, (SELECT Antall
        FROM NDV.GetConsentSummaryTable(ml.StartTime, ml.EndTime)
        WHERE ShortCode = 'U')
      AS Ukjent
    FROM Report.TimePeriods ml
    WHERE (ml.StartTime >= @StartTime) AND (ml.StartTime < @EndTime AND ml.PeriodType = @PeriodType)
    
  -- Return the table that is used in the report.
  
  SELECT *
  FROM #ResData
  ORDER BY StartTime DESC;
  
END]]>
	</row>
	<row ProcId="1037" StudyName="NDV" ProcName="NDV.ReportHbA1cTimeSeries" ProcDesc="Tidsserie for dårlig regulerte Type 1, prosjekt i regi NDV." ProcParams=":Year, :HbA1cCutoff, :LookBehindMonths, :LookForwardMonths" ListId="FR" GrantTo="public" MinVersion="6401" ChkSum="-1186114363" LastUpdate="2018-10-03T16:03:42.563Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportHbA1cTimeSeries( @Year INT, @HbA1cCutoff FLOAT, @LookBehindMonths INT, @LookforwardMonths INT ) AS
BEGIN

  DECLARE @NumPatientsType1 INT;
  DECLARE @YearStart DateTime;
  DECLARE @YearEnd DateTime;
  
  -- Merge labdata from ClinDatapoint to LabData
                                      
  IF ( SELECT cmptlevel FROM master.dbo.sysdatabases WHERE name = db_name() ) >= 100
    EXEC NDV.MergeHba1cToLabdata;
  
  -- Find start and end of the year passed in as a parameter.

  SELECT @YearStart = CONVERT(DateTime,CONVERT(VARCHAR, @Year) + '-01-01');
  SELECT @YearEnd = CONVERT(DateTime,CONVERT(VARCHAR,@Year+1) + '-01-01');

  -- Find Type-1 patients at the beginning of the year, looking back some months for data

  SELECT * INTO #Selection 
  FROM NDV.GetRecentPatientsTable( 1, @YearStart, @LookBehindMonths );

  -- Count them.

  SELECT @NumPatientsType1 = COUNT(*) FROM #Selection;

  -- Now get status for every month in the period

  SELECT 
    months.StartTime AS MonthStart, 
    @NumPatientsType1 AS NumPatients, 
	labs.NumAboveCutoff,
	labs.MinHbA1c,
	labs.MaxHbA1c,
	labs.AvgHbA1cAboveCutoff,
    100.0 * NumAboveCutoff / @NumPatientsType1 AS PercentAboveCutoff, 
	labs.AvgLabDate,
	DATEDIFF(dd,AvgLabDate,months.StartTime) AS LabAge
  FROM 

  ( 
    SELECT StartTime FROM Report.TimePeriods 
	WHERE PeriodType = 'MONTH' AND StartTime >= @YearStart AND StartTime <= DATEADD(MONTH,@LookforwardMonths,@YearStart) AND StartTime <= GETDATE()
  ) months

  CROSS APPLY
  (
    SELECT 
	  COUNT(NumResult) AS NumAboveCutoff,
	  CONVERT(DateTime,AVG(CONVERT(INT,lab.LabDate))) AS AvgLabDate,
	  MIN(NumResult) AS MinHbA1c, 
	  MAX(NumResult) AS MaxHbA1c, 
	  AVG(NumResult) AS AvgHbA1cAboveCutoff
	FROM #Selection cas
    JOIN dbo.GetLastLabDataTable( 1058, months.StartTime ) lab ON lab.PersonId = cas.PersonId
    WHERE NumResult >= @HbA1cCutoff
  ) labs
  WHERE @NumPatientsType1 > 0;
  
END]]>
	</row>
	<row ProcId="1038" StudyName="GBD" ProcName="Report.DrugList" ProcDesc="Medikamentliste som brukes i  GBD" ProcParams=":PersonId, :ShowDate, :DaysAgo" ListId="FR" GrantTo="public" MinVersion="6600" ChkSum="-1025031511" LastUpdate="2018-02-19T12:37:53.797Z">
		<![CDATA[CREATE PROCEDURE Report.DrugList( @PersonId INT, @ShowDate DATETIME = NULL, @DaysAgo INT = 0 ) AS
BEGIN
  DECLARE @DaysAgoDate DATETIME;
  SET @ShowDate = ISNULL(@ShowDate,GETDATE());
  SET @DaysAgoDate = DATEADD( DAY, -@DaysAgo, @ShowDate);
  SELECT dt.TreatId, dt.StartAt, dt.DrugName, dbo.GetRxText(dt.TreatId) AS RxText,
    dt.StopAt,
    p2.Signature AS StopSign, p1.Signature AS StartSign, p3.Signature AS CreateSign,
    dt.PackType, mp.PackDesc,
    mp.SortOrder, mtpg.GroupName,
    dt.TreatType, mt.TreatDesc,
    dbo.ConvertDoseHourText(dd.Dose07, 7, dd.DoseHour) AS Dose07,
    dbo.ConvertDoseHourText(dd.Dose08, 8, dd.DoseHour) AS Dose08,
    dbo.ConvertDoseHourText(dd.Dose13, 13, dd.DoseHour) AS Dose13,
    dbo.ConvertDoseHourText(dd.Dose18, 18, dd.DoseHour) AS Dose18,
    dbo.ConvertDoseHourText(dd.Dose21, 21, dd.DoseHour) AS Dose21,
    dbo.ConvertDoseHourText(dd.Dose23, 23, dd.DoseHour) AS Dose23,
    dt.DrugForm,
    dbo.GetDose24hText(dt.TreatId) AS Dose24hText,
    dt.Strength, dt.StrengthUnit, dt.Dose24hDD,
    CONVERT(FLOAT, ISNULL(dt.StopAt, @ShowDate + 1) - @ShowDate) AS DaysLeft, dt.PauseStatus
  FROM dbo.DrugTreatment dt
  JOIN dbo.MetaPackType mp ON mp.PackType = dt.PackType
  JOIN dbo.MetaTreatType mt ON mt.TreatType = dt.TreatType
  LEFT OUTER JOIN dbo.DrugDosing dd ON dd.DoseId = dt.DoseId
  LEFT OUTER JOIN dbo.UserList u1 ON u1.UserId = dt.SignedBy
  LEFT OUTER JOIN dbo.Person p1 ON p1.PersonId = u1.PersonId
  LEFT OUTER JOIN dbo.UserList u2 ON u2.UserId = dt.StopBy
  LEFT OUTER JOIN dbo.Person p2 ON p2.PersonId = u2.PersonId
  LEFT OUTER JOIN dbo.UserList u3 ON u3.UserId = dt.CreatedBy
  LEFT OUTER JOIN dbo.Person p3 ON p3.PersonId = u3.PersonId
  LEFT OUTER JOIN dbo.MetaTreatPackGroup mtpg ON dt.TreatType = mtpg.TreatType AND dt.PackType = mtpg.PackType
  WHERE dt.PersonId = @PersonId
    AND (
        (dt.StopAt IS NULL) 
        OR 
        ((@DaysAgoDate < dt.StopAt) AND (dt.StartAt < dt.StopAt))
    )
    AND (dt.CreatedAt <= @ShowDate)
  ORDER BY mtpg.SortOrder, dt.StartAt;
END;]]>
	</row>
	<row ProcId="1039" StudyName="NDV" ProcName="NDV.ReportPAID" ProcDesc="PAID - rapport for alle som har vært på aktuelt sted" ProcParams=":StudyId" ListId="FR" GrantTo="public" MinVersion="6319" CompatibilityLevel="100" ChkSum="315593688" LastUpdate="2019-05-24T13:08:05.763Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportPAID( @StudyId INT ) AS 
BEGIN

  SET NOCOUNT ON;
  SET XACT_ABORT ON;

  -- Convert old PAID forms
  
  BEGIN TRANSACTION;
  UPDATE dbo.ClinDataPoint SET ItemId = ItemId - 2502, Quantity = Quantity-1, EnumVal = EnumVal - 1
  WHERE ItemId BETWEEN 3960 AND 3979;
  UPDATE dbo.ClinDataPoint SET ItemId = 1478 WHERE ItemId = 3980;
  UPDATE dbo.ClinForm SET FormId = 906 WHERE FormId = 298;
  IF @@TRANCOUNT > 0 COMMIT TRANSACTION;
       
  
  -- Query all forms in new format

  SELECT

    ce.PersonId, v.FullName AS ReverseName,
    -- Sum is used as the key to join the rest
    ce.EventTime, csum.Quantity AS PAIDSUM,
    -- Get all 20 items
    cdp1.EnumVal AS PAID01,  cdp2.EnumVal AS PAID02,  cdp3.EnumVal AS PAID03,  cdp4.EnumVal AS PAID04,  cdp5.EnumVal AS PAID05,
    cdp6.EnumVal AS PAID06,  cdp7.EnumVal AS PAID07,  cdp8.EnumVal AS PAID08,  cdp9.EnumVal AS PAID09,  cdp10.EnumVal AS PAID10,
    cdp11.EnumVal AS PAID11, cdp12.EnumVal AS PAID12, cdp13.EnumVal AS PAID13, cdp14.EnumVal AS PAID14, cdp15.EnumVal AS PAID15,
    cdp16.EnumVal AS PAID16, cdp17.EnumVal AS PAID17, cdp18.EnumVal AS PAID18, cdp19.EnumVal AS PAID19, cdp20.EnumVal AS PAID20
  
  FROM dbo.ClinDataPoint csum
  JOIN dbo.ClinEvent ce ON ce.EventId = csum.EventId
  JOIN dbo.ViewCenterCaseListStub v ON v.PersonId = ce.PersonId
  
  JOIN dbo.ClinDatapoint cdp1 ON cdp1.EventId = csum.EventId AND cdp1.ItemId=1458
  JOIN dbo.ClinDatapoint cdp2 ON cdp2.EventId = csum.EventId AND cdp2.ItemId=1459
  JOIN dbo.ClinDatapoint cdp3 ON cdp3.EventId = csum.EventId AND cdp3.ItemId=1460
  JOIN dbo.ClinDatapoint cdp4 ON cdp4.EventId = csum.EventId AND cdp4.ItemId=1461
  JOIN dbo.ClinDatapoint cdp5 ON cdp5.EventId = csum.EventId AND cdp5.ItemId=1462
  JOIN dbo.ClinDatapoint cdp6 ON cdp6.EventId = csum.EventId AND cdp6.ItemId=1463
  JOIN dbo.ClinDatapoint cdp7 ON cdp7.EventId = csum.EventId AND cdp7.ItemId=1464
  JOIN dbo.ClinDatapoint cdp8 ON cdp8.EventId = csum.EventId AND cdp8.ItemId=1465
  JOIN dbo.ClinDatapoint cdp9 ON cdp9.EventId = csum.EventId AND cdp9.ItemId=1466
  JOIN dbo.ClinDatapoint cdp10 ON cdp10.EventId = csum.EventId AND cdp10.ItemId=1467
  JOIN dbo.ClinDatapoint cdp11 ON cdp11.EventId = csum.EventId AND cdp11.ItemId=1468
  JOIN dbo.ClinDatapoint cdp12 ON cdp12.EventId = csum.EventId AND cdp12.ItemId=1469
  JOIN dbo.ClinDatapoint cdp13 ON cdp13.EventId = csum.EventId AND cdp13.ItemId=1470
  JOIN dbo.ClinDatapoint cdp14 ON cdp14.EventId = csum.EventId AND cdp14.ItemId=1471
  JOIN dbo.ClinDatapoint cdp15 ON cdp15.EventId = csum.EventId AND cdp15.ItemId=1472
  JOIN dbo.ClinDatapoint cdp16 ON cdp16.EventId = csum.EventId AND cdp16.ItemId=1473
  JOIN dbo.ClinDatapoint cdp17 ON cdp17.EventId = csum.EventId AND cdp17.ItemId=1474
  JOIN dbo.ClinDatapoint cdp18 ON cdp18.EventId = csum.EventId AND cdp18.ItemId=1475
  JOIN dbo.ClinDatapoint cdp19 ON cdp19.EventId = csum.EventId AND cdp19.ItemId=1476
  JOIN dbo.ClinDatapoint cdp20 ON cdp20.EventId = csum.EventId AND cdp20.ItemId=1477

  WHERE csum.ItemId = 1478 AND v.StudyId = @StudyId
  ORDER BY ce.PersonId,ce.EventTime;

END]]>
	</row>
	<row ProcId="1040" StudyName="*" ProcName="Report.ProblemList" ProcDesc="Diagnoseliste" ProcParams=":PersonId" ListId="FR" GrantTo="public" MinVersion="18201" CompatibilityLevel="110" ChkSum="-2131558125" LastUpdate="2019-01-17T11:55:19.707Z">
		<![CDATA[CREATE PROCEDURE Report.ProblemList ( @PersonId INT ) AS 
BEGIN
  SELECT dx.ItemCode, dx.ItemName, dx.ProbDebut, mp.ProbDesc, dx.ProbSummary,
    CHOOSE( dx.ProbActive + 1, 'Andre', 'Aktive' ) AS Title 
  FROM Diagnose.ICD10 dx
  JOIN dbo.MetaProblemType mp ON mp.ProbType = dx.ProbType
  WHERE PersonId = @PersonId
  ORDER BY dx.ProbActive DESC, mp.ProbDesc;
END]]>
	</row>
	<row ProcId="1041" StudyName="NDV" ProcName="NDV.ReportHbA1cTimeSeriesMoving" ProcDesc="Tidsserie for dårlig regulerte Type 1, bevegelig rapport" ProcParams=":StartYear, :HbA1cCutoff, :LookbackMonths, :LookForwardMonths" ListId="FR" GrantTo="public" MinVersion="6401" ChkSum="1896289518" LastUpdate="2018-10-08T19:34:46.713Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportHbA1cTimeSeriesMoving( @StartYear INT, @HbA1cCutoff FLOAT, @LookbackMonths INT, @LookForwardMonths INT )  AS
BEGIN
  DECLARE @StartDate DateTime;
  DECLARE @StopDate DateTime;
                    
  -- Merge labdata from ClinDatapoint to LabData
                                      
  IF ( SELECT cmptlevel FROM master.dbo.sysdatabases WHERE name = db_name() ) >= 100
    EXEC NDV.MergeHba1cToLabdata;
                        
  -- Find start and end of the year passed in as a parameter.
    
  SELECT @StartDate = CONVERT(DateTime,CONVERT(VARCHAR, @StartYear) + '-01-01');
  SET @StopDate = DATEADD( MONTH, @LookforwardMonths, @StartDate );

  SELECT 
    MonthList.StartTime AS MonthStart, 
    AllType1.NumPatients, 
    AboveCutoffAgg.NumHbA1c AS NumAboveCutoff, 
    AboveCutoffAgg.MinHbA1c, 
    AboveCutoffAgg.AvgHbA1cAboveCutoff, 
    AboveCutoffAgg.MaxHbA1c, 
    100.0 * AboveCutoffAgg.NumHbA1c / AllType1.NumPatients AS PctAboveCutoffTotal
  FROM

  ( 
    SELECT StartTime FROM Report.TimePeriods ml 
    WHERE PeriodType = 'MONTH' AND StartTime >= @StartDate AND StartTime <= @StopDate AND StartTime < GETDATE()
  ) MonthList

CROSS APPLY 

  (
    SELECT COUNT(Type1AboveCutoff.NumResult) AS NumHbA1c, 
      MIN(Type1AboveCutoff.NumResult) AS MinHbA1c,
      MAX(Type1AboveCutoff.NumResult) AS MaxHbA1c,
      AVG(Type1AboveCutoff.NumResult) AS AvgHbA1cAboveCutoff
    FROM   
    (
      SELECT cas.PersonId,lab.NumResult  
      FROM NDV.GetRecentPatientsTable( 1, MonthList.StartTime, @LookbackMonths ) cas
      JOIN dbo.GetLastLabDataTable( 1058, MonthList.StartTime) lab ON lab.PersonId = cas.PersonId
      WHERE NumResult >= @HbA1cCutoff
    ) Type1AboveCutoff
  ) AboveCutoffAgg

CROSS APPLY 

  ( 
    SELECT COUNT(*) AS NumPatients FROM NDV.GetRecentPatientsTable( 1, MonthList.StartTime, @LookbackMonths )
  ) AllType1 
  WHERE AllType1.NumPatients > 0
  ORDER BY MonthStart;

END;
]]>
	</row>
	<row ProcId="1042" StudyName="GBD" ProcName="GBD.RapportAtferd" ProcDesc="Atferdsregistrering 24t" ProcParams=":StudyId, :StartAt, :StopAt" ListId="FR" GrantTo="public" MinVersion="18212" ChkSum="772543972" LastUpdate="2019-05-22T14:17:30.877Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportAtferd( @PersonId INT, @StartAt DATETIME, @StopAt DATETIME ) AS
BEGIN
    SET LANGUAGE NORWEGIAN;
    SET NOCOUNT ON;
    SELECT 
        p.wk AS WeekNo, 
        MIN(EventTime) AS FirstForm, MAX(EventTime) AS LastForm,
        p.ItemId, mfi.ItemText, 
        MAX(Monday) AS Monday, MAX(Tuesday) AS Tuesday, MAX(Wednesday) AS Wednesday, MAX(Thursday) AS Thursday,  MAX(Friday) AS Friday,
        MAX(Saturday) AS Saturday, MAX(Sunday) AS Sunday
    FROM 
      (
        SELECT wk, EventTime, ItemId, [1] AS Monday, [2] AS Tuesday, [3] AS Wednesday, [4] AS Thursday, [5] AS Friday, [6] AS Saturday, [7] AS Sunday
        FROM
        (
          SELECT mfi.ItemId, ce.EventTime, cdp.EnumVal,
            DATEPART(ISO_WEEK,ce.EventTime) AS wk, 
            DATEPART(WEEKDAY,ce.EventTime) AS wd
          FROM dbo.ClinForm cf 
          JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
          JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId AND mf.FormName = 'GBD_ATFERD'
          JOIN dbo.MetaFormItem mfi ON mfi.FormId = cf.FormId AND mfi.ItemId BETWEEN 1630 AND 1653
          LEFT JOIN dbo.ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId = mfi.ItemId
          WHERE ce.PersonId = @PersonId
          AND cf.FormStatus = 'L'
          AND ( ce.EventTime >= @StartAt AND ce.EventTime < @StopAt )
        ) AS SourceTable
        PIVOT
        (
          MAX(EnumVal) FOR wd IN ( [1],[2],[3],[4],[5],[6],[7] ) 
        ) AS PivotTable 
      ) p
    JOIN dbo.MetaFormItem mfi ON mfi.FormId IN (923, 1047) AND mfi.ItemId = p.ItemId
    GROUP BY wk, p.ItemId, mfi.ItemText
    ORDER BY FirstForm DESC, p.ItemId;
END;]]>
	</row>
	<row ProcId="1043" StudyName="GBD" ProcName="GBD.RapportAtferdTotals" ProcDesc="Atferdsregistrering 24t totals" ProcParams=":StudyId, :StartAt, :StopAt" ListId="FR" GrantTo="public" MinVersion="18212" ChkSum="177243659" LastUpdate="2019-03-27T18:38:57.027Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportAtferdTotals ( @PersonId INT, @StartAt DATETIME, @StopAt DATETIME )
AS
BEGIN
    SELECT d,
        [1] AS Sleeping,
        [2] AS FeelingDown,
        [3] AS Restless,
        [4] AS Irritable,
        [5] AS Movement,
        [6] AS Hallucination,
        [7] AS Yelling,
        [8] AS ActionOut,
        [9] AS Calm,
        [-1] AS NoValue
    FROM (
        SELECT
            CONVERT( VARCHAR, ce.EventTime, 106 ) AS d,
            ISNULL(cdp.EnumVal, -1) AS EnumVal
        FROM dbo.ClinForm cf
        JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
        JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId AND mf.FormName = 'GBD_ATFERD'
        JOIN dbo.MetaItem mi ON mi.ItemId BETWEEN 1630 AND 1653
        LEFT OUTER JOIN dbo.ClinDataPoint cdp ON cdp.ItemId = mi.ItemId AND cdp.EventId = cf.EventId
        WHERE ce.PersonId = @PersonId
        AND cf.FormStatus = 'L'
        AND ( ce.EventTime >= @StartAt AND ce.EventTime < @StopAt )
    ) t
    PIVOT (
        COUNT( t.EnumVal ) FOR t.EnumVal IN ( [1], [2], [3], [4], [5], [6], [7], [8], [9], [-1] ) 
    ) PivotTable
END;]]>
	</row>
	<row ProcId="1044" StudyName="BARNEDIABETES" ProcName="BDR.RapportHbA1cSnittPerLege" ProcDesc="Rapport som viser gjennomsnittlig HbA1c-verdi per lege, basert p" ProcParams=":StudyId, :DiaType, :ExcludeNew" ListId="FR" GrantTo="public" MinVersion="19004" HelpText="Rapporten viser snitt av siste HbA1c for alle pasienter fordelt per lege, forutsatt at lege er brukt som gruppebegrep." ChkSum="463747042" LastUpdate="2019-12-11T22:44:34.300Z">
		<![CDATA[CREATE PROCEDURE BDR.RapportHbA1cSnittPerLege( @StudyId INT, @DiaType INT = 0, @ExcludeNew INT = 2 ) AS
BEGIN

  DECLARE @TotalGroupName VARCHAR(50) = 'Totalt';

  BEGIN TRY
    EXEC NDV.MergeHba1cToLabdata;
  END TRY
  BEGIN CATCH
    SET @TotalGroupName = 'Totalt (NB: Duplikater i skjemadata)';
  END CATCH;

-- Retrieve the latest HbA1c-values first

  SELECT v.PersonId, v.GroupId, v.GroupName, ld.NumResult, diatype.EnumVal
  INTO #labdata
  FROM dbo.ViewActiveCaseListStub v
  JOIN dbo.GetLastLabDataTable( 1058, GETDATE()) ld ON ld.PersonId = v.PersonId
  JOIN dbo.GetLastDateTable( 3323, NULL ) dxdate ON dxdate.PersonId = v.PersonId
  LEFT JOIN dbo.GetLastEnumValuesTable( 3196, NULL ) diatype ON diatype.PersonId = ld.PersonId
  WHERE ( v.StudyId = @StudyId ) 
    AND ( diatype.EnumVal = @DiaType OR @DiaType IS NULL OR @DiaType < 1 ) 
    AND ( ld.LabDate > dxdate.DTVal + 30.5 * @ExcludeNew );

-- Calculate percentiles per GroupId (doctor)

  SELECT GroupId, GroupName,
    PERCENTILE_DISC(0.10) WITHIN GROUP( ORDER BY NumResult ) OVER ( PARTITION BY GroupId ) AS P10,
    PERCENTILE_DISC(0.50) WITHIN GROUP( ORDER BY NumResult ) OVER ( PARTITION BY GroupId ) AS P50,
    PERCENTILE_DISC(0.90) WITHIN GROUP( ORDER BY NumResult ) OVER ( PARTITION BY GroupId ) AS P90
  INTO #percentiles
  FROM #labdata
  UNION 
  SELECT 999999, @TotalGroupName,
    PERCENTILE_DISC(0.10) WITHIN GROUP( ORDER BY NumResult ) OVER (),
    PERCENTILE_DISC(0.50) WITHIN GROUP( ORDER BY NumResult ) OVER (),
    PERCENTILE_DISC(0.90) WITHIN GROUP( ORDER BY NumResult ) OVER ()
  FROM #labdata;

-- Do standard aggregations

  SELECT * 
  INTO #minmax
  FROM
  (
    SELECT GroupId, GroupName, COUNT(PersonId) AS n, 
        MIN(NumResult) AS MinHbA1c, MAX(NumResult) AS MaxHbA1c, AVG(NumResult) AS MeanHbA1c
      FROM #labdata
      GROUP BY GroupId, GroupName
    UNION
    SELECT 999999, @TotalGroupName, COUNT(PersonId), 
        MIN(NumResult), MAX(NumResult), AVG(NumResult)
      FROM #labdata
  )  agg;

-- Combine the results

  SELECT m.GroupId, m.GroupName, m.n, m.MinHbA1c, p.P10, p.P50, p.P90, m.MaxHbA1c, m.MeanHbA1c
  FROM #minmax m
  JOIN #percentiles p ON p.GroupId = m.GroupId
  ORDER BY m.GroupId;

END]]>
	</row>
	<row ProcId="1045" StudyName="ROAS" ProcName="Report.PromForms" ProcDesc="Nedlastede PROM-skjema" ProcParams=":StartAt, :StopAt" ListId="FR" GrantTo="public" MinVersion="18201" CompatibilityLevel="100" ChkSum="-1630385935" LastUpdate="2019-07-25T11:22:43.673Z">
		<![CDATA[CREATE PROCEDURE Report.PromForms( @StartAt DATE, @StopAt DATE ) AS
BEGIN
  SELECT p.PersonId, mf.FormTitle, fo.FormOrderId, fo.CreatedAt, fo.ClinFormId, ul.UserName, fo.NotificationChannel,
  CONCAT( DATEPART(YEAR, fo.CreatedAt), ' - ', DATENAME( MONTH, fo.CreatedAt ) ) AS GroupHeader
  FROM PROM.FormOrder fo
  JOIN dbo.MetaForm mf ON mf.FormId = fo.FormId
  JOIN dbo.Person p ON p.PersonId = fo.PersonId AND ISNULL(p.TestCase,0) = 0
  JOIN dbo.UserList ul ON ul.UserId = fo.CreatedBy
  WHERE fo.OrderStatus = 'Completed' AND fo.CreatedAt BETWEEN @StartAt AND @StopAt
  ORDER BY fo.CreatedAt;
END
]]>
	</row>
	<row ProcId="1046" StudyName="VREX" ProcName="VREX.ReportLostToFollowUp" ProcDesc="Rapport som viser pasienter som ikke har blitt fulgt opp" ProcParams=":StudyId" ListId="FR" GrantTo="public" MinVersion="18000" ChkSum="-263078902" LastUpdate="2019-08-08T10:02:16.590Z">
		<![CDATA[CREATE PROCEDURE VREX.ReportLostToFollowUp( @StudyId INT ) AS
BEGIN
  SELECT DATEDIFF(DD, LastRegistered, GETDATE()) AS DaysSinceLastReg, Registrations.* FROM 
    (
    SELECT v.*, inclusion.EventTime AS 'Inclusion', oneYear.EventTime AS 'OneYear', twoYears.EventTime AS 'TwoYears',
      threeYears.EventTime AS 'ThreeYears', fourYears.EventTime AS 'FourYears', COALESCE(fourYears.EventTime, threeYears.EventTime, twoYears.EventTime, oneYear.EventTime, inclusion.EventTime) AS LastRegistered
    FROM dbo.ViewActiveCaseListStub v 
    LEFT JOIN dbo.GetLastDateTable(9784, NULL) inclusion ON v.PersonId = inclusion.PersonId
    LEFT JOIN dbo.GetLastDateTable(9788, NULL) oneYear ON v.PersonId = oneYear.PersonId
    LEFT JOIN dbo.GetLastDateTable(9789, NULL) twoYears ON v.PersonId = twoYears.PersonId
    LEFT JOIN dbo.GetLastDateTable(9790, NULL) threeYears ON v.PersonId = threeYears.PersonId
    LEFT JOIN dbo.GetLastDateTable(9791, NULL) fourYears ON v.PersonId = fourYears.PersonId
    WHERE v.StudyId = @StudyId AND fourYears.EventTime IS NULL 
    ) Registrations
  WHERE LastRegistered IS NOT NULL AND DATEDIFF(DD, LastRegistered, GETDATE()) > 365
  ORDER BY DaysSinceLastReg DESC;
END
]]>
	</row>
	<row ProcId="1047" StudyName="GBD" ProcName="GBD.RapportBeboerlisteEtterRomnummer" ProcDesc="Rapport som viser beboere etter romnummer" ProcParams=":StudyId" ListId="FR" GrantTo="public" MinVersion="19004" ChkSum="1481774854" LastUpdate="2019-08-28T09:17:10.600Z">
		<![CDATA[CREATE PROCEDURE GBD.RapportBeboerlisteEtterRomnummer ( @StudyId INT ) AS
BEGIN
    SELECT
        p.PersonId,
        p.CAVE,
        p.NB,
        p.DOB,
        p.ReverseName,
        val3.DTVal AS Arrival,
        val1.TextVal AS RoomNumber,
        mia.VerboseText AS HLR
    FROM dbo.Person p
    JOIN dbo.StudCase sc ON sc.PersonId = p.PersonId
    JOIN dbo.StudyStatus ss ON ss.StudyId = sc.StudyId AND ss.StatusId = sc.FinState AND ss.StatusActive = 1 AND ss.StudyId = @StudyId
    JOIN dbo.StudyGroup sg ON sg.StudyId = sc.StudyId AND sg.GroupId = sc.GroupId AND sg.GroupActive = 1
    JOIN dbo.UserList ul ON ul.CenterId = sg.CenterId AND ul.UserId = USER_ID()
    LEFT JOIN dbo.StudyUser su ON su.UserId = USER_ID() AND su.StudyId = sc.StudyId
    LEFT JOIN dbo.GetLastTextValuesTable( 3673, NULL ) val1 ON val1.PersonId = p.PersonId
    LEFT JOIN dbo.GetLastEnumValuesTable( 3437, NULL ) val2 ON val2.PersonId = p.PersonId
    LEFT JOIN dbo.GetLastDateTable( 4085, NULL ) val3 ON val3.PersonId = p.PersonId
    LEFT JOIN dbo.MetaItemAnswer mia ON mia.OrderNumber = val2.EnumVal AND mia.ItemId = 3437
    WHERE ( su.GroupId = sc.GroupId ) OR ( su.UserId IS NULL ) OR ( su.GroupId IS NULL ) OR ( su.ShowMyGroup = 0 )
    ORDER BY CASE
            WHEN val1.TextVal IS NOT NULL THEN 0
            ELSE 1
    END, val1.TextVal
END;]]>
	</row>
	<row ProcId="1048" StudyName="GBD" ProcName="GBD.ReportGruppekalender" ProcDesc="Rapport som viser aktivitetsplan sortert på gruppe og romnummer." ProcParams=":StudyId" ListId="FR" GrantTo="public" MinVersion="19016" ChkSum="-1569197630" LastUpdate="2019-09-13T07:45:00.177Z">
		<![CDATA[CREATE PROCEDURE GBD.ReportGruppekalender ( @StudyId INT ) AS
BEGIN
  SELECT v.*, RoomNumber.TextVal AS RoomNumber,
    MondayMorning.TextVal AS MondayMorn, MondayAfternoon.TextVal AS MondayAftern,
    TuesdayMorning.TextVal AS TuesdayMorn, TuesdayAfternoon.TextVal AS TuesdayAftern,
    WednesdayMorning.TextVal AS WednesdayMorn, WednesdayAfternoon.TextVal AS WednesdayAftern,
    ThursdayMorning.TextVal AS ThursdayMorn, ThursdayAfternoon.TextVal AS ThursdayAftern,
    FridayMorning.TextVal AS FridayMorn, FridayAfternoon.TextVal AS FridayAftern,
    SaturdayMorning.TextVal AS SaturdayMorn, SaturdayAfternoon.TextVal AS SaturdayAftern,
    SundayMorning.TextVal AS SundayMorn, SundayAfternoon.TextVal AS SundayAftern
  FROM dbo.ViewActiveCaseListStub v
  LEFT JOIN dbo.GetLastTextValuesTable(3673, NULL) RoomNumber ON v.PersonId = RoomNumber.PersonId
  LEFT JOIN dbo.GetLastFormTableByName ('GBD_AKTIVITETSKALENDER', NULL) Aktivitetskalender ON Aktivitetskalender.PersonId = v.PersonId
  LEFT JOIN dbo.ClinDataPoint MondayMorning ON MondayMorning.EventId = Aktivitetskalender.EventId AND MondayMorning.ItemId = 3026
  LEFT JOIN dbo.ClinDataPoint MondayAfternoon ON MondayAfternoon.EventId = Aktivitetskalender.EventId AND MondayAfternoon.ItemId = 3178
  LEFT JOIN dbo.ClinDataPoint TuesdayMorning ON TuesdayMorning.EventId = Aktivitetskalender.EventId AND TuesdayMorning.ItemId = 3173
  LEFT JOIN dbo.ClinDataPoint TuesdayAfternoon ON TuesdayAfternoon.EventId = Aktivitetskalender.EventId AND TuesdayAfternoon.ItemId = 3186
  LEFT JOIN dbo.ClinDataPoint WednesdayMorning ON WednesdayMorning.EventId = Aktivitetskalender.EventId AND WednesdayMorning.ItemId = 3174
  LEFT JOIN dbo.ClinDataPoint WednesdayAfternoon ON WednesdayAfternoon.EventId = Aktivitetskalender.EventId AND WednesdayAfternoon.ItemId = 3190
  LEFT JOIN dbo.ClinDataPoint ThursdayMorning ON ThursdayMorning.EventId = Aktivitetskalender.EventId AND ThursdayMorning.ItemId = 3175
  LEFT JOIN dbo.ClinDataPoint ThursdayAfternoon ON ThursdayAfternoon.EventId = Aktivitetskalender.EventId AND ThursdayAfternoon.ItemId = 3191
  LEFT JOIN dbo.ClinDataPoint FridayMorning ON FridayMorning.EventId = Aktivitetskalender.EventId AND FridayMorning.ItemId = 3176
  LEFT JOIN dbo.ClinDataPoint FridayAfternoon ON FridayAfternoon.EventId = Aktivitetskalender.EventId AND FridayAfternoon.ItemId = 3282
  LEFT JOIN dbo.ClinDataPoint SaturdayMorning ON SaturdayMorning.EventId = Aktivitetskalender.EventId AND SaturdayMorning.ItemId = 3300
  LEFT JOIN dbo.ClinDataPoint SaturdayAfternoon ON SaturdayAfternoon.EventId = Aktivitetskalender.EventId AND SaturdayAfternoon.ItemId = 3301
  LEFT JOIN dbo.ClinDataPoint SundayMorning ON SundayMorning.EventId = Aktivitetskalender.EventId AND SundayMorning.ItemId = 3302
  LEFT JOIN dbo.ClinDataPoint SundayAfternoon ON SundayAfternoon.EventId = Aktivitetskalender.EventId AND SundayAfternoon.ItemId = 3303
  WHERE v.StudyId = @StudyId
  ORDER BY v.GroupName, RoomNumber.TextVal, v.FullName;
END
]]>
	</row>
	<row ProcId="1049" StudyName="*" ProcName="Report.CaseAccessLog" ProcDesc="Innsynslogg, filtrerbar på bruker, arbeidssted og pasient." ProcParams=":StudyId, :StartAt, :StopAt, :UserName, :CenterId, :PersonId" ListId="FR" GrantTo="Administrator, Support, Leder, Avdelingsleder" MinVersion="18000" ChkSum="-132480605" LastUpdate="2019-11-15T13:16:24.653Z">
		<![CDATA[CREATE PROCEDURE Report.CaseAccessLog( @StudyId INT, @StartAt DATETIME, @StopAt DATETIME, @UserName SYSNAME, @CenterId INT, @PersonId INT ) AS
BEGIN
    SELECT a.*,             

      SUBSTRING( a.UserName, CHARINDEX('\', a.UserName, 0) + 1, LEN(a.UserName) - CHARINDEX('\', a.UserName,0)) AS UserNameShort

    FROM (SELECT ca.RowId,
                ca.PersonId,
                ca.CreatedAt,
                aat.AccessTypeText,
                CASE
                        WHEN ca.OpenInSeconds > 300 THEN CONCAT(ca.OpenInSeconds / 60, ' m')
                        WHEN ca.OpenInSeconds > 18000 THEN CONCAT(ca.OpenInSeconds / 3600, ' t')
                        WHEN ca.OpenInSeconds IS NULL THEN '(ukjent)'
                        ELSE CONCAT(ca.OpenInSeconds, ' s')
                END AS OpenDuration,
                CONVERT( DATE, ca.CreatedAt ) AS CreatedAtDay,
            ROW_NUMBER() OVER (PARTITION BY ca.RowId ORDER BY csl.ChangedAt DESC) AS rnk,
            csl.NewGroupId,
            p.FullName,
            sg.GroupName,
            sc1.CenterId,
            sc1.CenterName,
            ul.UserName
        FROM AuditLog.CaseAccess ca
        JOIN AuditLog.AccessType aat ON aat.AccessTypeId = ca.AccessTypeId
        JOIN dbo.StudCase sc ON sc.PersonId = ca.PersonId AND sc.StudyId = @StudyId
        JOIN dbo.Person p ON p.PersonId = sc.PersonId
        JOIN dbo.StudCaseLog csl ON csl.StudCaseId = sc.StudCaseId
        JOIN dbo.StudyGroup sg ON sg.GroupId = csl.NewGroupId AND sg.StudyId = sc.StudyId
        JOIN dbo.StudyCenter sc1 ON sc1.CenterId = sg.CenterId
        JOIN dbo.UserList ul ON ul.UserId = ca.CreatedBy
        JOIN dbo.StudyStatus ss ON ss.StudyId = sc.StudyId
        WHERE ca.CreatedAt >= csl.ChangedAt) a
    WHERE a.rnk = 1
    AND (a.CreatedAt >= @StartAt AND a.CreatedAt < @StopAt)
    AND (a.UserName LIKE CONCAT('%', @UserName, '%') OR ISNULL(@UserName, '') = '')
    AND (a.PersonId = ISNULL(@PersonId,a.PersonId))
    AND (a.CenterId = ISNULL(@CenterId,a.CenterId))
    ORDER BY a.RowId DESC;
END
]]>
	</row>
	<row ProcId="1050" StudyName="NDV" ProcName="NDV.ReportAverageNumberOfConsultationsHbA1c" ProcDesc="Rapport som viser antallet konsultasjoner skilt på HbA1c-nivå." ListId="FR" GrantTo="public" MinVersion="18000" ChkSum="588049394" LastUpdate="2019-11-06T10:45:48.303Z">
		<![CDATA[CREATE PROCEDURE NDV.ReportAverageNumberOfConsultationsHbA1c AS
BEGIN
  DECLARE @Population TABLE (PersonId INT, CenterId INT, HbA1c2016 FLOAT)--, CenterName VARCHAR(40))
  DECLARE @Consultations TABLE (PersonId INT, In2017 INT, In2018 INT)
  DECLARE @LabData2016 TABLE (PersonId INT, LabDate DATETIME, LabName VARCHAR(40), NumResult FLOAT)
  DECLARE @GroupBelow TABLE (CenterId INT, CenterName VARCHAR(40), nInPopulation INT, nWithConsultation2017 INT, AvgConsultations2017 FLOAT, nWithConsultation2018 INT, AvgConsultations2018 FLOAT, GroupHbA1c VARCHAR(5))
  DECLARE @GroupBelowTemp TABLE (CenterId INT, CenterName VARCHAR(40), nInPopulation INT, nWithConsultation2017 INT, AvgConsultations2017 FLOAT, nWithConsultation2018 INT, AvgConsultations2018 FLOAT, GroupHbA1c VARCHAR(5))
  DECLARE @GroupAboveTemp TABLE (CenterId INT, CenterName VARCHAR(40), nInPopulation INT, nWithConsultation2017 INT, AvgConsultations2017 FLOAT, nWithConsultation2018 INT, AvgConsultations2018 FLOAT, GroupHbA1c VARCHAR(5))
  DECLARE @GroupAbove TABLE (CenterId INT, CenterName VARCHAR(40), nInPopulation INT, nWithConsultation2017 INT, AvgConsultations2017 FLOAT, nWithConsultation2018 INT, AvgConsultations2018 FLOAT, GroupHbA1c VARCHAR(5))
  DECLARE @AllTemp TABLE (CenterId INT, CenterName VARCHAR(40), nInPopulation INT, nWithConsultation2017 INT, AvgConsultations2017 FLOAT, nWithConsultation2018 INT, AvgConsultations2018 FLOAT, GroupHbA1c VARCHAR(5))
  DECLARE @All TABLE (CenterId INT, CenterName VARCHAR(40), nInPopulation INT, nWithConsultation2017 INT, AvgConsultations2017 FLOAT, nWithConsultation2018 INT, AvgConsultations2018 FLOAT, GroupHbA1c VARCHAR(5))


  -- Siste HbA1c per 31.12.2016
  INSERT @LabData2016
  SELECT PersonId, LabDate, LabName, NumResult
  FROM (SELECT ld.PersonId, ld.LabDate, lc.LabName, ld.NumResult, RANK()
    OVER (
      PARTITION BY ld.PersonId
        ORDER BY ld.LabDate DESC, ResultId DESC ) AS OrderNo
      FROM dbo.LabData ld
      JOIN dbo.LabCode lc 
        ON lc.LabCodeId=ld.LabCodeId
      WHERE lc.LabClassId = 1058
        AND ld.LabDate <= '2016-12-31'
      AND ISNULL(ld.NumResult, -1) >= 0) a
    WHERE OrderNo = 1;


  -- Alle pasienter som er relevante for rapporten
  INSERT @Population
  SELECT DISTINCT ce.PersonId, sg.CenterId, LabData2016.NumResult HbA1c2016 FROM dbo.ClinDataPoint cdp
  JOIN dbo.ClinEvent ce ON ce.EventId = cdp.EventId
  JOIN Study s ON s.StudyId = ce.StudyId AND s.StudName IN ('NDV', 'ENDO', 'Barnediabetes')
  JOIN dbo.StudyGroup sg ON sg.StudyId = ce.StudyId AND sg.GroupId=ce.GroupId
  JOIN dbo.MyStudyCenters msc ON sg.CenterId = msc.CenterId
  JOIN dbo.StudyCenter sc ON sc.CenterId = sg.CenterId
  JOIN dbo.GetLastEnumValuesTable(3196, NULL) LastDiabetesType ON ce.PersonId = LastDiabetesType.PersonId
  JOIN @LabData2016 LabData2016 ON LabData2016.PersonId = ce.PersonId
  WHERE cdp.ItemId = 3196 
    AND ce.EventTime > DATEADD( MONTH, -15, '2017-01-01' ) AND ce.EventTime < '2017-01-01'
    AND LastDiabetesType.EnumVal = 1 -- sjekk at sist registrerte diagnose er diabetes type 1
    AND sc.CenterActive = 1 -- Ikke ta med DIPS AS, Sykehuspartner etc. i uttaket


  -- Konsultasjoner for 2017 og 2018
  INSERT @Consultations
  SELECT ISNULL(In2017.PersonId, In2018.PersonId), ISNULL(In2017.n, 0), ISNULL(In2018.n, 0)  FROM 
  (
    SELECT PersonId, COUNT(*) AS n FROM
      ( 
        SELECT ce.PersonId, CONVERT(DATE, ce.EventTime) EventDate FROM ClinEvent ce 
        JOIN ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId = 3196
        WHERE ce.EventTime BETWEEN '2017-01-01' AND '2017-12-31'
      ) sq
    GROUP BY PersonId
  ) In2017

  FULL JOIN

  (
    SELECT PersonId, COUNT(*) AS n FROM
    (
      SELECT ce.PersonId, CONVERT(DATE, ce.EventTime) EventDate FROM ClinEvent ce 
      JOIN ClinDataPoint cdp ON cdp.EventId = ce.EventId AND cdp.ItemId = 3196
      WHERE ce.EventTime BETWEEN '2018-01-01' AND '2018-12-31'
    ) sq
    GROUP BY PersonId
  ) In2018
  ON In2018.PersonId = In2017.PersonId


  -- Statistikk for pasienter med HbA1c under 75 mmol/mol
  INSERT @GroupBelowTemp
  SELECT msc.CenterId, msc.CenterName, n, 
    sq.n2017, ISNULL(sq.AvgConsultations2017, 0),
    sq.n2018, ISNULL(sq.AvgConsultations2018, 0), 'below'
  FROM 
    (
      SELECT Pop.CenterId, COUNT(*) AS n,
        SUM((CASE WHEN Consultations.In2017 > 0 THEN 1 ELSE 0 END)) AS n2017, AVG(CONVERT(FLOAT, Consultations.In2017)) AS AvgConsultations2017,
        SUM((CASE WHEN Consultations.In2018 > 0 THEN 1 ELSE 0 END)) AS n2018, AVG(CONVERT(FLOAT, Consultations.In2018)) AS AvgConsultations2018
      FROM @Population Pop
      JOIN @Consultations Consultations ON Consultations.PersonId = Pop.PersonId
      LEFT JOIN @LabData2016 lab ON pop.PersonId = lab.PersonId
      WHERE lab.NumResult < 75
      GROUP BY Pop.CenterId
    ) sq
  JOIN MyStudyCenters msc ON msc.CenterId = sq.CenterId


  INSERT @GroupBelow
  SELECT * FROM @GroupBelowTemp
  UNION ALL
  SELECT NULL, 'Totalt', n,
    sq.n2017, ISNULL(sq.AvgConsultations2017, 0),
    sq.n2018, ISNULL(sq.AvgConsultations2018, 0), 'below'
  FROM 
    (
      SELECT COUNT(*) AS n,
        SUM((CASE WHEN Consultations.In2017 > 0 THEN 1 ELSE 0 END)) AS n2017, AVG(CONVERT(FLOAT, Consultations.In2017)) AS AvgConsultations2017,
        SUM((CASE WHEN Consultations.In2018 > 0 THEN 1 ELSE 0 END)) AS n2018, AVG(CONVERT(FLOAT, Consultations.In2018)) AS AvgConsultations2018
      FROM @Population Pop
      JOIN @Consultations Consultations ON Consultations.PersonId = Pop.PersonId
      LEFT JOIN @LabData2016 lab ON pop.PersonId = lab.PersonId
      WHERE lab.NumResult < 75
    ) sq


  -- Statistikk for pasienter med HbA1c over eller lik 75 mmol/mol
  INSERT @GroupAboveTemp
  SELECT msc.CenterId, msc.CenterName, n,
    sq.n2017, ISNULL(sq.AvgConsultations2017, 0),
    sq.n2018, ISNULL(sq.AvgConsultations2018, 0), 'above'
  FROM 
    (
      SELECT Pop.CenterId, COUNT(*) AS n,
        SUM((CASE WHEN Consultations.In2017 > 0 THEN 1 ELSE 0 END)) AS n2017, AVG(CONVERT(FLOAT, Consultations.In2017)) AS AvgConsultations2017,
        SUM((CASE WHEN Consultations.In2018 > 0 THEN 1 ELSE 0 END)) AS n2018, AVG(CONVERT(FLOAT, Consultations.In2018)) AS AvgConsultations2018
      FROM @Population Pop
      JOIN @Consultations Consultations ON Consultations.PersonId = Pop.PersonId
      LEFT JOIN @LabData2016 lab ON pop.PersonId = lab.PersonId
      WHERE lab.NumResult >= 75
      GROUP BY Pop.CenterId
    ) sq
  JOIN MyStudyCenters msc ON msc.CenterId = sq.CenterId

  INSERT @GroupAbove
  SELECT * FROM @GroupAboveTemp
  UNION ALL
  SELECT NULL, 'Totalt', n,
    sq.n2017, ISNULL(sq.AvgConsultations2017, 0),
    sq.n2018, ISNULL(sq.AvgConsultations2018, 0), 'above'
  FROM 
  (
    SELECT COUNT(*) AS n,
      SUM((CASE WHEN Consultations.In2017 > 0 THEN 1 ELSE 0 END)) AS n2017, AVG(CONVERT(FLOAT, Consultations.In2017)) AS AvgConsultations2017,
      SUM((CASE WHEN Consultations.In2018 > 0 THEN 1 ELSE 0 END)) AS n2018, AVG(CONVERT(FLOAT, Consultations.In2018)) AS AvgConsultations2018
    FROM @Population Pop
    JOIN @Consultations Consultations ON Consultations.PersonId = Pop.PersonId
    LEFT JOIN @LabData2016 lab ON pop.PersonId = lab.PersonId
    WHERE lab.NumResult >= 75
  ) sq


  -- Statistikk for hele populasjonen uten hensyn til HbA1c-nivå 
  INSERT @AllTemp
  SELECT msc.CenterId, msc.CenterName, n,
    sq.n2017, ISNULL(sq.AvgConsultations2017, 0),
    sq.n2018, ISNULL(sq.AvgConsultations2018, 0), 'all'
  FROM 
  (
    SELECT Pop.CenterId, COUNT(*) AS n,
      SUM((CASE WHEN Consultations.In2017 > 0 THEN 1 ELSE 0 END)) AS n2017, AVG(CONVERT(FLOAT, Consultations.In2017)) AS AvgConsultations2017,
      SUM((CASE WHEN Consultations.In2018 > 0 THEN 1 ELSE 0 END)) AS n2018, AVG(CONVERT(FLOAT, Consultations.In2018)) AS AvgConsultations2018
    FROM @Population Pop
    JOIN @Consultations Consultations ON Consultations.PersonId = Pop.PersonId
    GROUP BY Pop.CenterId
  ) sq
  JOIN MyStudyCenters msc ON msc.CenterId = sq.CenterId


  INSERT @All
  SELECT * FROM @AllTemp
  UNION ALL
  SELECT NULL, 'Totalt', n,
    sq.n2017, ISNULL(sq.AvgConsultations2017, 0),
    sq.n2018, ISNULL(sq.AvgConsultations2018, 0), 'all'
  FROM 
    (
      SELECT COUNT(*) AS n,
        SUM((CASE WHEN Consultations.In2017 > 0 THEN 1 ELSE 0 END)) AS n2017, AVG(CONVERT(FLOAT, Consultations.In2017)) AS AvgConsultations2017,
        SUM((CASE WHEN Consultations.In2018 > 0 THEN 1 ELSE 0 END)) AS n2018, AVG(CONVERT(FLOAT, Consultations.In2018)) AS AvgConsultations2018
      FROM @Population Pop
      JOIN @Consultations Consultations ON Consultations.PersonId = Pop.PersonId
    ) sq

  -- endeleg resultat
  SELECT * FROM @GroupBelow 
  UNION ALL
 SELECT * FROM @GroupAbove
  UNION ALL
  SELECT * FROM @All
END]]>
	</row>
	<row ProcId="1051" StudyName="GBD" ProcName="Report.ClinicalNews" ProcDesc="Rapport for nye skjema i gitt tidsperiode" ProcParams=":StudyId" ListId="FR" GrantTo="public" MinVersion="18000" ChkSum="1747978873" LastUpdate="2019-11-04T13:08:32.603Z">
		<![CDATA[CREATE PROCEDURE Report.ClinicalNews( @StudyId INT, @StartAt DateTime, @StopAt DateTime ) AS
BEGIN
  SELECT p.DOB, p.FullName, mf.FormTitle, cf.Comment, cf.CachedText,
    dbo.ShortTime(ce.EventTime) AS ShortTime,
    ce.EventTime,up.FullName AS UserFullName, up.Signature, p.GroupName, 
    cf.CreatedAt
  FROM dbo.ViewActiveCaseListStub p
  JOIN dbo.ClinEvent ce ON ce.PersonId = p.PersonId AND ce.StudyId = p.StudyId
  JOIN dbo.ClinForm cf ON cf.EventId = ce.EventId AND DeletedAt IS NULL 
  JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId
  LEFT JOIN dbo.UserList ul ON ul.UserId = cf.CreatedBy
  LEFT JOIN dbo.Person up ON up.PersonId = ul.PersonId                                                                                                  
  WHERE p.StudyId = @StudyId AND
      ( ( ce.EventTime >= @StartAt AND ce.EventTime < @StopAt ) OR
      ( mf.FormName IN ('GBD_DRIKKE', 'Glukose24t', 'GBD_ATFERD') AND ce.EventTime >= CONVERT(DATE, @StartAt) AND ce.EventTime < @StopAt ) )
  ORDER BY p.GroupName,p.FullName, ce.EventTime DESC;
END
]]>
	</row>
	<row ProcId="1052" StudyName="*" ProcName="Report.UserListByTempSite" ProcDesc="Rapport over tidsavgrenset tilgang til arbeidssteder" ListId="FR" GrantTo="Administrator, Support, Leder, Avdelingsleder" MinVersion="18000" ChkSum="-1901872106" LastUpdate="2019-11-15T13:28:59.060Z">
		<![CDATA[CREATE PROCEDURE Report.UserListByTempSite AS
BEGIN
  SELECT 
    subj.UserId, USER_NAME(subj.UserId) AS UserName, subjPrs.ReverseName AS GrantedTo, sc.CenterName, subjMp.ProfName, 
    uca.StartAt, uca.StopAt, uca.Comment, admPrs.ReverseName AS GrantedBy
  FROM dbo.Person AS admPrs 
    RIGHT OUTER JOIN dbo.MetaProfession AS subjMp 
    INNER JOIN dbo.UserCenterAccess AS uca 
    INNER JOIN dbo.UserList AS subj ON uca.UserId = subj.UserId 
    INNER JOIN dbo.StudyCenter AS sc ON uca.CenterId = sc.CenterId ON subjMp.ProfId = subj.ProfId 
    LEFT OUTER JOIN dbo.UserList AS administrator ON uca.GrantedBy = administrator.UserId ON admPrs.PersonId = administrator.PersonId 
    LEFT OUTER JOIN dbo.Person AS subjPrs ON subj.PersonId = subjPrs.PersonId
  ORDER BY sc.CenterName;
END]]>
	</row>
	<row ProcId="1053" StudyName="ROAS" ProcName="ROAS.ReportFamilyGroup" ProcDesc="Rapport knyttet til enkeltskjema" ProcParams=":PersonId" ListId="FR" GrantTo="public" MinVersion="18000" ChkSum="-1873731438" LastUpdate="2019-11-20T10:26:11.010Z">
		<![CDATA[CREATE PROCEDURE ROAS.ReportFamilyGroup( @PersonId INT ) AS 
BEGIN
  SELECT p.*, q1485.TextVal 
  FROM dbo.Person p
  JOIN dbo.GetLastQuantityTable( 1484, NULL ) q1484 ON q1484.PersonId = p.PersonId
  LEFT JOIN dbo.GetLastTextValuesTable( 1485, NULL ) q1485 ON q1485.PersonId = p.PersonId
  WHERE q1484.Quantity = dbo.GetLastQuantityInThePast( @PersonId, 1484, GETDATE() );
END
]]>
	</row>
	<row ProcId="1101" StudyName="LANGTID" ProcName="dbo.GetCaseListFocused" ProcDesc="Overvåket status" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="228003376" LastUpdate="2019-11-15T12:26:17.300Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1102" StudyName="LANGTID" ProcName="dbo.GetCaseListNextINR" ProcDesc="Marevandosering" ProcParams=":StudyId" ListId="CASE" GrantTo="public" InfoCaption="Neste dosering" ChkSum="-2017528644" LastUpdate="2019-11-15T12:26:33.140Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1103" StudyName="LANGTID" ProcName="dbo.GetCaseListH03AA" ProcDesc="Medikamentbruk: Thyroideasubstitusjon (H03AA)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="425743413" LastUpdate="2019-01-12T07:04:53.830Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1104" StudyName="LANGTID" ProcName="dbo.GetCaseListC01AA" ProcDesc="Medikamentbruk: Digitalis (C01AA)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1830326932" LastUpdate="2019-01-12T07:04:59.923Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1105" StudyName="LANGTID" ProcName="dbo.GetCaseListC09" ProcDesc="Medikamentbruk: ACEI/A2B (C09)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1326333855" LastUpdate="2019-01-12T07:05:03.767Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1106" StudyName="LANGTID" ProcName="dbo.GetCaseListJ01" ProcDesc="Medikamentbruk: Antibiotika (J01)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" InfoCaption="Antibiotikum og indikasjon" ChkSum="1838475273" LastUpdate="2019-01-12T07:05:07.800Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1107" StudyName="LANGTID" ProcName="dbo.GetCaseListN06A" ProcDesc="Medikamentbruk: Antidepressiva (N06A)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1001314015" LastUpdate="2019-01-12T07:05:13.487Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1108" StudyName="LANGTID" ProcName="dbo.GetCaseListA10" ProcDesc="Medikamentbruk: Antidiabetika (A10)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="868447210" LastUpdate="2019-07-02T12:11:22.113Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1109" StudyName="LANGTID" ProcName="dbo.GetCaseListN03" ProcDesc="Medikamentbruk: Antiepileptika (N03)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="936625583" LastUpdate="2019-01-12T07:05:21.017Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1110" StudyName="LANGTID" ProcName="dbo.GetCaseListN04BA" ProcDesc="Medikamentbruk: Antiparkinson-midler (N04BA)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-625257622" LastUpdate="2019-01-12T07:05:24.597Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1111" StudyName="LANGTID" ProcName="dbo.GetCaseListN05B" ProcDesc="Medikamentbruk: Benzodiazepiner (N05B)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-600012495" LastUpdate="2019-01-12T07:05:28.843Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1112" StudyName="LANGTID" ProcName="dbo.GetCaseListN06D" ProcDesc="Medikamentbruk: Demensmedisin (N06D)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1499342667" LastUpdate="2019-01-12T07:05:32.877Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1113" StudyName="LANGTID" ProcName="dbo.GetCaseListB01AA03" ProcDesc="Medikamentbruk: Marevan (B01AA03)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="1162000712" LastUpdate="2019-07-02T12:13:03.770Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1114" StudyName="LANGTID" ProcName="dbo.GetCaseListN05A" ProcDesc="Medikamentbruk: Nevroleptika (N05A)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="959654606" LastUpdate="2019-01-12T07:05:36.203Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1115" StudyName="LANGTID" ProcName="dbo.GetCaseListNSAID" ProcDesc="Medikamentbruk: NSAID (M01A)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="120214060" LastUpdate="2019-01-12T07:05:39.720Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1116" StudyName="LANGTID" ProcName="dbo.GetCaseListN02A" ProcDesc="Medikamentbruk: Opioider (N02A)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1461878052" LastUpdate="2019-01-12T07:05:42.987Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1117" StudyName="LANGTID" ProcName="dbo.GetCaseListProblemE10" ProcDesc="Diagnose: Diabetes Mellitus Type-1" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1253431468" LastUpdate="2019-01-12T07:05:49.250Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1118" StudyName="LANGTID" ProcName="dbo.GetCaseListProblemE11" ProcDesc="Diagnose: Diabetes Mellitus Type-2" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1253567148" LastUpdate="2019-01-12T07:05:52.953Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1119" StudyName="LANGTID" ProcName="dbo.GetCaseListWeightMissing" ProcDesc="Ernæring: Ikke veid siste måned" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-797625603" LastUpdate="2019-01-12T07:05:56.160Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1121" StudyName="LANGTID" ProcName="dbo.GetCaseListDruidHigh" ProcDesc="Interaksjoner: DRUID Rødt nivå" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1283549488" LastUpdate="2019-01-12T07:05:59.517Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1122" StudyName="LANGTID" ProcName="dbo.GetCaseListDruidMedium" ProcDesc="Interaksjoner: DRUID Rødt og gult nivå" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1277661692" LastUpdate="2019-01-12T07:06:02.550Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1123" StudyName="LANGTID" ProcName="dbo.GetCaseListAntiHTLowBP" ProcDesc="Forsiktighetsregler: Antihypertensiva og BT &lt; 120" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="2119233278" LastUpdate="2019-01-12T07:06:05.783Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1124" StudyName="LANGTID" ProcName="dbo.GetCaseListN04BAN05A" ProcDesc="Kontraindikasjoner: Antiparkinson + nevroleptika" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="125278656" LastUpdate="2019-01-12T07:06:08.907Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1125" StudyName="LANGTID" ProcName="dbo.GetCaseListAF" ProcDesc="Underbehandling: Atrieflimmer m/ behandling" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1544602731" LastUpdate="2019-01-12T07:06:12.220Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1126" StudyName="LANGTID" ProcName="dbo.GetCaseListC09LowGFR" ProcDesc="Forsiktighetsregler: Bruker ACEI/A2-blokker med GFR &lt; 60" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-469281207" LastUpdate="2019-01-12T07:06:15.300Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1127" StudyName="LANGTID" ProcName="dbo.GetCaseListMetforminGFR" ProcDesc="Forsiktighetsregler: Metformin og GFR verdi" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-24155537" LastUpdate="2019-01-12T07:06:31.783Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1129" StudyName="LANGTID" ProcName="dbo.GetCaseListWarfarinNSAID" ProcDesc="Kontraindikasjoner: Warfarin/DOAK + NSAIDs" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-519768046" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1132" StudyName="LANGTID" ProcName="GBD.GetCaseListLastHulten" ProcDesc="Prosess: Siste Hulten" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-467960456" LastUpdate="2019-12-02T18:46:49.503Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1133" StudyName="LANGTID" ProcName="dbo.GetCaseListOldLab" ProcDesc="Prosess: Siste labdata (eksterne)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1508692031" LastUpdate="2019-01-12T07:06:39.890Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1134" StudyName="LANGTID" ProcName="GBD.GetCaseListLastMMSE" ProcDesc="Prosess: Siste MMSE-NR3" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1955921660" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1136" StudyName="LANGTID" ProcName="dbo.GetCaseListC07" ProcDesc="Medikamentbruk: Betablokker (C07)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1101940065" LastUpdate="2019-01-12T07:06:46.440Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1137" StudyName="LANGTID" ProcName="dbo.GetCaseListC08" ProcDesc="Medikamentbruk: Kalsiumantagonister (C08)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1846670416" LastUpdate="2019-01-12T07:06:50.017Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1138" StudyName="LANGTID" ProcName="dbo.GetCaseListN02BE" ProcDesc="Medikamentbruk: Paracetamol (N02BE)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-204246923" LastUpdate="2019-01-12T07:06:53.893Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1139" StudyName="LANGTID" ProcName="dbo.GetCaseListC03" ProcDesc="Medikamentbruk: Diuretika (C03)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1973731914" LastUpdate="2019-01-12T07:06:57.673Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1141" StudyName="LANGTID" ProcName="GBD.GetCaseListTvangsvedtak" ProcDesc="Tvang: Aktive vedtak" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="515" ChkSum="1127095365" LastUpdate="2019-11-26T18:02:02.447Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1142" StudyName="LANGTID" ProcName="GBD.GetCaseListNoMMSELastYear" ProcDesc="Prosess: Ikke MMSE-NR3 siste år" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-943529128" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1144" StudyName="LANGTID" ProcName="GBD.GetCaseListNoHulten3Months" ProcDesc="Prosess: Ikke Hulten siste 3 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="2027280369" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1145" StudyName="LANGTID" ProcName="GBD.GetCaseListNoECG6Months" ProcDesc="Prosess: Ikke EKG siste 6 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="755081681" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1146" StudyName="LANGTID" ProcName="dbo.GetCaseListBPMissing" ProcDesc="Prosess: Ikke BT siste 60 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1635536241" LastUpdate="2019-01-12T07:07:05.003Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1147" StudyName="LANGTID" ProcName="dbo.GetCaseListLastDocForm" ProcDesc="Prosess: Ikke legekontakt siste 90 dager" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-206700249" LastUpdate="2019-01-12T07:07:11.097Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1148" StudyName="LANGTID" ProcName="dbo.GetCaseListN05B" ProcDesc="Medikamentbruk: Anxiolytika (N05B)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="685705816" LastUpdate="2019-01-12T07:07:14.813Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1149" StudyName="LANGTID" ProcName="dbo.GetCaseListN05C" ProcDesc="Medikamentbruk: Hypnotika (N05C)" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-2017695124" LastUpdate="2019-01-12T07:07:18.550Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1150" StudyName="LANGTID" ProcName="dbo.GetCaseListNoBloodTest" ProcDesc="Prosess: Ingen labdata siste 6 mnd" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1375963436" LastUpdate="2019-01-12T07:07:22.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1151" StudyName="LANGTID" ProcName="GBD.GetCaseListAnticholinergic" ProcDesc="Forsiktighetsregler: Antikolinergika og demens" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6408" ChkSum="-947662013" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1152" StudyName="LANGTID" ProcName="GBD.GetCaseListOppholdstype" ProcDesc="Personer: Oppholdstype" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="263239325" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1153" StudyName="LANGTID" ProcName="dbo.GetCaseListA10A" ProcDesc="Medikamentbruk: Insulin (A10A)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="442329811" LastUpdate="2019-07-02T12:11:30.550Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1156" StudyName="LANGTID" ProcName="dbo.GetCaseListDiabetes" ProcDesc="Diagnose: Diabetes" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="1359314191" LastUpdate="2019-01-12T07:07:32.533Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1158" StudyName="LANGTID" ProcName="GBD.GetCaseListAvvikOpenThisTertial" ProcDesc="Avvik: Åpne avvik dette tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-2078410159" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1159" StudyName="LANGTID" ProcName="GBD.GetCaseListAvvikOpenLastTertial" ProcDesc="Avvik: Åpne avvik forrige tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-97238586" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1160" StudyName="LANGTID" ProcName="GBD.GetCaseListAvvikMineThisTertial" ProcDesc="Avvik: Mine avvik dette tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-488638379" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1161" StudyName="LANGTID" ProcName="GBD.GetCaseListAvvikMineLastTertial" ProcDesc="Avvik: Mine avvik forrige tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1103776830" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1162" StudyName="LANGTID" ProcName="GBD.GetCaseListUnsignedInfectionForms" ProcDesc="Infeksjoner: Usignerte infeksjonsregistreringer" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-1008272735" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1163" StudyName="LANGTID" ProcName="GBD.GetCaseListNorGEP" ProcDesc="NorGEP: Anbefalinger fra NorGEP" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="512" ChkSum="-1450799981" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1164" StudyName="LANGTID" ProcName="GBD.GetCaseListProblemI50" ProcDesc="Diagnose: Hjertesvikt" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt, Sykepleier, Vernepleier" ChkSum="-2029308554" LastUpdate="2019-07-02T12:09:40.707Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1165" StudyName="LANGTID" ProcName="dbo.GetCaseListB01AF" ProcDesc="Medikamentbruk: DOAK (B01AF)" ProcParams=":StudyId" ListId="CASE" GrantTo="Lege, Farmasøyt" ChkSum="787953787" LastUpdate="2019-07-02T12:13:16.880Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1166" StudyName="LANGTID" ProcName="GBD.GetCaseListFormVaccine" ProcDesc="Prosess: Vaksinering" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6630" ChkSum="754562823" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1167" StudyName="LANGTID" ProcName="dbo.GetCaseListProBNPgt1522" ProcDesc="Forskning: ProBNP &gt; 1522" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18001" ChkSum="382479211" LastUpdate="2019-01-12T07:07:38.410Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1168" StudyName="LANGTID" ProcName="dbo.GetCaseListProBNPgt1522Untreated" ProcDesc="Underbehandling: ProBNP &gt; 1522 uten ACEI/A2RB" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18001" ChkSum="-1534233071" LastUpdate="2019-01-12T07:07:57.750Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1171" StudyName="LANGTID" ProcName="GBD.GetCaseListFormAvvikThisTertile" ProcDesc="Avvik: Alle avvik dette tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18020" ChkSum="866643257" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1172" StudyName="LANGTID" ProcName="GBD.GetCaseListFormAvvikLastTertile" ProcDesc="Avvik: Alle avvik forrige tertial" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18020" ChkSum="1441586350" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1173" StudyName="LANGTID" ProcName="GBD.GetCaseListFormBeslutninger" ProcDesc="Beslutninger: Siste beslutninger" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18020" ChkSum="-386516353" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1174" StudyName="LANGTID" ProcName="GBD.GetCaseListNoFormBeslutninger" ProcDesc="Beslutninger: Uten beslutninger" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="18020" ChkSum="-810526655" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1175" StudyName="LANGTID" ProcName="GBD.GetCaseListDrugCount" ProcDesc="Medikamentbruk: Antall faste medisiner" ProcParams=":StudyId" ListId="CASE" GrantTo="public" MinVersion="6000" ChkSum="-700582136" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="1177" StudyName="LANGTID" ProcName="dbo.GetCaseListN05AexLowDoseH04" ProcDesc="Medikamentbruk: Antipsykotika (N05A) unntatt lavdose N05AH04" ProcParams=":StudyId" ListId="CASE" GrantTo="public" ChkSum="-43355225" LastUpdate="2018-06-21T11:57:24.283Z">
		<![CDATA[]]>
	</row>
	<row ProcId="2001" StudyName="*" ProcName="Report.GetFormData" ProcDesc="QuickStat: Skjemadata for et skjema og en person" ProcParams=":PersonId, :FormName" ListId="QS" GrantTo="public" MinVersion="6635" ChkSum="582825772" LastUpdate="2018-08-10T08:31:28.360Z">
		<![CDATA[CREATE PROCEDURE Report.GetFormData( @PersonId INT, @FormName VARCHAR(32) ) AS
BEGIN
  -- Retrieve data actually registered on specific form with latest data first
  -- The date conversion in DATEDIFF makes the quantity compatible with Excel dates.
  -- Excel has a bug for the year 1900, See https://www.joelonsoftware.com/2006/06/16/my-first-billg-review/.
  SELECT a.* FROM
  (
    SELECT ce.PersonId, mi.VarName, ISNULL(dp.Quantity, ISNULL(DATEDIFF(DD,'1899-12-30',dp.DTVal),DATALENGTH(dp.TextVal))) AS Quantity, ce.EventTime, dp.RowId,
      RANK() OVER ( PARTITION BY mi.ItemId ORDER BY ce.EventTime, dp.RowId DESC ) AS OrderBy 
    FROM dbo.ClinDatapoint dp 
      JOIN dbo.ClinEvent ce ON ce.EventId = dp.EventId
      JOIN dbo.ClinForm cf ON cf.EventId = ce.EventId
      JOIN dbo.MetaItem mi ON mi.ItemId = dp.ItemId
      JOIN dbo.MetaFormItem mfi ON mfi.FormId = cf.FormId AND mfi.ItemId = mi.ItemId
      JOIN dbo.MetaForm mf ON mf.FormId = mfi.FormId 
    WHERE mf.FormName = @FormName AND ce.PersonId = @PersonId
  ) a
  WHERE a.OrderBy = 1;
END]]>
	</row>
	<row ProcId="2002" StudyName="*" ProcName="Report.NorGEP" ProcDesc="QuickStat: NorGep kriterier" ListId="QS" GrantTo="public" MinVersion="6634" ChkSum="-1193757807" LastUpdate="2018-03-29T16:51:31.867Z">
		<![CDATA[CREATE PROCEDURE Report.NorGeP AS
BEGIN

  SELECT dt.PersonId, ng.Id AS NorGeP, ISNULL( dt.Dose24hDD, 0 ) AS DpValue, dt.StartAt, dt.TreatId AS RowId
  FROM dbo.OngoingTreatment dt JOIN KB.NorGEP ng ON dt.ATC=ng.ATC 
  JOIN dbo.Person p ON p.PersonId=dt.PersonId   
  WHERE ( ( ng.MaxDose IS NULL ) OR ( ng.MaxDose < dt.Dose24HDD ) OR ( dt.Dose24hDD IS NULL ) ) 
  AND ( ( p.DOB < getdate()-365.25*ng.AgeLow ) AND ( p.DOB > getdate()-365.24*ng.AgeHigh ) )                                                                 

  UNION

  SELECT a.PersonId, ng.NgId, a.AlertLevel, a.CreatedAt, a.AlertId
  FROM dbo.Alert a 
  JOIN KB.InteractionNorGEP ng ON ng.AlertClass=a.AlertClass
  JOIN KB.NorGEP n ON n.Id=ng.NgId
  JOIN dbo.KbInteraction i ON i.IntId=ng.IntId
  WHERE a.AlertLevel > 0
  
  UNION

  SELECT PersonId, 36, DrugCount, GETDATE(), PersonId
  FROM KB.ViewNorGEPPoly
  ORDER BY PersonId, NorGeP;
END;

]]>
	</row>
	<row ProcId="3000" StudyName="ROAS" ProcName="Dash.RoasGroupCount" ProcDesc="Pasienter per behandlingssted" ListId="DASH" GrantTo="public" MinVersion="6400" ChkSum="-272109820" LastUpdate="2018-03-07T18:54:11.367Z">
		<![CDATA[CREATE PROCEDURE Dash.RoasGroupCount AS
BEGIN
  SELECT Report.PartitionKey(Dataset.GroupId) AS PartitionKey,Report.RowKey( Dataset.TimeAxis) AS RowKey,  
  Dataset.*,
  DataSource.*
  FROM 
  (
  SELECT
    Report.StartOfMonth(getdate()) AS TimeAxis,
    sc.GroupId,count(*) AS n 
  FROM dbo.StudCase sc
  JOIN dbo.Study s ON s.StudyId=sc.StudyId AND s.StudName = 'ROAS'
  GROUP BY sc.GroupId
  ) Dataset
  CROSS JOIN Report.DataSource() AS DataSource
  ORDER BY TimeAxis,GroupId
END]]>
	</row>
	<row ProcId="3001" StudyName="NDV" ProcName="Dash.NdvType1Consent" ProcDesc="Prosentandel Type-1 med positivt samtykke" ListId="DASH" GrantTo="public" MinVersion="6400" ChkSum="2107533312" LastUpdate="2018-08-07T08:45:04.607Z">
		<![CDATA[CREATE PROCEDURE Dash.NdvType1Consent AS
BEGIN
  SELECT 
    Report.PartitionKey( CenterId ) AS PartitionKey,
    Report.RowKeyReverse( TimeAxis ) AS RowKey,
    'MM' AS TimeResolution,
    Dataset.*,
    DataSource.*
  FROM 
  
  ( 
    SELECT TimeAxis, CenterId, MonthSum AS Type1Events, 
    n AS Type1PositiveConsent, 100.0 * n / MonthSum AS Type1PercentPositiveConsent
    FROM 
    (
      SELECT DATEADD( MM, 1, MonthList.StartTime ) AS TimeAxis, agg.CenterId, agg.EnumVal, agg.n,
      SUM(agg.n) OVER ( PARTITION BY CenterId, MonthList.EndTime ) AS MonthSum
      FROM
      (
        SELECT StartTime, EndTime 
        FROM Report.TimePeriods ml
        WHERE PeriodType = 'MONTH' AND StartTime > DATEADD( MM, -12, GETDATE() ) AND EndTime < GETDATE()
      ) MonthList
  
      CROSS APPLY
  
      ( 
        SELECT visits.CenterId, consent.EnumVal, count(*) AS n
        FROM dbo.GetLastEnumValuesTable( 3196, MonthList.EndTime ) diatype
        JOIN
        (
          SELECT ce.PersonId, sg.CenterId, COUNT(*) AS visitcount 
    	    FROM dbo.ClinEvent ce  
          JOIN dbo.StudyGroup sg ON sg.StudyId=ce.StudyId AND sg.GroupId = ce.GroupId
          WHERE EventTime BETWEEN MonthList.StartTime AND MonthList.EndTime
          GROUP BY ce.PersonId, sg.CenterId 
        ) visits
          ON visits.PersonId = diatype.PersonId
        LEFT OUTER JOIN dbo.GetLastEnumValuesTable( 3389, MonthList.EndTime ) consent 
          ON consent.PersonId = diatype.PersonId
      WHERE diatype.EnumVal = 1
      GROUP BY visits.CenterId, consent.EnumVal
      ) agg
    ) ds
    WHERE ds.EnumVal= 1
  ) Dataset
  
  CROSS JOIN Report.DataSource() AS DataSource
  ORDER BY TimeAxis DESC, CenterId;
END]]>
	</row>
	<row ProcId="3002" StudyName="NDV" ProcName="Dash.NdvType1HbA1cAbove9" ProcDesc="Prosentandel Type-1 med HbA1c på 75 (9%) eller mer" ListId="DASH" GrantTo="public" MinVersion="6400" ChkSum="1266218665" LastUpdate="2018-10-03T16:04:18.390Z">
		<![CDATA[CREATE PROCEDURE Dash.NdvType1HbA1cAbove9 AS
BEGIN

  SELECT
  
    Report.PartitionKey( ul.CenterId ) AS PartitionKey,
    Report.RowKeyReverse( Dataset.TimeAxis ) AS RowKey,
    'MM' AS TimeResolution,
    Dataset.*,
    DataSource.*
  
    FROM
  
  ( SELECT
      MonthList.StartTime AS TimeAxis, 
      AllType1.NumPatients,
      AboveCutoffAgg.NumHbA1c AS NumAboveCutoff, 
      AboveCutoffAgg.MinHbA1c,
      AboveCutoffAgg.AvgHbA1cAboveCutoff, 
      AboveCutoffAgg.MaxHbA1c,
      100.0 * AboveCutoffAgg.NumHbA1c / AllType1.NumPatients AS PctAboveCutoffTotal
    FROM
  
    (
      SELECT StartTime FROM Report.TimePeriods ml 
      WHERE PeriodType = 'MONTH' AND StartTime > DATEADD( YY, -5, GETDATE() ) AND StartTime < GETDATE()
    ) MonthList
  
  CROSS APPLY
  
    (
      SELECT COUNT(Type1AboveCutoff.NumResult) AS NumHbA1c,
        MIN(Type1AboveCutoff.NumResult) AS MinHbA1c,
        MAX(Type1AboveCutoff.NumResult) AS MaxHbA1c,
        AVG(Type1AboveCutoff.NumResult) AS AvgHbA1cAboveCutoff
      FROM
      (
        SELECT cas.PersonId,lab.NumResult
        FROM NDV.GetRecentPatientsTable( 1, MonthList.StartTime, 15 ) cas
        JOIN dbo.GetLastLabDataTable( 1058, MonthList.StartTime) lab ON lab.PersonId = cas.PersonId
  	  WHERE NumResult >= 75
      ) Type1AboveCutoff
    ) AboveCutoffAgg
  
  CROSS APPLY 
  
    (
      SELECT COUNT(*) AS NumPatients FROM NDV.GetRecentPatientsTable( 1, MonthList.StartTime, 15 )
    ) AllType1
    WHERE AllType1.NumPatients > 0
  )  Dataset
  
  CROSS JOIN Report.DataSource() AS DataSource
  
  JOIN dbo.UserList ul ON ul.UserId = USER_ID()
  
  ORDER BY TimeAxis DESC
END;]]>
	</row>
	<row ProcId="3003" StudyName="*" ProcName="Dash.UserCount" ProcDesc="Akkumulert antall brukere" ListId="DASH" GrantTo="public" MinVersion="6400" ChkSum="-788130051" LastUpdate="2018-03-07T21:46:51.660Z">
		<![CDATA[CREATE PROCEDURE Dash.UserCount AS 
BEGIN 
  
  SELECT
    
    Report.PartitionKey( NULL ) AS PartitionKey,
    Report.RowKeyReverse( TimeAxis ) AS RowKey,
    'WW' AS TimeResolution,
    Dataset.*,
    DataSource.*
  
  FROM
  
    ( SELECT
        Report.StartOfWeek( createdate ) AS TimeAxis,
        MAX(Rnk) AS n
        FROM
           ( SELECT
             su.uid,su.createdate,RANK() OVER( ORDER BY createdate ) AS Rnk
           FROM sys.sysusers su WHERE su.islogin = 1 AND su.uid > 5
         ) ul
       GROUP BY Report.StartOfWeek( createdate )
    ) Dataset
  
  CROSS JOIN Report.DataSource() AS DataSource
  
  ORDER BY TimeAxis DESC 

END;]]>
	</row>
	<row ProcId="3004" StudyName="NDV" ProcName="Dash.NdvType1HbA1cBelow7" ProcDesc="Prosentandel Type-1 med HbA1c under 53 (7%)" ListId="DASH" GrantTo="public" MinVersion="6400" ChkSum="-789486076" LastUpdate="2018-10-03T15:58:42.380Z">
		<![CDATA[CREATE PROCEDURE Dash.NdvType1HbA1cBelow7 AS
BEGIN
  SELECT
  
    Report.PartitionKey( ul.CenterId ) AS PartitionKey,
    Report.RowKeyReverse( Dataset.TimeAxis ) AS RowKey,
    'MM' AS TimeResolution,
    Dataset.*,
    DataSource.*
  
    FROM
  
  ( SELECT
      MonthList.StartTime AS TimeAxis, 
      AllType1.NumPatients,
      AboveCutoffAgg.NumHbA1c AS NumAboveCutoff, 
      AboveCutoffAgg.MinHbA1c,
      AboveCutoffAgg.AvgHbA1cAboveCutoff, 
      AboveCutoffAgg.MaxHbA1c,
      100.0 * AboveCutoffAgg.NumHbA1c / AllType1.NumPatients AS PctAboveCutoffTotal
    FROM
  
    (
      SELECT StartTime FROM Report.TimePeriods ml 
      WHERE PeriodType = 'MONTH' AND StartTime > DATEADD( YEAR, -5, GETDATE() ) AND StartTime < GETDATE()
    ) MonthList
  
  CROSS APPLY
  
    (
      SELECT COUNT(Type1AboveCutoff.NumResult) AS NumHbA1c,
        MIN(Type1AboveCutoff.NumResult) AS MinHbA1c,
        MAX(Type1AboveCutoff.NumResult) AS MaxHbA1c,
        AVG(Type1AboveCutoff.NumResult) AS AvgHbA1cAboveCutoff
      FROM
      (
        SELECT cas.PersonId,lab.NumResult
        FROM NDV.GetRecentPatientsTable( 1, MonthList.StartTime, 15 ) cas
        JOIN dbo.GetLastLabDataTable( 1058, MonthList.StartTime) lab ON lab.PersonId = cas.PersonId
        WHERE NumResult < 53
      ) Type1AboveCutoff
    ) AboveCutoffAgg
  
  CROSS APPLY 
  
    (
      SELECT COUNT(*) AS NumPatients FROM NDV.GetRecentPatientsTable( 1, MonthList.StartTime, 15 )
    ) AllType1
    WHERE AllType1.NumPatients > 0
  )  Dataset
  
  CROSS JOIN Report.DataSource() AS DataSource
  
  JOIN dbo.UserList ul ON ul.UserId = USER_ID()
  
  ORDER BY TimeAxis DESC;

END;]]>
	</row>
	<row ProcId="3005" StudyName="*" ProcName="Dash.DirtyClose" ProcDesc="Ufullstendig nedstenging" ListId="DASH" GrantTo="public" MinVersion="6400" ChkSum="-1989728275" LastUpdate="2018-03-07T21:53:01.447Z">
		<![CDATA[CREATE PROCEDURE Dash.DirtyClose AS
BEGIN

  DECLARE @StartOfThisWeek DateTime;
  SET @StartOfThisWeek = Report.StartOfWeek( GETDATE() );
  SELECT
  
    Report.PartitionKey( NULL ) AS PartitionKey,
    Report.RowKeyReverse( Dataset.TimeAxis ) AS RowKey,
    'WW' AS TimeResolution,
    Dataset.*,
      CONVERT(DECIMAL(5,1),DirtySessions * 100.0 / TotalSessions ) AS DirtyInPercent,
    DataSource.*
  
  FROM
  
    ( SELECT
        Report.StartOfWeek( MAX( ServTime) ) AS TimeAxis,
        COUNT(*) AS TotalSessions,
        SUM(CASE WHEN DirtyClose = 1 OR ClosedAt IS NULL THEN 1 ELSE 0 END ) AS DirtySessions
      FROM dbo.UserLog
      WHERE AppVer LIKE '[3-9].[0-9]%' AND ServTime <  @StartOfThisWeek
      GROUP BY ServYear, ServWeek
    ) Dataset
  
  CROSS JOIN Report.DataSource() AS DataSource
  ORDER BY TimeAxis DESC;
  
END;]]>
	</row>
	<row ProcId="3006" StudyName="NDV" ProcName="Dash.NdvType1HbA1cAverage" ProcDesc="Min/max og snittverdi for HbA1c" ListId="DASH" GrantTo="public" MinVersion="6400" ChkSum="854907391" LastUpdate="2018-10-03T15:58:22.300Z">
		<![CDATA[CREATE PROCEDURE Dash.NdvType1HbA1cAverage AS
BEGIN
  SELECT
  
    Report.PartitionKey( ul.CenterId ) AS PartitionKey,
    Report.RowKeyReverse( Dataset.TimeAxis ) AS RowKey,
    'MM' AS TimeResolution,
    Dataset.*,
    DataSource.*
  
    FROM
  
  ( SELECT
      MonthList.StartTime AS TimeAxis, 
      AllType1.NumPatients,
      Agg.MinHbA1c,
      Agg.AvgHbA1c, 
      Agg.MaxHbA1c
    FROM
  
    (
      SELECT StartTime FROM Report.TimePeriods ml 
      WHERE PeriodType = 'MONTH' AND StartTime > DATEADD( YEAR, -5, GETDATE() ) AND StartTime < GETDATE()
    ) MonthList
  
  CROSS APPLY
  
    (
      SELECT COUNT(Type1.NumResult) AS NumHbA1c,
        MIN(Type1.NumResult) AS MinHbA1c,
        MAX(Type1.NumResult) AS MaxHbA1c,
        AVG(Type1.NumResult) AS AvgHbA1c
      FROM
      (
        SELECT cas.PersonId,lab.NumResult
        FROM NDV.GetRecentPatientsTable( 1, MonthList.StartTime, 15 ) cas
        JOIN dbo.GetLastLabDataTable( 1058, MonthList.StartTime) lab ON lab.PersonId = cas.PersonId
      ) Type1
    ) Agg
  
  CROSS APPLY 
  
    (
      SELECT COUNT(*) AS NumPatients FROM NDV.GetRecentPatientsTable( 1, MonthList.StartTime, 15 )
    ) AllType1
    WHERE AllType1.NumPatients > 0
  )  Dataset
  
  CROSS JOIN Report.DataSource() AS DataSource
  
  JOIN dbo.UserList ul ON ul.UserId = USER_ID()
  
  ORDER BY TimeAxis DESC;

END;


]]>
	</row>
	<row ProcId="3007" StudyName="NDV" ProcName="Dash.DiaBiobankAccumulated" ProcDesc="Akkumulerte prøver til biobank per senter" ListId="DASH" GrantTo="public" MinVersion="18000" ChkSum="1508527542" LastUpdate="2019-05-14T08:55:45.883Z">
		<![CDATA[CREATE PROCEDURE Dash.DiaBiobankAccumulated AS
BEGIN

  SELECT 

    Report.PartitionKey( Dataset.CenterId) AS PartitionKey, 
    Report.RowKeyReverse( Dataset.TimeAxis ) AS RowKey,
    'WW' AS TimeResolution,
    Dataset.*,
    DataSource.*

  FROM 

(  
  SELECT WeekList.StartTime AS TimeAxis, AggByCenter.CenterId, AggByCenter.n
  FROM
  (
    SELECT StartTime FROM Report.TimePeriods ml
    WHERE PeriodType = 'WEEK' AND StartTime > DATEADD(MM,-36, GETDATE() ) AND StartTime < GETDATE()
  ) WeekList

  CROSS APPLY

  ( SELECT CenterId, n FROM 

    ( SELECT pas.CenterId, COUNT(*) AS n from

      ( SELECT PersonId, CenterId FROM

        (
          SELECT ce.PersonId, sg.CenterId, 
            ROW_NUMBER() OVER (PARTITION BY ce.PersonId,sg.CenterId ORDER BY ce.EventNum ) AS ReverseOrder
          FROM dbo.ClinDataPoint cdp
          JOIN dbo.ClinEvent ce on ce.EventId = cdp.EventId
          JOIN dbo.StudyGroup sg ON sg.StudyId = ce.StudyId AND sg.GroupId = ce.GroupId
          WHERE cdp.ItemId = 1502 and cdp.EnumVal = 1 AND ce.EventTime < WeekList.StartTime
        ) LastCenter 

        WHERE LastCenter.ReverseOrder = 1
      ) pas

     JOIN

     (
       SELECT PersonId, COUNT(*) AS n 
       FROM dbo.LabData ld
       JOIN dbo.LabCode lc ON lc.LabCodeId = ld.LabCodeId
       WHERE lc.LabClassId = 1084 AND ld.LabDate < WeekList.StartTime
       GROUP BY ld.PersonId 
     ) LabCount 

     ON labCount.PersonId = pas.PersonId

     GROUP BY pas.CenterId 
    ) PatientLabCount
   ) AggByCenter
  ) Dataset
  CROSS JOIN Report.DataSource() AS DataSource
  ORDER BY TimeAxis DESC;
END
]]>
	</row>
	<row ProcId="3008" StudyName="BARNEDIABETES" ProcName="Dash.BdrHbA1cBelow58" ProcDesc="Stable pasienter med HbA1c &lt; 58" ListId="DASH" GrantTo="public" MinVersion="19009" ChkSum="-328165184" LastUpdate="2019-06-14T15:42:28.793Z">
		<![CDATA[CREATE PROCEDURE Dash.BdrHbA1cBelow58 AS
BEGIN
  EXEC Dash.BdrHbA1cBelowInPeriod 58, 6, 6, 5;
END]]>
	</row>
	<row ProcId="3009" StudyName="NDV" ProcName="Dash.DiaBiobankAccumulatedConsent" ProcDesc="Antall akkumulerte samtykker til Biobank per senter" ListId="DASH" GrantTo="public" MinVersion="18000" ChkSum="-851570258" LastUpdate="2019-05-14T09:00:08.460Z">
		<![CDATA[CREATE PROCEDURE Dash.DiaBiobankAccumulatedConsent 
AS
BEGIN
	SELECT Report.PartitionKey(Dataset.CenterId) AS PartitionKey,
		   Report.RowKeyReverse(Dataset.TimeAxis) AS RowKey,
		   'WW' AS TimeResolution,
		   Dataset.*,
		   DataSource.*
	FROM (SELECT WeekList.StartTime AS TimeAxis, AggByCenter.CenterId, AggByCenter.n
		    FROM (
				SELECT StartTime
				  FROM Report.TimePeriods ml
			     WHERE PeriodType = 'WEEK'
			       AND StartTime > DATEADD(MM, -36, GETDATE())
			       AND StartTime < GETDATE()) WeekList
        CROSS APPLY 
        (
                SELECT pas.CenterId, COUNT(*) AS n
                        FROM (
                        SELECT PersonId, CenterId
                                FROM (
                                SELECT ce.PersonId, sg.CenterId, ROW_NUMBER() OVER (PARTITION BY ce.PersonId, sg.CenterId ORDER BY ce.EventNum) AS SortOrder
                                        FROM dbo.ClinDataPoint cdp 
                                                JOIN dbo.ClinEvent ce ON ce.EventId = cdp.EventId
                                                JOIN dbo.StudyGroup sg ON sg.StudyId = ce.StudyId AND sg.GroupId = ce.GroupId
                                        WHERE cdp.ItemId = 1502
                                        AND cdp.EnumVal = 1
                                        AND ce.EventTime < WeekList.StartTime) LastCenter
                                WHERE LastCenter.SortOrder = 1) pas
                GROUP BY pas.CenterId) AggByCenter) Dataset
    CROSS JOIN Report.DataSource() AS DataSource
    ORDER BY TimeAxis DESC;
END]]>
	</row>
	<row ProcId="3010" StudyName="BARNEDIABETES" ProcName="Dash.BdrHba1cBelow53" ProcDesc="Stabile pasienter med HbA1c &lt; 53" ListId="DASH" GrantTo="public" MinVersion="19009" ChkSum="158399072" LastUpdate="2019-06-14T15:42:36.917Z">
		<![CDATA[CREATE PROCEDURE Dash.BdrHbA1cBelow53 AS
BEGIN
  EXEC Dash.BdrHbA1cBelowInPeriod 53, 6, 6, 5;
END]]>
	</row>
	<row ProcId="3011" StudyName="BARNEDIABETES" ProcName="Dash.BdrHbA1cAbove75" ProcDesc="Stabile pasienter med HbAc &gt;= 75" ListId="DASH" GrantTo="public" MinVersion="19009" ChkSum="-1150650468" LastUpdate="2019-06-17T15:55:53.707Z">
		<![CDATA[CREATE PROCEDURE Dash.BdrHbA1cAbove75 AS
BEGIN
  EXEC Dash.BdrHbA1cAboveInPeriod 75, 6, 6, 5;
END]]>
	</row>
	<row ProcId="5001" StudyName="GBD.OLD" ProcName="GBD.UpdateMustScoreForAll" ProcDesc="Oppdatering av MUST for alle, trenger GBD.RuleMust på plass" ProcParams=":StudyId" ListId="UTIL" GrantTo="public" MaxVersion="20000" ChkSum="-964671126" LastUpdate="2019-11-08T08:25:42.033Z">
		<![CDATA[CREATE PROCEDURE GBD.UpdateMustScoreForAll( @StudyId INT ) AS
BEGIN
    SET NOCOUNT ON;
    DECLARE @WeightId INT = 3224;
    DECLARE @HeightId INT = 3225;

    -- Create temporary table for must-score and alert-data
    CREATE TABLE #temp (
        PersonId INT PRIMARY KEY NOT NULL,
        EventTime DATETIME,
        Weight DECIMAL(18, 4),
        Height DECIMAL(18, 4),
        BMI DECIMAL(18, 4),
        PercentChange DECIMAL(18, 4),
        NoOfWeights INT,
        MustScore INT,
        MsgText VARCHAR(512),
        MsgHeader VARCHAR(24),
        AlertFacet VARCHAR(16),
        AlertLevel INT
    );

    -- Populate #temp with candidates
    INSERT INTO #temp (PersonId)
        SELECT PersonId
        FROM dbo.ViewActiveCaseListStub sc
        WHERE sc.StudyId = @StudyId;

    -- Add weight
    MERGE
    INTO #temp a
    USING (SELECT PersonId, Quantity, EventTime
        FROM (SELECT ce.PersonId, cdp.Quantity, ce.EventTime, RANK() OVER (PARTITION BY ce.PersonId ORDER BY ce.EventTime DESC) AS RNK
                FROM dbo.ClinDataPoint cdp
                JOIN dbo.ClinEvent ce
                        ON ce.EventId = cdp.EventId AND ce.StudyId = @StudyId
                JOIN #temp t
                        ON t.PersonId = ce.PersonId
                WHERE cdp.ItemId = @WeightId
                AND cdp.Quantity > 1) a
        WHERE rnk = 1) b
    ON (b.PersonId = a.PersonId)
    WHEN MATCHED
        THEN UPDATE
                SET Weight = b.Quantity, EventTime = b.EventTime;

    -- Add height & BMI
    MERGE
    INTO #temp a
    USING (SELECT PersonId, Quantity
        FROM (SELECT ce.PersonId, cdp.Quantity, RANK() OVER (PARTITION BY ce.PersonId ORDER BY ce.EventTime DESC) AS RNK
                FROM dbo.ClinDataPoint cdp
                JOIN dbo.ClinEvent ce
                        ON ce.EventId = cdp.EventId AND ce.StudyId = @StudyId
                JOIN #temp t
                        ON t.PersonId = ce.PersonId
                WHERE cdp.ItemId = @HeightId
                AND cdp.Quantity > 1) a
        WHERE rnk = 1) b
    ON (b.PersonId = a.PersonId)
    WHEN MATCHED
        THEN UPDATE
                SET Height = b.Quantity, BMI = 10000 * Weight / b.Quantity / b.Quantity;

    -- Add PercentChange, and set MustScore when PercentChange < -5
    MERGE
    INTO #temp a
    USING (SELECT ce.PersonId, MIN(100 * (t.Weight / cdp.Quantity - 1)) AS Change
        FROM dbo.ClinEvent ce
        JOIN dbo.ClinDataPoint cdp
                ON cdp.EventId = ce.EventId AND cdp.ItemID = @WeightId AND cdp.Quantity
                > 0
        JOIN #temp t
                ON t.PersonId = ce.PersonId AND ce.EventTime < t.EventTime
        WHERE CONVERT(FLOAT, t.EventTime - ce.EventTime) < 180
        AND ce.StudyId = @StudyId
        GROUP BY ce.PersonId) b
    ON (a.PersonId = b.PersonId)
    WHEN MATCHED
        THEN UPDATE
                SET PercentChange = b.Change,
                MustScore =
                                        CASE
                                                WHEN b.Change < -10 THEN 2
                                                WHEN (b.Change >= -10 AND
                                                        b.Change < -5) THEN 1
                                        END,
                MsgText =
                                        CASE
                                                WHEN b.Change < -10 THEN 'Vekttap > 10% siste 180 dager (2p). '
                                                WHEN b.Change >= -10 AND
                                                        b.Change < -5 THEN 'Vektendring > 5% siste 180 dager (1p). '
                                        END;

    -- Find no of weights
    MERGE
    INTO #temp a
    USING (SELECT ce.PersonId, COUNT(*) AS NoOfWeights
        FROM dbo.ClinEvent ce
        JOIN dbo.ClinDataPoint cdp
                ON cdp.EventId = ce.EventId AND cdp.ItemID = @WeightId AND cdp.Quantity
                > 0
        JOIN #temp t
                ON t.PersonId = ce.PersonId AND ce.EventTime < t.EventTime
        WHERE CONVERT(FLOAT, t.EventTime - ce.EventTime) < 180
        AND ce.StudyId = @StudyId
        GROUP BY ce.PersonId
        HAVING COUNT(*) < 2) b
    ON (a.PersonId = b.PersonId)
    WHEN MATCHED
        THEN UPDATE
                SET NoOfWeights = b.NoOfWeights;

    UPDATE #temp
    SET MustScore = 0, MsgText = 'Mindre enn 2 vektregistreringer siste 180 dager (0p). '
    WHERE NoOfWeights IS NOT NULL
    AND MustScore IS NULL;

    UPDATE #temp
    SET MustScore = 0, MsgText = 'Vektendring < 5% siste 180 dager (0p). '
    WHERE Weight > 1
    AND MustScore IS NULL;

    -- Add MustScore for BMI
    UPDATE #temp
    SET MustScore =
                                CASE
                                        WHEN BMI < 18.5 THEN MustScore + 2
                                        WHEN BMI >= 18.5 AND
                                                BMI < 20 THEN MustScore + 1
                                END,
    MsgText =
                        CASE
                                WHEN BMI < 18.5 THEN MsgText + ' BMI er under 18.5 (2p). '
                                WHEN BMI >= 18.5 AND
                                        BMI < 20 THEN MsgText + ' BMI er under 20 (1p). '
                                WHEN BMI >= 20 THEN MsgText + 'BMI er over 20 (' + dbo.GetShortNumber(ROUND(BMI, 1)) + ', 0p). '
                        END
    WHERE BMI IS NOT NULL;

    MERGE
    INTO dbo.PersonAbstraction a
    USING (SELECT PersonId, MustScore, BMI, Weight, Height
        FROM #temp) b
    ON (a.PersonId = b.PersonId)
    WHEN MATCHED
        THEN UPDATE
                SET a.MustScore = b.MustScore, a.BMI = b.BMI, a.Weight = b.Weight, a.Height = b.Height
    WHEN NOT MATCHED
        THEN INSERT (PersonId, Height, Weight, MustScore, BMI)
                        VALUES (b.PersonId, b.Height, b.Weight, b.MustScore, b.BMI);


    UPDATE #temp
    SET MsgHeader =
                                CASE
                                        WHEN ISNULL(MustScore, -1) <= 0 THEN 'Ernæringstilstand'
                                        WHEN ISNULL(MustScore, -1) > 0 THEN 'OBS Ernæringstilstand'
                                        ELSE MsgHeader
                                END,
    AlertFacet =
                        CASE
                                WHEN ISNULL(MustScore, -1) < 0 THEN 'DataMissing'
                                WHEN ISNULL(MustScore, -1) = 0 THEN 'RiskLow'
                                WHEN ISNULL(MustScore, -1) = 1 THEN 'RiskMedium'
                                WHEN ISNULL(MustScore, -1) > 1 THEN 'RiskHigh'
                                ELSE AlertFacet
                        END,
    MsgText =
                        CASE
                                WHEN ISNULL(MustScore, -1) < 0 THEN 'Ernæringstilstand kan ikke overvåkes, fordi vekt og/eller høyde mangler. '
                                WHEN ISNULL(MustScore, -1) = 1 THEN MsgText + 'MUST Score ' + CONVERT(VARCHAR, MustScore) + ' eller mer. Observasjon. '
                                WHEN ISNULL(MustScore, -1) > 1 THEN MsgText + 'MUST Score ' + CONVERT(VARCHAR, MustScore) + ' eller mer. Start behandling. '
                                ELSE MsgText
                        END,
    AlertLevel =
                        CASE
                                WHEN ISNULL(MustScore, -1) > 3 THEN 3
                                ELSE ISNULL(MustScore, 1)
                        END;

    MERGE
    INTO dbo.Alert a
    USING (SELECT PersonId, AlertId, AlertLevel, AlertFacet, c.MsgHeader, c.MsgText
        FROM (SELECT t.PersonId, a.AlertId, t.AlertLevel, t.MsgHeader, t.AlertFacet, t.MsgText, RANK() OVER (PARTITION BY a.PersonId, a.StudyId ORDER BY a.AlertId DESC) AS rnk
                FROM dbo.Alert a
                JOIN #temp t
                        ON t.PersonId = a.PersonId
                WHERE ISNULL(a.StudyId, 0) = ISNULL(@StudyId, 0)
                AND ISNULL(a.UserId, 0) = 0
                AND a.AlertClass = 'MUST') c
        WHERE c.rnk = 1) b
    ON (a.PersonId = b.PersonId
        AND a.AlertId = b.AlertId)
    WHEN MATCHED
        THEN UPDATE
                SET a.AlertLevel = b.AlertLevel,
                a.AlertHeader = b.MsgHeader,
                a.AlertMessage = b.MsgText,
                a.AlertButtons = 'TYM',
                a.AlertFacet = b.AlertFacet,
                a.HideUntil =
                                                CASE
                                                        WHEN a.AlertFacet <> b.AlertFacet THEN NULL
                                                        ELSE a.HideUntil
                                                END
    WHEN NOT MATCHED
        THEN INSERT (StudyId, PersonId, AlertLevel, AlertClass, AlertFacet, AlertHeader, AlertMessage, AlertButtons)
                        VALUES (@StudyId, b.PersonId, b.AlertLevel, 'MUST', b.AlertFacet, b.MsgHeader, b.MsgText, 'TYM');
END]]>
	</row>
	<row ProcId="5002" StudyName="*" ProcName="ENDO.GetRoasForms" ProcDesc="Definisjon av skjema som skal kopieres fra EndoJournal til ROAS" ListId="UTIL" GrantTo="public" ChkSum="-346993545" LastUpdate="2019-01-17T13:03:03.950Z">
		<![CDATA[CREATE PROCEDURE ENDO.GetRoasForms AS
BEGIN
  SELECT FormId FROM dbo.MetaForm 
  WHERE FormName IN ('Addison','Autoimmunitet','APS1','Hypopara','AddisonHRQoL') OR ( FormId IN ( 964 ) );
END]]>
	</row>
	<row ProcId="9000" StudyName="(BARNEDIABETESI" ProcName="Report.ColLabQuarters" ProcDesc="Labdata kvartalsvis" ProcParams=":LabClassId" ListId="COLS" GrantTo="public" MinVersion="19000" ChkSum="1342584648" LastUpdate="2019-12-06T19:15:20.713Z">
		<![CDATA[CREATE PROCEDURE Report.ColLabQuarters( @LabClassId INT ) AS 
BEGIN
  SELECT agg.PersonId, CONCAT(agg.NLK, '.', agg.y,'.Q',agg.q ) AS VarName, NumResult, LabDate, ResultId
  FROM 
  (
    SELECT ld.PersonId, cl.NLK, DATEPART( YEAR, ld.LabDate ) AS y, DATEPART( QUARTER, ld.LabDate ) AS q, ld.NumResult, ld.LabDate, ld.ResultId, 
      ROW_NUMBER () OVER ( PARTITION BY PersonId, DATEPART( YEAR, LabDate ), DATEPART( QUARTER, LabDate ) ORDER BY LabDate DESC ) AS ReverseOrder
    FROM dbo.LabData ld
    JOIN dbo.LabCode lc ON lc.LabCodeId = ld.LabCodeId
    JOIN dbo.LabClass cl ON cl.LabClassId = lc.LabClassId
    WHERE lc.LabClassId = @LabClassId AND ld.LabDate > GETDATE() - 365
  ) agg 
  WHERE ReverseOrder = 1
  ORDER BY LabDate;
END]]>
	</row>
	<row ProcId="9001" StudyName="(GBD)" ProcName="Report.ColGbdTvangsvedtak" ProcDesc="Siste tvangsvedtak" ListId="COLS" GrantTo="public" MinVersion="19000" ChkSum="-2043681880" LastUpdate="2019-12-06T18:09:29.957Z">
		<![CDATA[CREATE PROCEDURE Report.ColGbdTvangsvedtak AS
BEGIN
  SELECT 
    PersonId, 'TVANG_REST' AS VarName, 
    MAX(DATEDIFF(DD,GETDATE(),EventTime)) AS DpValue, 
    MAX(EventTime) AS MaxEventTime, 
    MAX(ClinFormId) AS MaxClinFormId
  FROM GBD.Tvangsvedtak
  GROUP BY PersonId;
END
]]>
	</row>
	<row ProcId="10001" StudyName="GBD.OLD" ProcName="GBD.RuleBerger" ProcDesc="Registere Bergers skala med 180 dagers intervall" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" MaxVersion="18207" ChkSum="-708061249" LastUpdate="2019-12-02T18:52:47.377Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleBerger( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicForm @StudyId,@PersonId,'BERGER',180,2
END;]]>
	</row>
	<row ProcId="10002" StudyName="*" ProcName="dbo.RuleDrugToProblem" ProcDesc="Manglende diagnose basert på medikament som bare har én indikasj" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="782745445" LastUpdate="2019-01-03T09:03:10.997Z">
		<![CDATA[CREATE PROCEDURE dbo.RuleDrugToProblem( @StudyId INT, @PersonId INT ) AS
  DECLARE @DrugName VARCHAR(64);
  DECLARE @ATC VARCHAR(7);
  DECLARE @ListId INT;
  DECLARE @ListName VARCHAR(32);
  DECLARE @DrugProbId INT;
  DECLARE @ItemCode VARCHAR(8);
  DECLARE @ProbDesc VARCHAR(32);
  DECLARE @ProbStatus INT;
  DECLARE @AlertClass varchar(12);
  DECLARE @AlertHeader varchar(64);
  DECLARE @AlertMsg varchar(512);
  DECLARE @AlertLevel INT;
  DECLARE @AlertFacet varchar(16);
BEGIN
  /* Disable all old alerts for this rule */
  UPDATE dbo.Alert SET AlertLevel=0 WHERE StudyId=@StudyId AND PersonId=@PersonId AND AlertClass LIKE 'DrugProb#%';
  /* Create list of problem matches for the patient's' drugs */
  DECLARE alert_list CURSOR FOR
    SELECT mdp.DrugProbId,mdp.ATC,dt.DrugName,mnl.ListId,mnl.ListName,mdp.ItemCode,mdp.ProbDesc,
      dbo.GetProblemStatus(dt.PersonId,mnl.ListId,mdp.ItemCode) AS ProbStatus
    FROM dbo.DrugTreatment dt
      JOIN dbo.KBDrugToProblem mdp ON CHARINDEX(mdp.ATC,dt.ATC) = 1
      JOIN dbo.MetaNomList mnl ON mnl.ListName=mdp.ListName AND ListActive=1
    WHERE ( dt.PersonId=@PersonId ) AND (dt.StopAt IS NULL);
  /* Walk through the list, adding a rule for each one with status = 0 */
  OPEN alert_list;
  FETCH NEXT FROM alert_list INTO @DrugProbId,@ATC,@DrugName,@ListId,@ListName,@ItemCode,@ProbDesc,@ProbStatus;
  WHILE @@FETCH_STATUS = 0 BEGIN
    /* Prepare alert data */
    SET @AlertClass = 'DrugProb#' + CONVERT(VARCHAR,@DrugProbId);
    SET @AlertHeader = @ProbDesc;
    IF @ProbStatus=0 BEGIN
       SET @AlertHeader = @AlertHeader + '?';
       SET @AlertLevel = 3
       SET @AlertFacet = 'DataMissing';
    END
    ELSE BEGIN
      SET @AlertLevel = 0;
      SET @AlertFacet = 'DataFound';
    END
    SELECT @ListId = dbo.GetListId( @ListName );
    SET @AlertMsg = dbo.GetTextItem( 'DrugToProblem',@AlertFacet );
    /* Do replacements */
    IF CHARINDEX('@DrugName',@AlertMsg) > 0
      SET @AlertMsg = REPLACE( @AlertMsg,'@DrugName',@DrugName );
    IF CHARINDEX('@ProbDesc',@AlertMsg) > 0
      SET @AlertMsg = REPLACE( @AlertMsg,'@ProbDesc',@ProbDesc );
    IF CHARINDEX('@ListId',@AlertMsg) > 0
      SET @AlertMsg = REPLACE( @AlertMsg,'@ListId',@ListId );
    IF CHARINDEX('@ItemCode',@AlertMsg) > 0
      SET @AlertMsg = REPLACE( @AlertMsg,'@ItemCode',@ItemCode );
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,@AlertClass,@AlertFacet,@AlertHeader,@AlertMsg,'MY';
    FETCH NEXT FROM alert_list INTO @DrugProbId,@ATC,@DrugName,@ListId,@ListName,@ItemCode,@ProbDesc,@ProbStatus;
  END;
  CLOSE alert_list;
  DEALLOCATE alert_list;
END;]]>
	</row>
	<row ProcId="10003" StudyName="*" ProcName="dbo.RuleDrugInteractions" ProcDesc="Legemiddelinteraksjoner" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-320670011" LastUpdate="2019-01-03T09:03:11.893Z">
		<![CDATA[CREATE PROCEDURE dbo.RuleDrugInteractions ( @StudyId INT, @PersonId INT ) AS
  /* Variables for interaction result */
  DECLARE @LevelId tinyint;
  DECLARE @ATC1 varchar(7);
  DECLARE @ATC2 varchar(7);
  DECLARE @Drug1 varchar(64);
  DECLARE @Drug2 varchar(64);
  DECLARE @InfoText varchar(512);
  DECLARE @AlertLevel tinyint;
  /* Variables for message */
  DECLARE @AlertAction varchar(4);
  DECLARE @AlertClass varchar(12);
  DECLARE @AlertInfo varchar(32);
  DECLARE @AlertFacet varchar(16);
  DECLARE @AlertHeader varchar(64);
  DECLARE @IntId integer;
BEGIN

  /* Downgrade old alerts */

  UPDATE dbo.Alert SET AlertLevel=0 WHERE StudyId=@StudyId AND PersonId=@PersonId AND AlertClass LIKE 'DRUID#%';
  CREATE TABLE #ATCList (AtcFragment varchar(7) COLLATE Latin1_General_BIN2 NOT NULL);

  /* Build ATC list */

  INSERT INTO #ATCList (ATCFragment) SELECT ATC FROM DrugTreatment WHERE PersonId=@PersonId AND ( ( StopAt > GetDate() OR StopAt IS NULL ) AND PauseStatus=0 )
  INSERT INTO #ATCList (ATCFragment) SELECT DISTINCT SUBSTRING(ATCFragment,1,5) FROM #ATCList;
  INSERT INTO #ATCList (ATCFragment) SELECT DISTINCT SUBSTRING(ATCFragment,1,4) FROM #ATCList;
  INSERT INTO #ATCList (ATCFragment) SELECT DISTINCT SUBSTRING(ATCFragment,1,3) FROM #ATCList
  INSERT INTO #ATCList (ATCFragment) SELECT GrpCode FROM KBMetaMember WHERE GrpMember COLLATE Latin1_General_BIN2 IN ( SELECT ATCFragment FROM #ATCList);
  
  /* Find matching interactions */

  DECLARE interaction_cursor CURSOR FOR
  SELECT i.IntId,i.LevelId,i.ATC1,dt1.AtcName as Drug1,i.ATC2,dt2.AtcName as Drug2,i.InfoText
  FROM dbo.KBInteraction i
    JOIN dbo.KBAtcIndex dt1 ON i.ATC1=dt1.AtcCode
    JOIN dbo.KBAtcIndex dt2 ON i.ATC2=dt2.AtcCode
  WHERE ATC1 COLLATE Latin1_General_BIN2 IN (SELECT DISTINCT ATCFragment FROM #ATCList ) 
    AND ATC2 COLLATE Latin1_General_BIN2 IN (SELECT DISTINCT ATCFragment FROM #ATCList )
  ORDER BY i.LevelId DESC; 
  
  /* Add alerts for interactions */

  OPEN interaction_cursor;
  FETCH NEXT FROM interaction_cursor INTO @IntId,@LevelId,@ATC1,@Drug1,@ATC2,@Drug2,@InfoText;
  WHILE @@FETCH_STATUS = 0 BEGIN
    SET @AlertClass='DRUID#'+CONVERT(VARCHAR,@IntId)
    SET @Alertheader=@Drug1 + ' - ' + @Drug2;
    /* Map levels and facets */
    SELECT @AlertLevel = CASE @LevelId
      WHEN 1 THEN 1
      WHEN 2 THEN 2
      WHEN 3 THEN 2
      WHEN 4 THEN 4
    END;
    SELECT @AlertInfo = CASE @LevelId
      WHEN 1 THEN 'Mulig interaksjon: '
      WHEN 2 THEN 'Ta forholdsregler: '
      WHEN 3 THEN 'Ta med 2-3 timers intervall: '
      WHEN 4 THEN 'Må ikke kombineres: '
    END
    SELECT @AlertFacet = CASE @LevelId
      WHEN 1 THEN 'RiskLow'
      WHEN 2 THEN 'RiskMedium'
      WHEN 3 THEN 'RiskMedium'
      WHEN 4 THEN 'RiskHigh'
    END
    SELECT @AlertAction = CASE @LevelId
      WHEN 1 THEN 'TFYM'
      WHEN 2 THEN 'TYM'
      WHEN 3 THEN 'TYM'
      WHEN 4 THEN 'TM'
    END
    SET @InfoText = @AlertInfo + @InfoText;
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,@AlertClass,@AlertFacet,@AlertHeader,@InfoText,@AlertAction;
    FETCH NEXT FROM interaction_cursor INTO @IntId,@LevelId,@ATC1,@Drug1,@ATC2,@Drug2,@InfoText;
  END
  CLOSE interaction_cursor
  DEALLOCATE interaction_cursor;
END


]]>
	</row>
	<row ProcId="10004" StudyName="*" ProcName="dbo.RuleGFR" ProcDesc="Lav nyrefunksjon. GRF 60,45 og 30 som grenser." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-1011919235" LastUpdate="2019-01-03T09:03:12.577Z">
		<![CDATA[CREATE PROCEDURE dbo.RuleGFR( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @GFR DECIMAL(5,1);
  DECLARE @AlertLevel INT;
  DECLARE @Facet varchar(16);
  DECLARE @MsgStr varchar(512);
  DECLARE @HeadStr varchar(64);
  SET @GFR = dbo.GetMDRD( @PersonId, getdate() );
  IF ( @GFR IS NULL ) OR ( @GFR <= 0 ) BEGIN
    SET @AlertLevel = 2;
    SET @Facet = 'DataMissing'
  END
  ELSE BEGIN
    IF @GFR < 30 BEGIN
      SET @AlertLevel=3;
      SET @Facet='RiskHigh';
    END
    ELSE IF @GFR < 45 BEGIN
      SET @AlertLevel=2;
      SET @Facet='RiskMedium';
    END
    ELSE IF @GFR < 60 BEGIN
      SET @AlertLevel=1;
      SET @Facet='RiskLow';
    END
    ELSE BEGIN
      SET @AlertLevel=0;
      SET @Facet = 'DataFound';
    END;
  END;
  SET @MsgStr=dbo.GetTextItem('GFR',@Facet);
  SET @HeadStr=dbo.GetTextItem('GFR',@Facet+'.Header');
  IF CHARINDEX( '@GFR',@MsgStr ) > 1 SET @MsgStr=REPLACE(@MsgStr,'@GFR',CONVERT(VARCHAR,@GFR));
  IF CHARINDEX( '@Formula',@MsgStr) > 1 SET @MsgStr=REPLACE(@MsgStr,'@Formula','MDRD');
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'GFR',@Facet,@HeadStr,@MsgStr
END;]]>
	</row>
	<row ProcId="10005" StudyName="*" ProcName="GBD.RuleHulten" ProcDesc="Registrere Hulten med maks 90 dagers intervall" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-1109930964" LastUpdate="2019-01-03T09:03:13.033Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleHulten( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicForm @StudyId,@PersonId,'HULTEN',90,2
END;]]>
	</row>
	<row ProcId="10006" StudyName="*" ProcName="GBD.RuleWarfarinAdjust" ProcDesc="På tide med Marevandosering basert på variabel WARFARIN_NEXT, so" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-253360512" LastUpdate="2019-01-03T09:03:13.440Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleWarfarinAdjust( @StudyId INT, @PersonId INT )
AS
BEGIN
  DECLARE @AlertFacet varchar(16);
  DECLARE @AlertLevel INT;
  DECLARE @NewDosingDate DateTime;
  
  /* Check for Warfarin treatment */
  
  IF NOT EXISTS ( SELECT TreatId FROM dbo.OngoingTreatment WHERE PersonId=@PersonId AND ATC='B01AA03' ) BEGIN
    SET @AlertFacet='Exclude';
    SET @AlertLevel=0;
  END
  ELSE BEGIN      
  
    /* Find next Warfarin dosing date from form data */
    
    SELECT @NewDosingDate = dbo.GetLastDTVal( @PersonId,'WARFARIN_NEXT' );
    IF @NewDosingDate IS NULL BEGIN
      SET @AlertFacet = 'Exclude';
      SET @AlertLevel = 0;
    END
    ELSE IF @NewDosingDate<GetDate() BEGIN
      SET @AlertFacet = 'DataOld';
      SET @AlertLevel = 3;
    END
    ELSE BEGIN
      SET @AlertFacet = 'DataFound';
      SET @AlertLevel = 0;
    END
  END
  EXEC dbo.AddAlertForDSSRule @StudyId,@PersonId,@AlertLevel,'WARFADJ',@AlertFacet
END;]]>
	</row>
	<row ProcId="10007" StudyName="*" ProcName="GBD.RuleWeight30Days" ProcDesc="Veiing med maks 30 dagers intervall" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="75897193" LastUpdate="2019-01-03T09:03:13.810Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleWeight30Days( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicData @StudyId,@PersonId,'WEIGHT',30,2
END]]>
	</row>
	<row ProcId="10008" StudyName="*" ProcName="GBD.RuleInfectionForm" ProcDesc="Infeksjonsregistering hvis systemisk antibiotika gitt siste 30 d" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-1553155358" LastUpdate="2019-01-03T09:03:14.193Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleInfectionForm( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @LastJ01Date DateTime;
  DECLARE @LastFormDate DateTime;
  DECLARE @MsgText VARCHAR(512);
  DECLARE @FormDateText VARCHAR(24);
  DECLARE @DrugName VARCHAR(64);
  -- Find ongoing or recently started antibiotic/antiparasitic treatment
  SELECT TOP 1 @LastJ01Date=StartAt,@DrugName=DrugName FROM dbo.DrugTreatment
    WHERE ( ( ATC LIKE 'J01%' ) OR ( ATC LIKE 'P01A%' ) ) AND PersonId=@PersonId
      AND ((StartAt > getdate()-30) OR ( StopAt IS NULL ) OR ( StopAt > getdate()) ) ORDER BY StartAt DESC;
  IF @LastJ01Date IS NULL
    EXEC dbo.AddAlertForDSSRule @StudyId,@PersonId,0,'INFECTION','Exclude'
  ELSE BEGIN 
    SET @LastFormDate = dbo.GetLastSignedForm( @StudyId, @PersonId,'GBD_INFECTION' );
    IF ( @LastFormDate IS NULL ) OR ( @LastJ01Date > @LastFormDate + 1 ) BEGIN
      SET @MsgText = dbo.GetTextItem( 'INFECTION','DataMissing' );
      IF @LastFormDate IS NULL
        SET @FormDateText = '(aldri)'
      ELSE
        SET @FormDateText = dbo.LongTime( @LastFormDate );
      SET @MsgText = REPLACE( @MsgText, '@DrugDate', '<b>' + dbo.LongTime( @LastJ01Date ) + '</b>' );
      SET @MsgText = REPLACE( @MsgText, '@FormDate', '<b>' + @FormDateText +'</b>' );
      SET @MsgText = REPLACE( @MsgText, '@DrugName', '<b>' + @DrugName +'</b>' );
      EXEC dbo.AddAlertForPerson @StudyId,@PersonId,2,'INFECTION','DataMissing','Infeksjonsregistrering',@MsgText;
    END
    ELSE
      EXEC dbo.AddAlertForDSSRule @StudyId,@PersonId,0,'INFECTION','DataFound'
  END;
END;]]>
	</row>
	<row ProcId="10009" StudyName="*" ProcName="GBD.RuleLabData" ProcDesc="Eksterne labdata med maka 180 dagers intervall" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="508375617" LastUpdate="2019-01-03T09:03:14.570Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleLabData( @StudyId INT, @PersonId INT ) AS
BEGIN
  IF EXISTS( SELECT ResultId FROM dbo.LabData WHERE PersonId=@PersonId
    AND LabDate > getdate()-180 )
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,1,'LAB','DataFound','Labdata funnet',
      'Eksterne labdata er funnet siste 6 mnd'
  ELSE
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,2,'LAB','DataMissing','Labdata mangler',
      'Ingen eksterne labdata fra siste 6 mnd.  Labprøver bør tas regelmessig, bl.a. for å overvåke nyrefunksjon.';
END]]>
	</row>
	<row ProcId="10010" StudyName="*" ProcName="GBD.RuleMUST" ProcDesc="Automatisk beregning av MUST score, med tilhørende varsling ved " ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" MaxVersion="20000" CompatibilityLevel="100" ChkSum="343832107" LastUpdate="2019-11-08T08:25:46.580Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleMUST( @StudyId INT, @PersonId INT ) AS
BEGIN
  SET NOCOUNT ON;
  DECLARE @EventTime DateTime;
  DECLARE @WeightNow FLOAT;
  DECLARE @Height FLOAT;
  DECLARE @MustScore INT;
  DECLARE @MsgHeader VARCHAR(24);
  DECLARE @BMI FLOAT;
  DECLARE @AlertLevel INT;
  DECLARE @MsgText VARCHAR(512);
  DECLARE @AlertFacet VARCHAR(16);
  SET @MustScore = NULL;
  
  -- Get last height
  SELECT TOP 1 @Height = cdp.Quantity 
  FROM dbo.ClinDataPoint cdp
  JOIN dbo.ClinEvent ce ON ce.EventId = cdp.EventId
  WHERE ce.PersonId = @PersonId AND cdp.ItemId = 3225 AND cdp.Quantity > 1 
  ORDER BY ce.EventTime DESC;
  
  -- Get last weight with timestamp
  SELECT TOP 1 @WeightNow = cdp.Quantity, @EventTime = ce.EventTime  
  FROM dbo.ClinDataPoint cdp
  JOIN dbo.ClinEvent ce ON ce.EventId = cdp.EventId
  WHERE ce.PersonId = @PersonId AND cdp.ItemId = 3224 AND cdp.Quantity > 1 
  ORDER BY ce.EventTime DESC;
  
  -- Calculate weight change and days before last weight/timestamp
  IF ( @Height > 1 ) AND ( @WeightNow > 1 )
  BEGIN
    SET @BMI = 10000 * @WeightNow / @Height / @Height;
    SELECT ce.EventTime, @WeightNow AS WeightNow, cdp.Quantity AS WeightThen, @Height AS Height,
        100*(@WeightNow/cdp.Quantity-1) AS PercentChange,
        CONVERT(FLOAT,@EventTime - ce.EventTime) AS DaysBetween,
        cdp.Quantity / @Height / @Height * 10000 AS BMIThen
      INTO #temp
      FROM dbo.ClinEvent ce 
      JOIN dbo.ClinDataPoint cdp ON cdp.EventId=ce.EventId
      WHERE ce.PersonId = @PersonId AND cdp.ItemId = 3224 AND cdp.Quantity > 1;
    -- Remove all old data
    DELETE FROM #temp WHERE DaysBetween > 180;
    -- Return all data indication lost weight last 180 days
    IF EXISTS( SELECT EventTime FROM #temp WHERE PercentChange < -10 )
    BEGIN
      SET @MustScore = 2;
      SET @MsgText = 'Vekttap > 10% siste 180 dager (2p). ';
    END
    ELSE IF EXISTS( SELECT EventTime FROM #temp WHERE PercentChange < -5 ) BEGIN
      SET @MsgText = 'Vektendring > 5% siste 180 dager (1p). ';
      SET @MustScore = 1;
    END
    ELSE IF ( SELECT COUNT(*) FROM #temp ) < 2 BEGIN
      SET @MsgText = 'Mindre enn 2 vektregistreringer siste 180 dager (0p). ';
      SET @MustScore = 0;
    END
    ELSE
    BEGIN
      SET @MustScore = 0;
      SET @MsgText = 'Vektendring < 5% siste 180 dager (0p). ';
    END;
    IF @BMI < 18.5 BEGIN
      SET @MsgText = @MsgText + ' BMI er under 18.5 (2p). ';
      SET @MustScore = @MustScore + 2;
    END
    ELSE IF @BMI < 20 BEGIN
      SET @MsgText = @MsgText + ' BMI er under 20 (1p). ';
      SET @MustScore = @MustScore + 1;
    END
    ELSE
    BEGIN
      SET @MsgText = @MsgText + 'BMI er over 20 (' + dbo.GetShortNumber( ROUND(@BMI,1) ) + ', 0p). ';
    END
  END;                                           
  
  -- Store information in PersonAbstraction table
  UPDATE dbo.PersonAbstraction 
  SET MustScore = @MustScore, BMI = @BMI, Weight = @WeightNow, Height = @Height 
  WHERE PersonId = @PersonId;
  IF @@ROWCOUNT = 0
    INSERT INTO dbo.PersonAbstraction( PersonId, Height, Weight, MustScore, BMI ) 
    VALUES( @PersonId, @Height, @WeightNow, @MustScore, @BMI );
    
  -- Create alert based on MustScore   
  IF @MustScore IS NULL
  BEGIN
    SET @MsgHeader = 'Ernæringstilstand?';
    SET @AlertFacet = 'DataMissing';
    SET @MsgText = 'Ernæringstilstand kan ikke overvåkes, fordi vekt og/eller høyde mangler. ';
    SET @AlertLevel = 1;
  END
  ELSE
  BEGIN
    IF @MustScore > 0
    BEGIN
      SET @MsgHeader = 'OBS Ernæringstilstand';
      SET @MsgText = @MsgText + 'MUST Score ' + CONVERT(VARCHAR,@MustScore) + ' eller mer. ';
    END
    ELSE
      SET @MsgHeader = 'Ernæringstilstand';
    IF @MustScore = 0 SET @AlertFacet = 'RiskLow'
    ELSE IF @MustScore=1 BEGIN
     SET @AlertFacet = 'RiskMedium';
     SET @MsgText = @MsgText + 'Observasjon. ';
    END
    ELSE
    BEGIN
      SET @AlertFacet = 'RiskHigh';
      SET @MsgText = @MsgText + 'Start behandling. ';
    END;
    SET @AlertLevel = @MustScore;
    IF @AlertLevel > 3 SET @AlertLevel = 3;
  END;
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'MUST',@AlertFacet,@MsgHeader, @MsgText,'TYM'
END]]>
	</row>
	<row ProcId="10011" StudyName="*" ProcName="dbo.RuleMetforminGFR" ProcDesc="Advarsel om metforminbruk med samtidig lav GFR, grenseverdier 60" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-1901190138" LastUpdate="2019-01-03T09:03:15.297Z">
		<![CDATA[CREATE PROCEDURE dbo.RuleMetforminGFR( @StudyId INT, @PersonId INT )
AS
BEGIN
  DECLARE @CalcAt DateTime;
  DECLARE @HeaderText VARCHAR(64);
  DECLARE @MsgText VARCHAR(512);
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT;
  DECLARE @GFR INT;
  SET @CalcAt = getdate();
  IF dbo.GetDrugUse( @PersonId, 'A10BA02', @CalcAt ) = 1
  BEGIN
    SET @GFR = dbo.GetMDRD( @PersonId, @CalcAt );
    IF @GFR IS NULL
    BEGIN
      SET @HeaderText = 'Metformin + ukjent GFR'
      SET @MsgText = 'Alle som bruker metformin bør måle GFR regelmessig.';
      SET @AlertLevel= 3;
      SET @AlertFacet = 'DataMissing';
    END
    ELSE IF @GFR < 60
    BEGIN
      SET @HeaderText = 'Metformin + lav GFR';
      SET @MsgText = ( 'OBS eGFR = ' + CONVERT(VARCHAR,@GFR) + ' mL/min/1.73m2. Vurder å seponere metformin.' );
      IF @GFR < 60
      BEGIN
        SET @AlertFacet = 'RiskHigh';
        IF @GFR < 30 BEGIN
          SET @AlertLevel = 4;
          IF @GFR < 15
            SET @MsgText = @MsgText + ' Nyresykdom grad 4, betydelig nedsatt GFR. '
          ELSE
            SET @MsgText = @MsgText + ' Nyresykdom grad 5, nyresvikt. ';
        END
        ELSE BEGIN
          SET @MsgText = @MsgText + ' Nyresykdom grad 3, moderat redusert GFR. ';
          IF @GFR < 50
            SET @AlertLevel = 3
          ELSE BEGIN
            -- Mellom 50 og 60
            SET @AlertLevel = 2;
            SET @AlertFacet = 'RiskMedium'
          END
        END;
      END;
    END
    ELSE
    BEGIN
     SET @HeaderText = 'Metformin + normal GFR';
     SET @MsgText = ( 'eGFR = ' + CONVERT(VARCHAR,@GFR) + ' mL/min/1.73m2' );
     SET @AlertFacet = 'RiskLow';
     SET @AlertLevel = 0;
    END
  END
  ELSE
  BEGIN
    SET @HeaderText = 'Ikke metformin';
    SET @MsgText = 'Bruker ikke metformin, vurdering av GFR utelatt.';
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0;
  END;
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'METFORMGFR',@AlertFacet,@HeaderText,@MsgText;
END]]>
	</row>
	<row ProcId="10012" StudyName="*" ProcName="GBD.RuleBP30Days" ProcDesc="Blodtrykksmåling med maks 30 dagers intervall." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="737675974" LastUpdate="2019-01-03T09:03:15.633Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleBP30Days( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicData @StudyId, @PersonId, 'SBP_UNSPEC',30, 2
END]]>
	</row>
	<row ProcId="10013" StudyName="*" ProcName="GBD.RuleAtrialFibrillation" ProcDesc="Behandling av atrieflimmer med B01AA eller B01AC." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-831281577" LastUpdate="2019-01-03T09:03:15.983Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleAtrialFibrillation( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @HasAF INT;
  DECLARE @HeaderText VARCHAR(64);
  DECLARE @MsgText VARCHAR(512);
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT;
  SET @HasAF = dbo.GetProblemStatus( @PersonId,4, 'I48%' );
  IF @HasAF = 1
  BEGIN
    IF EXISTS( SELECT TreatId FROM dbo.OngoingTreatment 
      WHERE PersonId=@PersonId AND ATC COLLATE Latin1_General_CI_AS LIKE 'B01A[ABCEF]%' COLLATE Latin1_General_CI_AS )
    BEGIN
      SET @AlertLevel = 0;
      SET @AlertFacet = 'DrugFound';
    END  
    ELSE
    BEGIN
      SET @AlertLevel = 2;
      SET @AlertFacet = 'DrugGive';
    END
  END
  ELSE BEGIN
    SET @AlertLevel = 0;
    SET @AlertFacet = 'Exclude'
  END;
  SET @MsgText = dbo.GetTextItem( 'AFTREATED', @AlertFacet )  
  SET @HeaderText = dbo.GetTextItem( 'AFTREATED', @AlertFacet + '.Header' )  
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'AFTREATED',@AlertFacet,@HeaderText,@MsgText
END]]>
	</row>
	<row ProcId="10014" StudyName="*" ProcName="GBD.RuleReminder" ProcDesc="Påminnelse basert på eget påminnelsesskjema." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-2052883428" LastUpdate="2019-01-12T06:46:37.603Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleReminder( @StudyId INT, @PersonId INT )
AS
BEGIN
  -- Reset all alerts of this class to level 0, because some forms may have been deleted
  UPDATE dbo.Alert SET AlertLevel = 0 WHERE StudyId = @StudyId AND PersonId = @PersonId AND AlertClass LIKE 'CF#%';
  
  -- Find events first to get a small temp table for next join
  SELECT ce.EventId, cf.ClinFormId, ce.EventTime 
  INTO #tempEvents 
  FROM dbo.ClinEvent ce
  JOIN dbo.ClinForm cf ON cf.EventId = ce.EventId AND cf.DeletedAt IS NULL
  JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId AND mf.FormName = 'ALERT'
  WHERE ce.StudyId = @StudyId AND ce.PersonId = @PersonId; 
  
  -- Get current alerts 
  SELECT @PersonId as PersonId,@StudyId AS StudyId,
    'CF#' + CONVERT(VARCHAR,te.ClinFormId) AS AlertClass,
    'Include' AS AlertFacet,                                                          
    c.EnumVal AS AlertLevel,
    h.TextVal AS AlertHeader, 
    q.TextVal + ' ( <a href="ShowClinFormId='+CONVERT(VARCHAR,te.ClinFormId) + '">Påminnelse</a> fra ' + CONVERT(VARCHAR,te.EventTime,104 ) + ' )' AS AlertMessage,
    ISNULL(NULLIF(b.TextVal,''),'TWMF') AS AlertButtons, 
    d.DTVal AS HideUntil           
  INTO #tempAlerts
  FROM #tempEvents te 
    JOIN dbo.ClinDataPoint h on h.EventId = te.EventId AND h.ItemId = 5601 
    JOIN dbo.ClinDataPoint c on c.EventId = te.EventId AND c.ItemId = 5603 
    JOIN dbo.ClinDataPoint q on q.EventId = te.EventId AND q.ItemId = 5602
    JOIN dbo.ClinDataPoint d ON d.EventId = te.EventId AND d.ItemId = 5604
    LEFT OUTER JOIN dbo.ClinDataPoint b ON b.EventId = te.EventId AND b.ItemId = 5605
  WHERE c.EnumVal > 0;
    
  UPDATE dbo.Alert SET 
    AlertLevel = t.AlertLevel, AlertHeader = t.AlertHeader,
    AlertMessage = t.AlertMessage, AlertButtons = UPPER(t.AlertButtons)
  FROM #tempAlerts t 
  WHERE ( t.PersonId = Alert.PersonId AND t.StudyId = Alert.StudyId AND t.AlertClass = Alert.AlertClass )
  AND  (Alert.AlertLevel <> t.AlertLevel OR Alert.AlertMessage <> t.AlertMessage OR Alert.AlertHeader <> t.AlertHeader OR Alert.AlertButtons <> t.AlertButtons);
  
  -- Bump forward HideUntil if needed (data on form has changed)  
  UPDATE dbo.Alert 
  SET HideUntil = t.HideUntil
  FROM #tempAlerts t
  WHERE (t.PersonId = Alert.PersonId AND t.StudyId = Alert.StudyId AND t.AlertClass = Alert.AlertClass )
  AND t.HideUntil > Alert.HideUntil;
  
  -- Remove all existing alerts from temp, based on ClinFormId
  DELETE FROM #tempAlerts WHERE AlertClass IN ( SELECT AlertClass FROM dbo.Alert WHERE StudyId=@StudyId AND PersonId=@PersonId );
  
  -- Add the rest, which will be from new ClinForms
  INSERT INTO dbo.Alert ( PersonId,StudyId,AlertClass,AlertFacet,AlertLevel,AlertHeader,AlertMessage,AlertButtons,HideUntil)
  SELECT t.PersonId,t.StudyId,t.AlertClass,t.AlertFacet,t.AlertLevel,t.AlertHeader,t.AlertMessage,t.AlertButtons,t.HideUntil 
  FROM #tempAlerts t;
  
END]]>
	</row>
	<row ProcId="10015" StudyName="*" ProcName="NDV.RuleTSH" ProcDesc="Måling av TSH med 730 dagers intervall hos type-1 diabetikere." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-237869947" LastUpdate="2019-01-03T09:03:16.753Z">
		<![CDATA[CREATE PROCEDURE NDV.RuleTSH( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @LabName VARCHAR(40);
  DECLARE @LabVal FLOAT;     
  DECLARE @LabDate DateTime;
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT; 
  IF ISNULL(dbo.GetLastEnumVal( @PersonId, 'NDV_TYPE' ),-1) <> 1
  BEGIN
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0; 
  END
  ELSE 
  BEGIN                                                         
    SELECT TOP 1 @LabName=lc.LabName,@LabDate=ld.LabDate,@LabVal=ld.NumResult
    FROM dbo.LabData ld 
    JOIN dbo.LabCode lc ON lc.LabCodeId=ld.LabCodeId 
    WHERE ( ld.PersonId=@PersonId ) AND ( ld.NumResult > 0 ) AND ( lc.VarName='S_TSH' )
    ORDER BY ld.LabDate DESC;   
    IF @LabDate IS NULL
    BEGIN
      SET @AlertFacet = 'DataMissing';
      SET @AlertLevel = 1;
    END
    ELSE IF @LabDate < getdate()-730
    BEGIN
      SET @AlertFacet = 'DataOld';
      SET @AlertLevel = 1;
    END
    ELSE
    BEGIN
      SET @AlertFacet = 'DataFound';
      SET @AlertLevel = 0;
    END
  END; 
  DECLARE @AlertHeader VARCHAR(64);
  DECLARE @AlertMessage VARCHAR(512);     
  SET @AlertHeader = dbo.GetTextItem( 'NDV.RuleTSH', @AlertFacet +'.Header' );
  SET @AlertMessage = dbo.GetTextItem( 'NDV.RuleTSH', @AlertFacet );
  IF NOT @LabDate IS NULL                        
  BEGIN
    SET @AlertMessage = REPLACE( @AlertMessage, '@LabDate', dbo.LongTime( @LabDate ) );
    SET @AlertMessage = REPLACE( @AlertMessage, '@LabValue', CONVERT(VARCHAR,@LabVal) );
    SET @AlertMessage = REPLACE( @AlertMessage, '@LabName', @LabName );
  END
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'NDVTSH',@AlertFacet,@AlertHeader,
      @AlertMessage;    
END
]]>
	</row>
	<row ProcId="10016" StudyName="*" ProcName="NDV.RuleCarbCount" ProcDesc="Opplæring i karbohydrattelling hos type-1 diabetikere." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-1760762615" LastUpdate="2019-01-12T06:54:59.073Z">
		<![CDATA[CREATE PROCEDURE NDV.RuleCarbCount( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @TrainDate DateTime;
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT;                      
         
  -- Make sure we have a Type-1 diabetes patient
  
  IF ISNULL(dbo.GetLastEnumVal( @PersonId, 'NDV_TYPE' ),-1) <> 1
  BEGIN
    -- Not relevant for patients without Type-1 diabetes                                                
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0; 
  END
  ELSE 
  BEGIN
    -- Find date where Carbohydrate counting was taught                                               
    SELECT TOP 1 @TrainDate = DTVal 
    FROM dbo.ClinDataPoint cdp
    JOIN dbo.ClinEvent ce ON ce.EventId = cdp.EventId 
    WHERE ( ce.PersonId = @PersonId ) AND ( cdp.ItemId = 5713 )
    ORDER BY DTVal DESC;   
    IF @TrainDate IS NULL
    BEGIN
      SET @AlertFacet = 'DataMissing';
      SET @AlertLevel = 1;
    END
    ELSE
    BEGIN
      SET @AlertFacet = 'DataFound';
      SET @AlertLevel = 0;
    END
  END; 
  DECLARE @AlertHeader VARCHAR(64);
  DECLARE @AlertMessage VARCHAR(512);     
  SET @AlertHeader = dbo.GetTextItem( 'NDV.RuleCarbCount', @AlertFacet +'.Header' );
  SET @AlertMessage = dbo.GetTextItem( 'NDV.RuleCarbCount', @AlertFacet );
  IF NOT @TrainDate IS NULL                        
    SET @AlertMessage = REPLACE( @AlertMessage, '@TrainDate', dbo.LongTime( @TrainDate ) );
  EXEC dbo.AddAlertForPerson @StudyId, @PersonId, @AlertLevel,'CARBCOUNT', @AlertFacet, @AlertHeader, @AlertMessage;    
END]]>
	</row>
	<row ProcId="10017" StudyName="*" ProcName="NDV.RuleConsent" ProcDesc="Manglende samtykke-erklæring." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-496406392" LastUpdate="2019-11-19T10:22:09.710Z">
		<![CDATA[CREATE PROCEDURE NDV.RuleConsent( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT;
  DECLARE @NdvConsent INT;                                           
  DECLARE @StudyName VARCHAR(32);
  DECLARE @DiabetesType INT;  
  SELECT @StudyName = StudName FROM dbo.Study WHERE StudyId=@StudyId;
  SET @DiabetesType = ISNULL(dbo.GetLastEnumVal( @PersonId, 'NDV_TYPE' ), -1 );
  IF @StudyName = 'NDV' AND @DiabetesType=-1 SET @DiabetesType=0;    
  IF @DiabetesType = -1
  BEGIN
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0;
  END
  ELSE
  BEGIN
    SET @NdvConsent = dbo.GetLastEnumVal( @PersonId, 'NDV_CONSENT' );
    IF @NdvConsent IN  (1,2,3) 
    BEGIN
      SET @AlertFacet = 'DataFound';
      SET @AlertLevel = 0;
    END
    ELSE 
    BEGIN
      SET @AlertFacet = 'DataMissing';
      SET @AlertLevel = 3; 
    END
  END;
  EXEC dbo.AddAlertForDSSRule @StudyId,@PersonId,@AlertLevel,'NDVCONSENT',@AlertFacet;    
END]]>
	</row>
	<row ProcId="10018" StudyName="*" ProcName="GBD.RuleNutritionAction" ProcDesc="Kostsamtale gjennomført, tiltakskjema utfylt og signert hvis akt" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-1068857473" LastUpdate="2019-01-03T09:03:17.787Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleNutritionAction( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @LastTiltakDate DateTime;
  DECLARE @LastInnkomstDate DateTime;
  DECLARE @KostLege INT;  
  DECLARE @AlertFacet varchar(16);
  DECLARE @AlertHdr VARCHAR(64);
  DECLARE @AlertMsg VARCHAR(512);
  DECLARE @AlertLevel INT;
  DECLARE @LastInnkomstDateStr VARCHAR(24);
  DECLARE @LastTiltakDateStr VARCHAR(24);     
  
  -- Finn eksisterende signert kostsamtale-skjema
  SET @LastInnkomstDate = dbo.GetLastSignedForm( @StudyId,@PersonId,'SAMTALE_KOST' );
  SET @LastInnkomstDateStr = CONVERT(VARCHAR,@LastInnkomstDate,104);
  SET @KostLege = ISNULL( dbo.GetLastEnumVal( @PersonId, 'KOST_Lege' ), 1 );
  IF ( @LastInnkomstDate IS NULL ) OR ( @KostLege = -1 )
  BEGIN          
    -- Finnes ikke noen signert eller skikkelig utfylt kostsamtale, varsling gult nivå, ekskluder for tiltak. 
    EXEC dbo.AddAlertForDSSRule @StudyId, @PersonId, 2, 'KostSamtale', 'DataMissing';
    EXEC dbo.AddAlertForDSSRule @StudyId, @PersonId, 0, 'KostTiltak', 'Exclude';
  END
  ELSE 
  BEGIN                      
    -- Kostsamtale er funnet, legg til i Alert på debug nivå 
    EXEC dbo.GetAlertText 'KostSamtale', 'DataFound', @AlertHdr OUT, @AlertMsg OUT; 
    SET @AlertMsg = REPLACE( @AlertMsg,'@LastInnkomstDate', @LastInnkomstDateStr );
    EXEC dbo.AddAlertForPerson @StudyId, @PersonId, 0, 'KostSamtale', 'DataFound', @AlertHdr,@AlertMsg;
    -- Nødvendig med tilsyn av lege?
    IF @KostLege = 1
    BEGIN
      -- Det skal være et signert skjema med ernæringstiltak her!
      SELECT @LastTiltakDate = dbo.GetLastSignedForm( @StudyId,@PersonId,'GbdErnaeringTiltak' );
      SET @LastTiltakDateStr = CONVERT(VARCHAR,@LastTiltakDate,104);
      IF ( @LastTiltakDate IS NULL )  
      BEGIN       
        -- Det finnes ikke noe tiltaksskjema i det hele tatt
        SET @LastTiltakDateStr = '';
        SET @AlertLevel = 3;
        SET @AlertFacet = 'DataMissing';
      END                            
      ELSE IF ( @LastTiltakDate < @LastInnkomstDate - 2 )
      BEGIN        
        -- Tiltaksskjema er mye eldre enn innkomstskjema
        SET @AlertLevel = 2;
        SET @AlertFacet = 'DataOld';
      END
      ELSE
      BEGIN
        -- Tiltaksskjema er oppdatert, alt vel.
        SET @AlertLevel = 0;
        SET @AlertFacet = 'DataFound';
      END  
    END
    ELSE
    BEGIN          
      -- Ikke nødvendig med tiltak
      SET @AlertLevel = 0;
      SET @AlertFacet = 'Exclude';
    END;
    EXEC dbo.GetAlertText 'KostTiltak', @AlertFacet, @AlertHdr OUT, @AlertMsg OUT;
    IF NOT @LastTiltakDateStr IS NULL SET @AlertMsg = REPLACE( @AlertMsg,'@LastTiltakDate', @LastTiltakDateStr );
    IF NOT @LastInnkomstDateStr IS NULL SET @AlertMsg = REPLACE( @AlertMsg,'@LastInnkomstDate', @LastInnkomstDateStr );
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'KostTiltak',@AlertFacet,@AlertHdr,@AlertMsg;
  END;
END;]]>
	</row>
	<row ProcId="10019" StudyName="*" ProcName="GBD.RuleTvangsvedtak" ProcDesc="Fornyelse av tvangsvedtak" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" MinVersion="515" ChkSum="18786864" LastUpdate="2019-11-26T18:01:36.353Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleTvangsvedtak( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @EventTime DateTime;
  DECLARE @StopDate DateTime;
  DECLARE @StopDateText VARCHAR(24);
  DECLARE @StopAction INT;
  DECLARE @DaysPastDue INT;    
  DECLARE @ClinFormId INT;
  DECLARE @AlertClass VARCHAR(16);                                         
  DECLARE @AlertHeader VARCHAR(64);
  DECLARE @AlertMessage VARCHAR(512);    
  DECLARE @AlertLevel INT;
  DECLARE @HiddenAlertModifier VARCHAR(30);
  DECLARE cur_vedtak CURSOR FAST_FORWARD FOR   
    SELECT EventTime,StopDate, StopAction,DaysPastDue, ClinFormId FROM GBD.Tvangsvedtak
    WHERE StudyId=@StudyId AND PersonId=@PersonId;
  OPEN cur_vedtak;
  FETCH NEXT FROM cur_vedtak INTO @EventTime,@StopDate,@StopAction,@DaysPastDue,@ClinFormId;
  WHILE @@FETCH_STATUS = 0
  BEGIN            
    SET @AlertMessage = '<a href="about://SelectForm?ClinFormId='+CONVERT(VARCHAR,@ClinFormId)+'">Tvangsvedtak</a> ' + CONVERT(VARCHAR,@EventTime,4);
    SET @AlertClass = 'TVANG#' + CONVERT(VARCHAR,@ClinFormId);
    IF @StopAction <> 1  
    BEGIN                   
      SET @AlertLevel = 0;
      IF @DaysPastDue > 0
        SET @HiddenAlertModifier = 'er avsluttet.';
      ELSE
        SET @HiddenAlertModifier = 'er aktivt.';
      SELECT @AlertHeader = 
      CASE @StopAction 
        WHEN 2 THEN 'Automatisk avslutning'
        WHEN 3 THEN 'Aktivt avsluttet'
        WHEN 4 THEN 'Fornyet vedtak'
        ELSE 'Ukjent håndtering'
      END;
      SET @AlertMessage = @AlertMessage + ' ' + @HiddenAlertModifier + ' Det er ikke bedt om påminnelser i forbindelse med avslutning av dette vedtaket.'; -- meldingstekst endra
    END
    ELSE        
    BEGIN
      SET @StopDateText = ISNULL(CONVERT(VARCHAR,@StopDate,104),'(uspesifisert dato)');
      IF @DaysPastDue > 0 
      BEGIN
        SET @AlertLevel = 3;
        SET @AlertHeader = 'Utgått tvangsvedtak'
        SET @AlertMessage = @AlertMessage + ' utløp ' + @StopDateText + '.  ' + 
          'Dette vedtaket er ikke eksplisitt avsluttet.  Du bør gjenåpne skjemaet og avslutte vedtaket.'; 
      END
      ELSE IF @DaysPastDue >= -21 -- nytt vilkår
      BEGIN                       
        SET @AlertLevel = 2;
        SET @AlertHeader = 'Forny tvangsvedtak';
        SET @AlertMessage = @AlertMessage + ' utløper ' + @StopDateText + '!  Du bør aktivt avslutte dette eller fornye det.';
      END
      ELSE -- ny skjult påminning
      BEGIN
        SET @AlertLevel = 0;
        SET @AlertHeader = 'Aktivt tvangsvedtak';
        SET @AlertMessage = @AlertMessage + ' utløper ' + @StopDateText + '. Du vil få en påminnelse tre uker før utløpsdato.';
      END
    END;    
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@ALertLevel,@AlertClass,'Include',@AlertHeader,@AlertMessage,'TWF';
    FETCH NEXT FROM cur_vedtak INTO @EventTime,@StopDate,@StopAction,@DaysPastDue,@ClinFormId;
  END;
  CLOSE cur_vedtak;
  DEALLOCATE cur_vedtak;
END]]>
	</row>
	<row ProcId="10020" StudyName="*" ProcName="NDV.RuleEyeCheck" ProcDesc="Øyeundersøkelse med maks 730 dagers intervall hos type-1 diabeti" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="1156033144" LastUpdate="2019-01-25T12:25:24.883Z">
		<![CDATA[CREATE PROCEDURE NDV.RuleEyeCheck( @StudyId INT, @PersonId INT ) AS
BEGIN

  DECLARE @EyeCheckDate DateTime;
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT;
  DECLARE @DiabetesType INT;
  DECLARE @DiabetesDebut FLOAT;
  DECLARE @ThisYear FLOAT;
  DECLARE @RuleIsRelevant BIT;
  
  SET @ThisYear = DATEPART( yy, GETDATE() );
  
  SELECT @DiabetesType = dbo.GetLastEnumVal( @PersonId, 'NDV_TYPE' );
  SELECT @DiabetesDebut = dbo.GetLastQuantity( @PersonId, 'NDV_DIAGNOSE_YYYY' );
    
  SET @RuleIsRelevant = 0;
  IF ( @DiabetesType = 1 ) AND ( @ThisYear - ISNULL(@DiabetesDebut,1900) > 5 )
    SET @RuleIsRelevant = 1;
  IF ( ISNULL(@DiabetesType,-1)  IN  (2,3,4) ) 
    SET @RuleIsRelevant = 1;
  IF @RuleIsRelevant = 0 BEGIN
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0;
  END
  ELSE
  BEGIN       
    SELECT @EyeCheckDate = dbo.GetLastDTVal( @PersonId, 'NDV_EYECHECK_DATE' );
    IF @EyeCheckDate IS NULL 
    BEGIN
      SET @AlertFacet = 'DataMissing';
      SET @AlertLevel = 3;
    END
    ELSE IF @EyeCheckDate < getdate()-730 
    BEGIN
      SET @AlertFacet = 'DataOld';
      SET @AlertLevel = 2;
    END
    ELSE BEGIN
      SET @AlertFacet = 'DataFound';
      SET @AlertLevel = 0;
    END 
  END
  DECLARE @AlertHeader VARCHAR(64);
  DECLARE @AlertMessage VARCHAR(512);     
  SET @AlertHeader = dbo.GetTextItem( 'NDV.RuleEyeCheck', @AlertFacet +'.Header' );
  SET @AlertMessage = dbo.GetTextItem( 'NDV.RuleEyeCheck', @AlertFacet );
  IF NOT @EyeCheckDate IS NULL
    SET @AlertMessage = REPLACE( @AlertMessage, '@EyeCheckDate', dbo.MonthYear( @EyeCheckDate ) );
  EXEC dbo.AddAlertForPerson @StudyId,@PersonId,@AlertLevel,'NDVEYE',@AlertFacet,@AlertHeader, @AlertMessage;    
END]]>
	</row>
	<row ProcId="10021" StudyName="*" ProcName="NDV.RuleAutoClose" ProcDesc="Automatisk avslutning av pasienter i NOKLUS Diabetes basert på i" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="187530601" LastUpdate="2019-01-12T06:58:26.080Z">
		<![CDATA[CREATE PROCEDURE NDV.RuleAutoClose( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @DpAvsluttet INT;           
  SELECT TOP 1 @DpAvsluttet = EnumVal 
    FROM dbo.ClinDataPoint cdp 
    JOIN dbo.ClinEvent ce ON ce.EventId = cdp.EventId 
    WHERE ce.PersonId = @PersonId AND cdp.ItemId = 7746
    AND cdp.ObsDate > GETDATE()-1
    ORDER BY ce.EventNum DESC;
  IF @DpAvsluttet = 1
  BEGIN                                   
    -- Set to "Avsluttet" and remove from group.
    UPDATE dbo.StudCase SET FinState = 4, GroupId = NULL 
    WHERE StudyId = @StudyId AND PersonId = @PersonId;
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,1,'NDVAVSLUTT','Include','Avsluttet','Avsluttet på diabetespoliklinikken basert på informasjon fra skjema..';
  END
  ELSE      
    EXEC dbo.AddAlertForPerson @StudyId,@PersonId,0,'NDVAVSLUTT','Exclude','Fortsetter','Ikke avsluttet på diabetespoliklinikken, basert på informasjon fra skjema.';
END]]>
	</row>
	<row ProcId="10022" StudyName="*" ProcName="GBD.RuleMatkort" ProcDesc="Revisjon av matkort på dato som er angitt i forrige matkort." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-2127804112" LastUpdate="2019-01-03T09:03:20.077Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleMatkort( @StudyId INT, @PersonId INT )
AS
BEGIN
  DECLARE @AlertFacet varchar(16);
  DECLARE @AlertLevel INT;
  DECLARE @RevisionDate DateTime;

  SELECT @RevisionDate = dbo.GetLastDTVal( @PersonId,'MAT_Revisjonsdato' );
  IF @RevisionDate IS NULL BEGIN
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0;
  END
  ELSE IF @RevisionDate < GETDATE() BEGIN
    SET @AlertFacet = 'DataOld';
    SET @AlertLevel = 3;
  END
  ELSE BEGIN
    SET @AlertFacet = 'DataFound';
    SET @AlertLevel = 0;
  END;
  EXEC dbo.AddAlertForDSSRule @StudyId, @PersonId, @AlertLevel, 'MATKORT', @AlertFacet;
END;]]>
	</row>
	<row ProcId="10023" StudyName="*" ProcName="GBD.RuleLMG" ProcDesc="Utfylling av legemiddelgjennomgang med 180 dagers intervall." ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-623153698" LastUpdate="2019-01-03T09:03:21.153Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleLMG( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @LastFormDate DateTime;
  DECLARE @AlertFacet varchar(16);
  DECLARE @ActualLevel INT;
  -- Find the last LMG form
  SELECT @LastFormDate = dbo.GetLastSignedForm( @StudyId, @PersonId, 'LMG' );
  IF @LastFormDate IS NULL 
  BEGIN
    SET @ActualLevel = 2;
    SET @AlertFacet = 'DataMissing';
  END
  ELSE 
  BEGIN
    IF DATEDIFF( DAY, @LastFormDate, GETDATE() ) > 180 
    BEGIN
      SET @ActualLevel = 2;
      SET @AlertFacet = 'DataOld';
    END
    ELSE 
    BEGIN
      SET @ActualLevel = 0;
      SET @AlertFacet = 'DataFound';
    END
  END
  EXEC dbo.AddAlertForDSSRule @StudyId, @PersonId, @ActualLevel, 'LMG', @AlertFacet;
END]]>
	</row>
	<row ProcId="10024" StudyName="*" ProcName="NDV.RuleBiobank" ProcDesc="Samtykke til biobank" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="365679438" LastUpdate="2019-11-19T10:22:31.770Z">
		<![CDATA[CREATE PROCEDURE NDV.RuleBiobank( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @AlertFacet VARCHAR(16);
  DECLARE @AlertLevel INT;
  DECLARE @NdvConsent INT;                                           
  DECLARE @StudyName VARCHAR(32);
  DECLARE @DiabetesType INT;  
  SELECT @StudyName = StudName FROM dbo.Study WHERE StudyId=@StudyId;
  SET @DiabetesType = ISNULL(dbo.GetLastEnumVal( @PersonId, 'NDV_TYPE' ), -1 );
  IF @StudyName = 'NDV' AND @DiabetesType=-1 SET @DiabetesType=0;    
  IF @DiabetesType = -1
  BEGIN
    SET @AlertFacet = 'Exclude';
    SET @AlertLevel = 0;
  END
  ELSE
  BEGIN
    SET @NdvConsent = dbo.GetLastEnumVal( @PersonId, 'NDV_CONSENT_BIOBANK' );
    IF @NdvConsent IN  (1,2,3) 
    BEGIN
      SET @AlertFacet = 'DataFound';
      SET @AlertLevel = 0;
    END
    ELSE 
    BEGIN
      SET @AlertFacet = 'DataMissing';
      SET @AlertLevel = 3; 
    END
  END;
  EXEC dbo.AddAlertForDSSRule @StudyId,@PersonId,@AlertLevel,'NDVBIOBANK',@AlertFacet;    
END]]>
	</row>
	<row ProcId="10025" StudyName="*" ProcName="GBD.RuleFallrisikoStratify" ProcDesc="Fallrisikovurdering" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-155464081" LastUpdate="2019-05-03T10:22:42.473Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleFallrisikoStratify (@StudyId INT, @PersonId INT) AS
BEGIN
  IF dbo.GetLastCompleteForm(@StudyId, @PersonId, 'STRATIFY') IS NULL
    EXEC dbo.AddAlertForDSSRule @StudyId, @PersonId, 2, 'STRATIFY', 'DataMissing';
  ELSE
   EXEC dbo.AddAlertForDSSRule @StudyId, @PersonId, 0, 'STRATIFY', 'DataFound';
END]]>
	</row>
	<row ProcId="10026" StudyName="*" ProcName="GBD.RuleLokaliseringsteknologi" ProcDesc="RuleLokaliseringsteknologi" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" MinVersion="18003" ChkSum="1653288713" LastUpdate="2019-01-03T09:03:40.920Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleLokaliseringsteknologi (@StudyId INT, @PersonId INT) AS
BEGIN
    DECLARE @FormName VARCHAR(24) = 'GbdGps';
    DECLARE @FormTitle VARCHAR(128) = dbo.GetMetaFormTitle(@StudyId, @FormName);
    DECLARE @DTVal DATETIME = dbo.GetLastDTValOnForm(@FormName, 1957, @PersonId, 1);

    DECLARE @ScopeName VARCHAR(12) = 'EvalDate';
    DECLARE @AlertHdr VARCHAR(64);
    DECLARE @AlertMsg VARCHAR(512);

    DECLARE @AlertFacet VARCHAR(16) = 'DataFound';
    DECLARE @AlertLevel INT = 0;

    IF (@DTVal IS NOT NULL)
        AND (@DTVal < CONVERT(DATE, GETDATE()))
    BEGIN
        SET @AlertFacet = 'DataOld';
        SET @AlertLevel = 2;

        -- Get Header & Message for specified scope & facet
        EXEC dbo.GetAlertText @ScopeName, @AlertFacet, @AlertHdr OUT, @AlertMsg OUT;

        SET @AlertMsg = REPLACE(@AlertMsg, '@EvalueringDate', CONVERT(VARCHAR, @DTVal, 104));
        SET @AlertMsg = REPLACE(@AlertMsg, '@FormTitle', CONVERT(VARCHAR, @FormTitle));
        SET @AlertMsg = REPLACE(@AlertMsg, '@FormName', CONVERT(VARCHAR, @FormName));

        SET @AlertHdr = @FormTitle;
    END
    ELSE
    BEGIN
        EXEC dbo.GetAlertText @ScopeName, @AlertFacet, @AlertHdr OUT, @AlertMsg OUT;
    END

    EXEC dbo.AddAlertForPerson @StudyId,
        @PersonId,
        @AlertLevel,
        'GPSEVALUERIN',
        @AlertFacet,
        @AlertHdr,
        @AlertMsg;
END]]>
	</row>
	<row ProcId="10027" StudyName="*" ProcName="GBD.RuleMunnhygieneVurdering" ProcDesc="Munnhygiene vurdering" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" MinVersion="18003" ChkSum="833778005" LastUpdate="2019-01-03T09:03:41.713Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleMunnhygieneVurdering (@StudyId INT, @PersonId INT) AS
BEGIN
    DECLARE @FormName VARCHAR(24) = 'GbdMunnhygiene';
    DECLARE @FormTitle VARCHAR(128) = dbo.GetMetaFormTitle(@StudyId, @FormName);
    DECLARE @DTVal DATETIME = dbo.GetLastDTValOnForm(@FormName, 1776, @PersonId, 1);

    DECLARE @ScopeName VARCHAR(12) = 'EvalDate';
    DECLARE @AlertHdr VARCHAR(64);
    DECLARE @AlertMsg VARCHAR(512);

    DECLARE @AlertFacet VARCHAR(16) = 'DataFound';
    DECLARE @AlertLevel INT = 0;

    IF (@DTVal IS NOT NULL)
        AND (@DTVal < CONVERT(DATE, GETDATE()))
    BEGIN
        SET @AlertFacet = 'DataOld';
        SET @AlertLevel = 2;

        -- Get Header & Message for specified scope & facet
        EXEC dbo.GetAlertText @ScopeName, @AlertFacet, @AlertHdr OUT, @AlertMsg OUT;

        -- Replace specific placeholder with data
        SET @AlertMsg = REPLACE(@AlertMsg, '@EvalueringDate', CONVERT(VARCHAR, @DTVal, 104));
        SET @AlertMsg = REPLACE(@AlertMsg, '@FormTitle', CONVERT(VARCHAR, @FormTitle));
        SET @AlertMsg = REPLACE(@AlertMsg, '@FormName', CONVERT(VARCHAR, @FormName));

        SET @AlertHdr = @FormTitle;
    END
    ELSE
    BEGIN
        EXEC dbo.GetAlertText @ScopeName, @AlertFacet, @AlertHdr OUT, @AlertMsg OUT;
    END

    EXEC dbo.AddAlertForPerson @StudyId, @PersonId, @AlertLevel, 'MHVURDERING', @AlertFacet, @AlertHdr, @AlertMsg;
END]]>
	</row>
	<row ProcId="10028" StudyName="*" ProcName="GBD.RuleSaroppfolging" ProcDesc="Såroppfølging" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" MinVersion="18003" ChkSum="1763478353" LastUpdate="2019-09-05T11:37:37.407Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleSaroppfolging (@StudyId INT, @PersonId INT) AS
BEGIN
    DECLARE @FormName VARCHAR(24);
    DECLARE @FormTitle VARCHAR(128);
    DECLARE @DTVal DATETIME;
    DECLARE @SignedAt DATETIME;

    /*    Look for new evaluation date in GbdSaarProsedyre or
        GbdSaarOppfolging. If variable 1384 in GbdSaarOppfolging
        equal 1, evaluation is stopped and Alert is hidden. */
    SELECT TOP (1) @SignedAt = cf.SignedAt
        , @FormTitle = mf.FormTitle
        , @DTVal = cdp.DTVal
    FROM dbo.ClinForm cf
    JOIN dbo.ClinEvent ce ON ce.EventId = cf.EventId
    LEFT JOIN dbo.ClinDataPoint cdp ON cdp.EventId = cf.EventId
    LEFT JOIN dbo.MetaFormItem mfi ON mfi.ItemId = cdp.ItemId
        AND mfi.FormId = cf.FormId
    JOIN dbo.MetaForm mf ON mf.FormId = cf.FormId
    WHERE mf.FormName IN ('GbdSaarProsedyre', 'GbdSaarOppfolging')
    AND cf.FormStatus = 'L'
    AND (cdp.ItemId = 5834
        OR (mf.FormName = 'GbdSaarOppfolging'
                AND cdp.ItemId = 1384
                AND cdp.EnumVal = 1))
    AND ce.StudyId = @StudyId
    AND ce.PersonId = @PersonId
    ORDER BY ce.EventNum DESC, cf.ClinFormId DESC, cdp.ItemId

    DECLARE @ScopeName VARCHAR(12) = 'EvalDate';
    DECLARE @AlertHdr VARCHAR(64);
    DECLARE @AlertMsg VARCHAR(512);

    DECLARE @AlertFacet VARCHAR(16) = 'DataFound';
    DECLARE @AlertLevel INT = 0;

    IF (@DTVal IS NOT NULL)
        AND (@DTVal < CONVERT(DATE, GETDATE()))
    BEGIN
        SET @AlertFacet = 'DataOld';
        SET @AlertLevel = 2;

        EXEC dbo.GetAlertText @ScopeName,
        @AlertFacet,
        @AlertHdr OUT,
        @AlertMsg OUT;

        SELECT @FormName = FormName,
                @FormTitle = FormTitle
        FROM dbo.MetaForm
        WHERE FormName = 'GbdSaarOppfolging';

        SET @AlertMsg = REPLACE(@AlertMsg, '@EvalueringDate', CONVERT(VARCHAR, @DTVal, 104));
        SET @AlertMsg = REPLACE(@AlertMsg, '@FormTitle', CONVERT(VARCHAR, @FormTitle));
        SET @AlertMsg = REPLACE(@AlertMsg, '@FormName', CONVERT(VARCHAR, @FormName));
        SET @AlertMsg = REPLACE(@AlertMsg, '@SignedDate', CONVERT(VARCHAR, @SignedAt, 104));

        SET @AlertHdr = @FormTitle;
    END
    ELSE
    BEGIN
        EXEC dbo.GetAlertText @ScopeName,
        @AlertFacet,
        @AlertHdr OUT,
        @AlertMsg OUT;
    END

    EXEC dbo.AddAlertForPerson @StudyId
    , @PersonId
    , @AlertLevel
    , 'SAROPPFOLGIN'
    , @AlertFacet
    , @AlertHdr
    , @AlertMsg;
END]]>
	</row>
	<row ProcId="10029" StudyName="*" ProcName="GBD.RuleSamtykkekompetanse" ProcDesc="Samtykkekompetanse" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" MinVersion="18003" ChkSum="-654589176" LastUpdate="2019-01-03T09:03:43.467Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleSamtykkekompetanse (@StudyId INT, @PersonId INT) AS
BEGIN
    DECLARE @FormName VARCHAR(24) = 'GbdSamtykkeKompetanse';
    DECLARE @FormTitle VARCHAR(128) = dbo.GetMetaFormTitle(@StudyId, @FormName);
    DECLARE @DTVal DATETIME = dbo.GetLastDTValOnForm(@FormName, 1154, @PersonId, 1);

    -- TextItems
    DECLARE @ScopeName VARCHAR(12) = 'EvalDate';
    DECLARE @AlertHdr VARCHAR(64);
    DECLARE @AlertMsg VARCHAR(512);

    DECLARE @AlertFacet VARCHAR(16) = 'DataFound';
    DECLARE @AlertLevel INT = 0;

    IF (@DTVal IS NOT NULL)
        AND (@DTVal < CONVERT(DATE, GETDATE()))
    BEGIN
        SET @AlertFacet = 'DataOld';
        SET @AlertLevel = 2;

        -- Get text (Header & Message) for specified class & keyword
        EXEC dbo.GetAlertText @ScopeName, @AlertFacet, @AlertHdr OUT, @AlertMsg OUT;

        SET @AlertMsg = REPLACE(@AlertMsg, '@EvalueringDate', CONVERT(VARCHAR, @DTVal, 104));
        SET @AlertMsg = REPLACE(@AlertMsg, '@FormTitle', CONVERT(VARCHAR, @FormTitle));
        SET @AlertMsg = REPLACE(@AlertMsg, '@FormName', CONVERT(VARCHAR, @FormName));

        SET @AlertHdr = @FormTitle;
    END
    ELSE
    BEGIN
        EXEC dbo.GetAlertText @ScopeName, @AlertFacet, @AlertHdr OUT, @AlertMsg OUT;
    END

    EXEC dbo.AddAlertForPerson @StudyId,
        @PersonId,
        @AlertLevel,
        'SAMTYKKEKOMP',
        @AlertFacet,
        @AlertHdr,
        @AlertMsg;
END]]>
	</row>
	<row ProcId="10030" StudyName="GBD" ProcName="GBD.RuleBarthel" ProcDesc="Barthel hver 6. måned" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="1349219282" LastUpdate="2019-05-03T10:23:05.787Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleBarthel( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicForm @StudyId,@PersonId,'BARTHEL',180,2;
END;
]]>
	</row>
	<row ProcId="10031" StudyName="GBD" ProcName="GBD.RuleKDV" ProcDesc="KDV hver 6. måned" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-1792269599" LastUpdate="2019-05-03T10:23:13.800Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleKDV( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicForm @StudyId,@PersonId,'KDV',180,2;
END;
]]>
	</row>
	<row ProcId="10032" StudyName="GBD" ProcName="GBD.RuleQualid" ProcDesc="Qualid hver 6. måned" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" ChkSum="-368886222" LastUpdate="2019-05-03T10:23:22.007Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleQualid( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicForm @StudyId,@PersonId,'QUALID',180,2
END;]]>
	</row>
	<row ProcId="10033" StudyName="NDV" ProcName="NDV.RuleBiobankLabtest" ProcDesc="Påminnelse om å ta prøve til biobanken for de som har samtykket" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" MinVersion="18000" HelpText="Regelen kjøres i Helse Vest, men ikke i Stavanger (setter AlertLevel=0)" ChkSum="-541136557" LastUpdate="2019-11-05T19:51:55.377Z">
		<![CDATA[CREATE PROCEDURE NDV.RuleBiobankLabtest( @StudyId INT, @PersonId INT ) AS
BEGIN
  DECLARE @AlertLevel INT = 0;
  DECLARE @AlertFacet VARCHAR(16) = 'Undefined';
  IF DEFAULT_DOMAIN() IN ('DIPS-AD', 'HS' ) 
  BEGIN
    IF dbo.GetLastEnumVal( @PersonId, 'NDV_CONSENT_BIOBANK' ) = 1
    BEGIN 
      IF EXISTS 
        ( 
          SELECT 1 FROM dbo.LabData ld 
          JOIN dbo.LabCode lc ON lc.LabCodeId = Ld.LabCodeId
          WHERE ld.PersonId = @PersonId AND lc.LabClassId = 1084
        )
      BEGIN
        SET @AlertLevel = 1;
        SET @AlertFacet = 'DataFound';
      END
      ELSE
      BEGIN
        SET @AlertLevel = 3;
        SET @AlertFacet = 'DataMissing';
      END
    END
    ELSE
    BEGIN
      SET @AlertFacet = 'Exclude';
    END;
  END;
  IF DB_NAME() = 'EQUALEDC' SET @AlertLevel = 0;
  EXEC dbo.AddAlertForDSSRule @StudyId, @PersonId, @AlertLevel, 'NDVBIOLAB', @AlertFacet;
END]]>
	</row>
	<row ProcId="10034" StudyName="GBD" ProcName="GBD.RuleNEWS2" ProcDesc="Fyll ut NEWS2 med maks 30 dagers intervall" ProcParams=":StudyId,:PersonId" ListId="RULE" GrantTo="public" MinVersion="18000" ChkSum="-1876884125" LastUpdate="2019-11-05T19:53:20.390Z">
		<![CDATA[CREATE PROCEDURE GBD.RuleNEWS2( @StudyId INT, @PersonId INT ) AS
BEGIN
  EXEC dbo.RulePeriodicForm @StudyId, @PersonId, 'NEWS2', 30, 2;
END
]]>
	</row>
</DbProcList>
